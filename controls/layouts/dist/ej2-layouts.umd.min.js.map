{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = currentBar.parentElement.children[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        var prevPane = this.getPrevPane(this.currentSeparator, this.order);\n        var nextPane = this.getNextPane(this.currentSeparator, this.order);\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.isDynamicallyUpdated = false;\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel .e-panel-container .e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!this.isDynamicallyUpdated) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels && !this.isDynamicallyUpdated) {\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","querySelectorAll","wireResizeEvents","onMouseMove","window","bind","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","isBlazor","event","prevPaneIndex","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childNodes","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","isDynamicallyUpdated","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","removeAttribute","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"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"}