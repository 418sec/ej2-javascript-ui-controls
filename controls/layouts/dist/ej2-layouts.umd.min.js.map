{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboardlayout/dashboardlayout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_LINE = 'e-split-line';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\n/**\n * Interface to configure pane properties such as its content, size, min, max, and resizable.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                var newVal = Object(newProp.paneSettings[index])[property];\n                                index = (this.enableRtl) ? (this.allBars.length - 1) - index : index;\n                                if (property === 'content') {\n                                    this.allPanes[index].innerHTML = '';\n                                    this.setTemplate(newVal, this.allPanes[index]);\n                                }\n                                if (property === 'resizable') {\n                                    EventHandler.remove(this.allBars[index], 'mousedown', this.onMouseDown);\n                                    if (newVal) {\n                                        EventHandler.add(this.allBars[index], 'mousedown', this.onMouseDown, this);\n                                        this.currentSeparator = this.allBars[index];\n                                        if (this.isResizable()) {\n                                            this.showResizer(this.allBars[index]);\n                                            this.allBars[index].classList.add(RESIZABLE_BAR);\n                                        }\n                                    }\n                                    else {\n                                        this.hideResizer(this.allBars[index]);\n                                        this.allBars[index].classList.remove(RESIZABLE_BAR);\n                                    }\n                                }\n                                if (property === 'size') {\n                                    this.allPanes[index].style.flexBasis = newVal;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setRTL(this.enableRtl);\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' && this.paneSettings[paneIndex].resizable) {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            if (this.orientation === 'Horizontal') {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width);\n            }\n            else {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n            }\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className !== '') {\n            addClass([this.element], className.split(' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        this.element.removeAttribute('aria-orientation');\n        this.element.setAttribute('aria-orientation', orientation);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl && this.orientation === 'Horizontal') ? ((order - 1) / 2) + 1 : (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl && this.orientation === 'Horizontal') ? (order - 1) / (2) : ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            resizeHanlder.style.width = sizeValue;\n        }\n        else {\n            resizeHanlder.style.height = sizeValue;\n        }\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        if (this.orientation === 'Horizontal') {\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        else {\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            separator.style.height = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        this.addMouseActions(separator);\n        this.addResizeHandler(separator);\n        return separator;\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                var separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                }\n                else {\n                    this.hideResizer(separator);\n                }\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        separator.addEventListener('mouseover', function () {\n            addClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = !this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        var isSeparatorLine = true;\n        if (target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR_LINE)) {\n            isSeparatorLine = false;\n        }\n        return isSeparatorLine;\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n        var target = e.target;\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.wireResizeEvents();\n        if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n        }\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return (this.enableRtl) ? prePaneIndex + 1 : prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return (this.enableRtl) ? nextPaneIndex : nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString();\n    };\n    Splitter.prototype.boundingRectValues = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.getBoundingClientRect().width :\n            pane.getBoundingClientRect().height;\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.paneSettings.length < 1) {\n            this.prePaneDimenson = this.boundingRectValues(this.previousPane);\n            this.nextPaneDimension = this.boundingRectValues(this.nextPane);\n            return;\n        }\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        var templateFn = compile(template);\n        var fromElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            fromElements.push(item);\n        }\n        append([].slice.call(fromElements), toElement);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.element.setAttribute('aria-orientation', this.orientation);\n        this.element.setAttribute('role', 'splitter');\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // to get only div element\n                if (child[i].nodeType === 1) {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        detach(this.element);\n        this.element = this.wrapper;\n        this.wrapperParent.appendChild(this.wrapper);\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        if (this.orientation === 'Horizontal') {\n            addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n        }\n        else {\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        }\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler } from '@syncfusion/ej2-base';\n// constant class definitions\nvar ROOT = 'e-dashboard-layout';\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        addClass([this.element], [ROOT]);\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panels[i].id = 'layout_' + this.panelID.toString();\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue, className) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.panels = [];\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var colValue = parseInt(panelElement.getAttribute('data-col'), 10);\n                this.setPanelPosition(panelElement, rowValue, colValue);\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i]);\n                this.panelCollection.push(panel_1);\n                this.setMinMaxValues(this.panels[i]);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.cloneArray = this.sortedArray;\n        this.checkColumnValue = this.maxColumnValue;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n        if (!(this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches)) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches)) {\n            this.cellSize[1] = Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = 1;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        if (this.columns > 1) {\n            maxCol = this.columns;\n            return maxCol;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeX + this.panels[i].col > maxCol) {\n                maxCol = this.panels[i].sizeX + this.panels[i].col;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxCol = this.columns;\n        }\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            this.renderTemplate(panelModel.header, headerTemplateElement);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        if (panelModel.content && panelModel.content) {\n            this.panelBody = this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            this.renderTemplate(panelModel.content, this.panelBody);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: parseInt(panelElement.getAttribute('data-sizex'), 10),\n            sizeY: parseInt(panelElement.getAttribute('data-sizey'), 10),\n            minSizeX: parseInt(panelElement.getAttribute('data-minsizex'), 10),\n            minSizeY: parseInt(panelElement.getAttribute('data-minsizey'), 10),\n            maxSizeX: parseInt(panelElement.getAttribute('data-maxsizex'), 10),\n            maxSizeY: parseInt(panelElement.getAttribute('data-maxsizey'), 10),\n            row: parseInt(panelElement.getAttribute('data-row'), 10),\n            col: parseInt(panelElement.getAttribute('data-col'), 10),\n            id: panelElement.getAttribute('id'),\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        this.panels.push(model);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], 'mousedown', this.downResizeHandler, this);\n                EventHandler.add(document, 'mouseup', this.upResizeHandler, this);\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.onResize.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.resizeCalled = false;\n        var el = (e.currentTarget).closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        EventHandler.add(document, 'mousemove', this.moveResizeHandler, this);\n    };\n    ;\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = this.moveTarget.closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        var oldProp = [this.elementWidth, this.elementHeight];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        var dY = diffY;\n        var dX = diffX;\n        if (this.handleClass && this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                diffY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                diffY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            this.elementHeight += diffY;\n        }\n        if (this.handleClass && this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                diffX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                diffX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            this.elementWidth += diffX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            el.setAttribute('data-sizeX', this.getCellInstance(el.id).sizeX.toString());\n            el.setAttribute('data-sizeY', this.getCellInstance(el.id).sizeY.toString());\n            el.setAttribute('data-row', this.getCellInstance(el.id).row.toString());\n            el.setAttribute('data-col', this.getCellInstance(el.id).col.toString());\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = this.upTarget.closest('.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            EventHandler.remove(document, 'mousemove', this.moveResizeHandler);\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        var row = item.row;\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth, true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight, true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.getItems(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            item.row = row;\n            item.col = col;\n            item.sizeX = sizeX;\n            item.sizeY = sizeY;\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        return Math.ceil(pixels / curColWidth);\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        return Math.ceil(pixels / this.cellSize[1]);\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisionItems(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                var isSamePosition = this.oldRowCol[item.id].col === columnValue &&\n                    this.oldRowCol[item.id].row === rowValue;\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (oldRow && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.getCellInstance(item.id).row = rowValue;\n            this.getCellInstance(item.id).col = columnValue;\n            item.setAttribute('data-col', this.getCellInstance(item.id).col.toString());\n            item.setAttribute('data-row', this.getCellInstance(item.id).row.toString());\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.getRowColumn();\n        this.setHeightWidth();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.onResize = function () {\n        if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.childElementCount; i++) {\n                    var ele = this.element.children[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    cellInstance.row = row;\n                    cellInstance.col = col;\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.getRowColumn();\n                    this.setHeightWidth();\n                }\n            }\n            this.panelResponsiveUpdate();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var panelElements = this.element.querySelectorAll('.e-panel');\n        this.updatedRows = panelElements.length;\n        for (var i = 0; i < panelElements.length; i++) {\n            if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                setStyle(panelElements[i], { 'width': '100%' });\n                panelElements[i].style.height = ' ' + (this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                var panelModel = this.getCellInstance(panelElements[i].id);\n                panelModel.col = 0;\n                panelModel.row = i;\n                this.setPanelPosition(panelElements[i], panelModel.row, panelModel.col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id, '');\n        var dashBoardCell = this.renderPanels(cellElement, panel);\n        this.element.appendChild(cellElement);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.calculateMaxColumnValue(this.panels);\n        if (this.columns < this.maxColumnValue) {\n            this.columns = this.maxColumnValue;\n        }\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            panel.sizeX = panel.minSizeX;\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            panel.sizeX = panel.maxSizeX;\n        }\n        else if (panel.sizeX > this.columns) {\n            panel.sizeX = this.columns;\n        }\n        else {\n            panel.sizeX = panel.sizeX;\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            panel.sizeY = panel.minSizeY;\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            panel.sizeY = panel.maxSizeY;\n        }\n        else {\n            panel.sizeY = panel.sizeY;\n        }\n    };\n    DashboardLayout.prototype.calculateMaxColumnValue = function (panels) {\n        for (var count = 0; count < panels.length; count++) {\n            var panel_2 = panels[count];\n            if (isUndefined(this.maxColumnValue)) {\n                this.maxColumnValue = panel_2.col + panel_2.sizeX;\n            }\n            else if (this.maxColumnValue < panel_2.col) {\n                this.maxColumnValue = panel_2.col + panel_2.sizeX;\n            }\n            if (this.maxColumnValue < panel_2.col + panel_2.sizeX) {\n                this.maxColumnValue = panel_2.sizeX + panel_2.col;\n            }\n        }\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        var isValid = true;\n        if (this.panels.length === 1) {\n            if (isNullOrUndefined(this.panels[0].content)) {\n                isValid = false;\n            }\n            else {\n                isValid = true;\n            }\n        }\n        if (this.element.querySelectorAll('.e-panel').length > 0 || (isValid && (this.panels.length > 0))) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                var cell = this.renderCell(cells[j]);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.updatePanelLayout(cell, cells[j]);\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisionItems = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisionItems(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisionItems(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisionItems(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                var checkValues = this.getColumnValues(this.checkingElement);\n                var eleValues = this.getColumnValues(ele);\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisionItems(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                var subValues = this.getColumnValues(this.checkingElement);\n                var eleValues = this.getColumnValues(ele);\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.getColumnValues = function (element) {\n        var colValues = [];\n        var colValue = parseInt(element.getAttribute('data-col'), 10);\n        var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n        for (var i = colValue; i < colValue + sizeXValue; i++) {\n            colValues.push(i);\n        }\n        return colValues;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_1 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_2 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_1.columns - 1; column >= 0; column--) {\n                _loop_2(column);\n            }\n        };\n        var this_1 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_1(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisionItems(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisionItems(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.getCellInstance(element_1.id).row = rowValue;\n                this.getCellInstance(element_1.id).col = colValue;\n                element_1.setAttribute('data-row', rowValue.toString());\n                element_1.setAttribute('data-col', colValue.toString());\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisionItems(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisionItems(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisionItems(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        panelModel.row = direction === 0 ? eleSwapRow : collisionItemsRow + 1;\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.getCellInstance(collisions[count].id).row = collisionItemsRow;\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisionItems(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        initialModel[i].setAttribute('data-col', this.spacedColumnValue.toString());\n                        initialModel[i].setAttribute('data-row', this.spacedRowValue.toString());\n                        model.col = this.spacedColumnValue;\n                        model.row = this.spacedRowValue;\n                        this.topAdjustable = false;\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    overlapElementModel.row = overlapElementModel.row + 1;\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    panelModel.col = colValue;\n                    panelModel.row = overlapElementModel.row;\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisionItems(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.updatePanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisionItems(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                panelModel.col = colValue;\n                panelModel.row = updatedRow;\n                this.updatePanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        panelModel.col = colValue;\n        panelModel.row = updatedRow;\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_3 = function (p) {\n                    var rowVal = parseInt(this_2.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_2.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_2.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_2.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_2.collisionItems(rowVal, colValue_1, sizeX, sizeY, this_2.overlapSubElementClone);\n                    if (this_2.mainElement && collisionModels1.indexOf(this_2.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_2.mainElement), 1);\n                    }\n                    var proxy = this_2;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_2.updateRowColumn(rowVal, this_2.overlapElement, this_2.overlapSubElementClone[p]);\n                    }\n                };\n                var this_2 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_3(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles || [southEast];\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            addClassValue = double;\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        element.setAttribute('data-sizex', panelModel.sizeX.toString());\n        element.setAttribute('data-sizey', panelModel.sizeY.toString());\n        if (!isNullOrUndefined(panelModel.row)) {\n            element.setAttribute('data-row', panelModel.row.toString());\n        }\n        if (!isNullOrUndefined(panelModel.col)) {\n            element.setAttribute('data-col', panelModel.col.toString());\n        }\n        if (!isNullOrUndefined(panelModel.minSizeX)) {\n            element.setAttribute('data-minSizeX', panelModel.minSizeX.toString());\n        }\n        if (!isNullOrUndefined(panelModel.minSizeY)) {\n            element.setAttribute('data-minSizeY', panelModel.minSizeY.toString());\n        }\n        if (!isNullOrUndefined(panelModel.maxSizeX)) {\n            element.setAttribute('data-maxSizeX', panelModel.maxSizeX.toString());\n        }\n        if (!isNullOrUndefined(panelModel.maxSizeY)) {\n            element.setAttribute('data-maxSizeY', panelModel.maxSizeY.toString());\n        }\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisionItems(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.getItems(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.oldRowCol[args.element.id].row = _this.getCellInstance(args.element.id).row = row;\n                            _this.oldRowCol[args.element.id].col = _this.getCellInstance(args.element.id).col = col;\n                            args.element.setAttribute('data-col', col.toString());\n                            args.element.setAttribute('data-row', row.toString());\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.getCellInstance(args.element.id).row = _this.oldRowCol[args.element.id].row;\n                            _this.getCellInstance(args.element.id).col = _this.oldRowCol[args.element.id].col;\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.moveItemsUpwards();\n                        _this.updateOldRowColumn();\n                        _this.sortedPanel();\n                        _this.cloneArray = _this.sortedArray;\n                        _this.cloneObject = JSON.parse(JSON.stringify(_this.oldRowCol));\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            _this.trigger('change', changedPanels);\n                        }\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.trigger('drag', args);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        if (args.element.offsetWidth !== this.setXYDimensions(this.getCellInstance(args.element.id))[1]) {\n            this.cellSize[0] = parseInt(args.element.style.width, 10) / sizeX;\n            this.cellSize[1] = parseInt(args.element.style.height, 10) / sizeY;\n        }\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.getCellInstance(args.element.id).row = row;\n        this.getCellInstance(args.element.id).col = col;\n        var panelModel = this.getCellInstance(args.element.id);\n        var itemsInTheWay;\n        itemsInTheWay = this.getItems(row, col, panelModel.sizeX, panelModel.sizeY, args.element);\n        var hasItemsInTheWay = itemsInTheWay.length !== 0;\n        if (this.allowPushing) {\n            args.element.setAttribute('data-col', col.toString());\n            args.element.setAttribute('data-row', row.toString());\n            this.getCellInstance(args.element.id).row = row;\n            this.getCellInstance(args.element.id).col = col;\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisionItems(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.getCellInstance(args.element.id).row = row;\n            this.getCellInstance(args.element.id).col = col;\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.getCellInstance(args.element.id).row = row;\n            this.getCellInstance(args.element.id).col = col;\n            args.element.setAttribute('data-col', col.toString());\n            args.element.setAttribute('data-row', row.toString());\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getItems = function (row, column, sizeX, sizeY, elements) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (elements && !(elements instanceof Array)) {\n            elements = [elements];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, column + w, elements);\n                if (item && (!elements || elements.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        if (args.element.offsetWidth !== this.setXYDimensions(this.getCellInstance(args.element.id))[1]) {\n            this.cellSize[1] = parseInt(args.element.style.height, 10) / sizeY;\n            this.cellSize[0] = parseInt(args.element.style.width, 10) / sizeX;\n        }\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panels.push(panel);\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        var cell = this.renderCell(panel);\n        this.oldRowCol[panel.id] = { row: panel.row, col: panel.col };\n        this.cloneObject[panel.id] = { row: panel.row, col: panel.col };\n        this.updateOldRowColumn();\n        this.setMinMaxValues(panel);\n        this.element.appendChild(cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panel.row, panel.col);\n            this.updatePanelLayout(cell, panel);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging) {\n            var subCollection_1 = [];\n            this.panelCollection.forEach(function (item) {\n                if (item.id === panel.id) {\n                    subCollection_1.push(item);\n                }\n            });\n            this.enableDraggingContent(subCollection_1);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n        this.bindEvents();\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        panelInstance.row = row;\n        panelInstance.col = col;\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns;\n        }\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        ele.setAttribute('data-col', col.toString());\n        ele.setAttribute('data-row', row.toString());\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.getRowColumn();\n        this.setHeightWidth();\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n        this.movePanelCalled = false;\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        panelInstance.sizeX = sizeX;\n        panelInstance.sizeY = sizeY;\n        this.setMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        ele.setAttribute('data-sizeX', panelInstance.sizeX.toString());\n        ele.setAttribute('data-sizeY', panelInstance.sizeY.toString());\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateOldRowColumn();\n        this.moveItemsUpwards();\n        this.sortedPanel();\n        this.getRowColumn();\n        this.setHeightWidth();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], [ROOT]);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            var ele = this.panelCollection[i];\n        }\n        this.element.innerHTML = '';\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, 'mousedown', this.downResizeHandler);\n                            EventHandler.remove(document, 'mouseup', this.upResizeHandler);\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([0, 0])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([{}], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","paneCounts","index","parseInt","changedPropsCount","j","property","newVal","innerHTML","setTemplate","EventHandler","remove","onMouseDown","add","currentSeparator","isResizable","showResizer","hideResizer","style","flexBasis","setRTL","enableRtl","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","createSplitPane","addSeparator","getPanesDimensions","api","value","dataIndex","getAttribute","isNullOrUndefined","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","attribute","slice","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","select","sizeValue","seaprator","splitBar","selectAll","resizeBar","isVertical","removeAttribute","setAttribute","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","addMouseActions","childCount","clonedEle","parentNode","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","addEventListener","getEventType","e","indexOf","updateCurrentSeparator","isSeparator","isSeparatorLine","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","document","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","preventDefault","getPaneDetails","eventArgs","event","pane","previousPane","nextPane","cancel","trigger","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","paneValue","prePaneIndex","nextPaneIndex","prevPaneIndex","getPaneHeight","boundingRectValues","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","fromElements","compile","templateFn","item","append","childElement","nodeType","destroy","detach","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","panels","id","row","col","calculateCellSize","createPanelElement","idValue","ele","getRowColumn","setHeightWidth","childElementCount","panelElements","panelElement","rowValue","colValue","setPanelPosition","getInlinePanels","maxCol","maxRow","querySelector","panel_1","renderPanels","setMinMaxValues","setHeightAndWidth","tempObject","mediaQuery","window","matchMedia","matches","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","allowFloating","moveItemsUpwards","updateOldRowColumn","cloneArray","checkColumnValue","maxColumnValue","cloneObject","JSON","parse","stringify","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","sizeY","columns","sizeX","getElementById","createSubElement","templateParser","trim","error","renderTemplate","appendElement","templateElements","cellElement","panelModel","panelContent","disablePanel","header","headerTemplateElement","panelBody","model","minSizeX","minSizeY","maxSizeX","maxSizeY","isUndefined","resizeEvents","allowResizing","downResizeHandler","upResizeHandler","onResize","bind","el","closest","args","downTarget","currentTarget","shadowEle","lastMouseX","lastMouseY","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","moveResizeHandler","getCellSize","moveTarget","maxLeft","oldSizeX","oldSizeY","handleArray","handleClass","diffX","diffY","dY","dX","getMinHeight","getMinWidth","getResizeRowColumn","mainElement","upTarget","pixelsToColumns","pixelsToRows","getItems","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","availableRow","availableColumn","collisionItems","columnValue","ignoreItems","column","undefined","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","updatedRows","setStyle","heightValue","widthValue","getComputedStyle","setXYDimensions","renderCell","panel","dashBoardCell","setXYAttributes","calculateMaxColumnValue","xValue","count","panel_2","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","forEach","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","getColumnValues","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","colValues","sortCollisionItems","_loop_1","_loop_2","this_1","updatedModels","adjust","resetLayout","collisions","addPanelCalled","element_1","checkCollision","swapAvailability","available","eleModel","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","updatePanel","clone","proxy_2","overlapElementRow1","m","_loop_3","rowVal","this_2","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","drag","onDragStart","cloneModels","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","elements","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","subCollection_1","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","setProperties"],"mappings":"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"}