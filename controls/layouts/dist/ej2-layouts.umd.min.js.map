{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = currentBar.parentElement.children[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.isDynamicallyUpdated = false;\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel .e-panel-container .e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!this.isDynamicallyUpdated) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels && !this.isDynamicallyUpdated) {\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","querySelectorAll","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","isBlazor","event","prevPaneIndex","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childNodes","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","isDynamicallyUpdated","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","removeAttribute","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"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"}