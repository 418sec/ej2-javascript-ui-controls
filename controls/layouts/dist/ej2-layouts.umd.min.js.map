{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_LINE = 'e-split-line';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\n/**\n * Interface to configure pane properties such as its content, size, min, max, and resizable.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                var newVal = Object(newProp.paneSettings[index])[property];\n                                index = (this.enableRtl) ? (this.allBars.length - 1) - index : index;\n                                if (property === 'content') {\n                                    this.allPanes[index].innerHTML = '';\n                                    this.setTemplate(newVal, this.allPanes[index]);\n                                }\n                                if (property === 'resizable') {\n                                    EventHandler.remove(this.allBars[index], 'mousedown', this.onMouseDown);\n                                    if (newVal) {\n                                        EventHandler.add(this.allBars[index], 'mousedown', this.onMouseDown, this);\n                                        this.currentSeparator = this.allBars[index];\n                                        if (this.isResizable()) {\n                                            this.showResizer(this.allBars[index]);\n                                            this.allBars[index].classList.add(RESIZABLE_BAR);\n                                        }\n                                    }\n                                    else {\n                                        this.hideResizer(this.allBars[index]);\n                                        this.allBars[index].classList.remove(RESIZABLE_BAR);\n                                    }\n                                }\n                                if (property === 'size') {\n                                    this.allPanes[index].style.flexBasis = newVal;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setRTL(this.enableRtl);\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' && this.paneSettings[paneIndex].resizable) {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            if (this.orientation === 'Horizontal') {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width);\n            }\n            else {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n            }\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className !== '') {\n            addClass([this.element], className.split(' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        this.element.removeAttribute('aria-orientation');\n        this.element.setAttribute('aria-orientation', orientation);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl && this.orientation === 'Horizontal') ? ((order - 1) / 2) + 1 : (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl && this.orientation === 'Horizontal') ? (order - 1) / (2) : ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            resizeHanlder.style.width = sizeValue;\n        }\n        else {\n            resizeHanlder.style.height = sizeValue;\n        }\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        if (this.orientation === 'Horizontal') {\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        else {\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            separator.style.height = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        this.addMouseActions(separator);\n        this.addResizeHandler(separator);\n        return separator;\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                var separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                }\n                else {\n                    this.hideResizer(separator);\n                }\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        separator.addEventListener('mouseover', function () {\n            addClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = !this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        var isSeparatorLine = true;\n        if (target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR_LINE)) {\n            isSeparatorLine = false;\n        }\n        return isSeparatorLine;\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n        var target = e.target;\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.wireResizeEvents();\n        if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n        }\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return (this.enableRtl) ? prePaneIndex + 1 : prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return (this.enableRtl) ? nextPaneIndex : nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString();\n    };\n    Splitter.prototype.boundingRectValues = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.getBoundingClientRect().width :\n            pane.getBoundingClientRect().height;\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.paneSettings.length < 1) {\n            this.prePaneDimenson = this.boundingRectValues(this.previousPane);\n            this.nextPaneDimension = this.boundingRectValues(this.nextPane);\n            return;\n        }\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        var templateFn = compile(template);\n        var fromElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            fromElements.push(item);\n        }\n        append([].slice.call(fromElements), toElement);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.element.setAttribute('aria-orientation', this.orientation);\n        this.element.setAttribute('role', 'splitter');\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // to get only div element\n                if (child[i].nodeType === 1) {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        detach(this.element);\n        this.element = this.wrapper;\n        this.wrapperParent.appendChild(this.wrapper);\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        if (this.orientation === 'Horizontal') {\n            addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n        }\n        else {\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        }\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","paneCounts","index","parseInt","changedPropsCount","j","property","newVal","innerHTML","setTemplate","EventHandler","remove","onMouseDown","add","currentSeparator","isResizable","showResizer","hideResizer","style","flexBasis","setRTL","enableRtl","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","createSplitPane","addSeparator","getPanesDimensions","api","value","dataIndex","getAttribute","isNullOrUndefined","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","attribute","slice","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","select","sizeValue","seaprator","splitBar","selectAll","resizeBar","isVertical","removeAttribute","setAttribute","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","addMouseActions","childCount","clonedEle","parentNode","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","addEventListener","getEventType","e","indexOf","updateCurrentSeparator","isSeparator","isSeparatorLine","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","document","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","preventDefault","getPaneDetails","eventArgs","event","pane","previousPane","nextPane","cancel","trigger","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","paneValue","prePaneIndex","nextPaneIndex","prevPaneIndex","getPaneHeight","boundingRectValues","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","fromElements","compile","templateFn","item","append","childElement","nodeType","destroy","detach","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component"],"mappings":"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"}