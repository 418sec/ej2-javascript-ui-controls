{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + this.separatorSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < this.separatorSize) ? '0px' :\n                        (nextPaneSize - this.separatorSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < this.separatorSize) ? '0px' :\n                        (prePaneSize - this.separatorSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + this.separatorSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        var index = this.getSeparatorIndex(this.currentSeparator);\n        var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n        var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n        var isNextpaneExpanded = this.nextPane.classList.contains(EXPAND_PANE);\n        var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n        if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' && event.keyCode === 39) ||\n            (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n            && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed)) {\n            this.checkPaneSize(event);\n            this.triggerResizing(event);\n        }\n        else if (event.keyCode === 13 && this.paneSettings[index].collapsible) {\n            if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                this.collapse(index);\n            }\n            else {\n                this.expand(index);\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            if (this.allPanes.length <= 2) {\n                this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n            }\n            else {\n                var targetEle = void 0;\n                var lastBarIndex = (index === this.allBars.length);\n                var barIndex = lastBarIndex ? index - 1 : index;\n                if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                    targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n                }\n                else {\n                    targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                        this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n                }\n                this.allPanes[index].classList.add(PANE_HIDDEN);\n                this.allPanes[index].classList.add(COLLAPSE_PANE);\n                this.allPanes[index].setAttribute('aria-expanded', 'false');\n                this.allPanes[index].style.flexGrow = '0';\n            }\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                this.updateResizablePanes(i);\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        var lastBar = this.element.querySelector('.e-last-bar');\n        var sepSize = parseInt(isNullOrUndefined(this.separatorSize) ? '1' : this.separatorSize.toString(), 10);\n        if (this.orientation === 'Horizontal') {\n            if ((lastBar.offsetLeft + sepSize + this.element.offsetLeft) > (this.element.offsetWidth + this.element.offsetLeft)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n        else {\n            if ((lastBar.offsetTop + sepSize + this.element.offsetTop) > (this.element.offsetHeight + this.element.offsetTop)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n    };\n    Splitter.prototype.validatelastBar = function (lastBar, sepSize) {\n        var lastbarIndex = this.getSeparatorIndex(lastBar);\n        if (this.allPanes[lastbarIndex + 1].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = this.convertPixelToPercentage(sepSize) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = parseFloat(this.allPanes[lastbarIndex + 1].style.flexBasis)\n                + sepSize + 'px';\n        }\n        if (this.allPanes[lastbarIndex].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex].style.flexBasis = (parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - this.convertPixelToPercentage(this.separatorSize)) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex].style.flexBasis = parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - sepSize + 'px';\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                        _this.allowServerDataBinding = true;\n                        _this.serverDataBind();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        this.isBlazor = false;\n        var cell = this.renderCell(panelProp, true, null);\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","previousPane","offsetWidth","offsetHeight","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","setAttribute","flexGrow","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","beforeExpandArgs","currentBarIndex","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","nextElementSibling","beforeCollapseArgs","collapseEventArgs","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","lastBar","offsetLeft","validatelastBar","offsetTop","lastbarIndex","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","panes","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","allowServerDataBinding","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","serverDataBind","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"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"}