{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    eleVal.style.display = '';\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    val = eleVal.outerHTML.trim();\n                    detach(eleVal);\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel .e-panel-container .e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","querySelectorAll","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","nextElementSibling","beforeCollapseArgs","collapseEventArgs","isBlazor","event","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getSeparatorIndex","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","trim","display","removeAttribute","outerHTML","templateFn","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","panes","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"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"}