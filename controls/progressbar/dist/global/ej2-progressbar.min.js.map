{"version":3,"file":"ej2-progressbar.min.js","sources":["../../src/progressbar/utils/helper.js","../../src/progressbar/utils/progress-animation.js","../../src/progressbar/utils/theme.js","../../src/progressbar/model/constant.js","../../src/progressbar/model/progress-base.js","../../src/progressbar/model/annotation.js","../../src/progressbar/model/progress-annotation.js","../../src/progressbar/progressbar.js","../../src/global.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * helper for progress bar\n */\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, height, width) {\n        this.x = x;\n        this.y = y;\n        this.height = height;\n        this.width = width;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar Size = /** @class */ (function () {\n    function Size(height, width) {\n        this.height = height;\n        this.width = width;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, width, color, opacity, rect, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, width, color, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        _this.stroke = (width !== 0 && _this.stroke !== '') ? color : 'transparent';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/** calculate the start and end point of circle */\nexport function degreeToLocation(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * (Math.PI / 180);\n    return {\n        x: centerX + (radius * Math.cos(angleInRadians)),\n        y: centerY + (radius * Math.sin(angleInRadians))\n    };\n}\n/** calculate the path of the circle */\nexport function getPathArc(x, y, radius, startAngle, endAngle, enableRtl, animation) {\n    // tslint:disable-next-line\n    var start = degreeToLocation(x, y, radius, startAngle);\n    // tslint:disable-next-line\n    var end = degreeToLocation(x, y, radius, endAngle);\n    var largeArcFlag = '0';\n    var sweepFlag = (enableRtl) ? '0' : '1';\n    if (!enableRtl) {\n        largeArcFlag = ((endAngle >= startAngle) ? endAngle : endAngle + 360) - startAngle <= 180 ? '0' : '1';\n    }\n    else {\n        largeArcFlag = ((startAngle >= endAngle) ? startAngle : startAngle + 360) - endAngle <= 180 ? '0' : '1';\n    }\n    var d;\n    if (animation) {\n        d = 'M ' + x + ' ' + y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' ' + ' 0 ' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y;\n    }\n    else {\n        d = 'M' + start.x + ' ' + start.y +\n            'A' + radius + ' ' + radius + ' ' + '0' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y;\n    }\n    return d;\n}\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Animation Effect Calculation\n * @private\n */\nexport function effect(currentTime, startValue, endValue, duration, enableRtl) {\n    var start = (enableRtl) ? endValue : -endValue;\n    var end = startValue + ((enableRtl) ? -endValue : endValue);\n    return start * Math.cos(currentTime / duration * (Math.PI / 2)) + end;\n}\n/**\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * @private\n */\nexport function removeElement(id) {\n    if (!id) {\n        return null;\n    }\n    var element = typeof id === 'string' ? getElement(id) : id;\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * @private\n */\nvar ProgressLocation = /** @class */ (function () {\n    function ProgressLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return ProgressLocation;\n}());\nexport { ProgressLocation };\n","import { Animation } from '@syncfusion/ej2-base';\nimport { effect, getPathArc } from '../utils/helper';\nimport { lineCapRadius } from '../model/constant';\n/**\n * To do the animation for linear progress bar\n */\nexport function doLinearAnimation(element, progress, delay, start) {\n    var animation = new Animation({});\n    var linearPath = element;\n    var width = linearPath.getAttribute('width');\n    var x = (progress.isIndeterminate ? -(+linearPath.getAttribute('width')) : +linearPath.getAttribute('x')).toString();\n    var currentTime;\n    var end = progress.progressRect.x + progress.progressRect.width +\n        (progress.isIndeterminate ? (+linearPath.getAttribute('width')) : 0);\n    var animationDelay = (progress.isIndeterminate) ? 0 : delay;\n    linearPath.style.visibility = 'hidden';\n    animation.animate(linearPath, {\n        duration: progress.animation.duration,\n        delay: animationDelay,\n        progress: function (args) {\n            if (progress.enableRtl) {\n                if (progress.isIndeterminate) {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        currentTime = effect(args.timeStamp, end - parseInt(width, 10), end - parseInt(x, 10), args.duration, progress.enableRtl);\n                        linearPath.setAttribute('x', currentTime.toString());\n                    }\n                }\n                else {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        currentTime = effect(args.timeStamp, parseInt(width, 10), parseInt(width, 10) - parseInt(x, 10), args.duration, progress.enableRtl);\n                        linearPath.setAttribute('x', currentTime.toString());\n                    }\n                }\n            }\n            else {\n                if (progress.isIndeterminate) {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        currentTime = effect(args.timeStamp, parseInt(x, 10), end, args.duration, progress.enableRtl);\n                        linearPath.setAttribute('x', currentTime.toString());\n                    }\n                }\n                else {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        currentTime = effect(args.timeStamp, start, parseInt(width, 10), args.duration, progress.enableRtl);\n                        linearPath.setAttribute('width', currentTime.toString());\n                    }\n                }\n            }\n        },\n        end: function (model) {\n            if (progress.enableRtl) {\n                if (progress.isIndeterminate) {\n                    linearPath.setAttribute('x', x);\n                    doLinearAnimation(element, progress, 0);\n                }\n                else {\n                    linearPath.setAttribute('x', x);\n                }\n            }\n            else {\n                if (progress.isIndeterminate) {\n                    linearPath.setAttribute('x', x);\n                    doLinearAnimation(element, progress, 0);\n                }\n                else {\n                    linearPath.setAttribute('width', width);\n                }\n            }\n            if (progress.animation.enable) {\n                progress.labelElement.setAttribute('visibility', 'visible');\n            }\n            progress.trigger('animationComplete', {\n                value: progress.value, trackColor: progress.trackColor,\n                progressColor: progress.progressColor\n            });\n        }\n    });\n}\n/** To do the animation for circular progress bar */\nexport function doCircularIndeterminate(circularProgress, progress, start, end, x, y, radius) {\n    var animation = new Animation({});\n    animation.animate(circularProgress, {\n        duration: 2000,\n        delay: 0,\n        progress: function (args) {\n            start += 5;\n            end += 5;\n            circularProgress.setAttribute('d', getPathArc(x, y, radius, start % 360, end % 360, progress.enableRtl, true));\n        },\n        end: function (model) {\n            doCircularIndeterminate(circularProgress, progress, start, end, x, y, radius);\n        }\n    });\n}\n/** To do the annotation animation for circular progress bar */\nexport function doAnnotationAnimation(circularPath, progress, start, progressEnd) {\n    var animation = new Animation({});\n    var value = 0;\n    var isAnnotation = progress.annotations.length > 0;\n    var annotatElementChanged;\n    var firstAnnotatElement;\n    if (isAnnotation && progress.progressAnnotationModule) {\n        firstAnnotatElement = document.getElementById(progress.element.id + 'Annotation0').children[0];\n        if (firstAnnotatElement && firstAnnotatElement.children[0]) {\n            if (firstAnnotatElement.children[0].tagName === 'SPAN') {\n                annotatElementChanged = firstAnnotatElement.children[0];\n            }\n        }\n    }\n    var annotateValueChanged;\n    var totalAngle = progress.totalAngle;\n    var min = progress.minimum;\n    var max = progress.maximum;\n    var end = (start > progressEnd) ? progressEnd + 360 : progressEnd;\n    animation.animate(circularPath, {\n        duration: progress.animation.duration,\n        delay: progress.animation.delay,\n        progress: function (args) {\n            if (isAnnotation && annotatElementChanged) {\n                value = effect(args.timeStamp, start, progress.totalAngle, args.duration, progress.enableRtl);\n                if (value <= end) {\n                    annotateValueChanged = parseInt((((value - start) / totalAngle) * (max - min) + min).toString(), 10);\n                    annotatElementChanged.innerHTML = annotateValueChanged ? annotateValueChanged.toString() + '%' : '';\n                }\n                else {\n                    annotatElementChanged.innerHTML = progress.value + '%';\n                }\n            }\n        },\n        end: function (model) {\n            annotatElementChanged.innerHTML = progress.value + '%';\n        }\n    });\n}\n/** To do the animation for circular progress bar */\nexport function doCircularAnimation(x, y, radius, start, progressWidth, element, progress, thickness, delay, startValue) {\n    var animation = new Animation({});\n    var circularPath = element;\n    var pathRadius = 2 * radius * 0.75;\n    var value = 0;\n    var isAnnotation = progress.annotations.length > 0;\n    var annotatElement;\n    var firstElement;\n    if (isAnnotation && progress.progressAnnotationModule) {\n        firstElement = document.getElementById(progress.element.id + 'Annotation0').children[0];\n        if (firstElement && firstElement.children[0]) {\n            if (firstElement.children[0].tagName === 'SPAN') {\n                annotatElement = firstElement.children[0];\n            }\n        }\n    }\n    var annotateValue;\n    var totalAngle = progress.totalAngle;\n    var min = progress.minimum;\n    var max = progress.maximum;\n    var end = (start > progressWidth) ? progressWidth + 360 : progressWidth;\n    var animationDelay = (progress.isIndeterminate) ? 0 : delay;\n    start += (progress.cornerRadius === 'Round' && !progress.isIndeterminate) ?\n        ((progress.enableRtl === true) ? (lineCapRadius * thickness / 2) : -(lineCapRadius * thickness / 2)) : 0;\n    animation.animate(circularPath, {\n        duration: progress.animation.duration,\n        delay: animationDelay,\n        progress: function (args) {\n            if (args.timeStamp >= args.delay) {\n                value = effect(args.timeStamp, startValue | start, progress.totalAngle, args.duration, progress.enableRtl);\n                if (isAnnotation && annotatElement) {\n                    if (value <= end) {\n                        annotateValue = parseInt((((value - start) / totalAngle) * (max - min) + min).toString(), 10);\n                        annotatElement.innerHTML = annotateValue ? annotateValue.toString() + '%' : '';\n                    }\n                    else {\n                        annotatElement.innerHTML = progress.value + '%';\n                    }\n                }\n                circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, value, progress.enableRtl, true));\n            }\n        },\n        end: function (model) {\n            circularPath.setAttribute('d', getPathArc(x, y, pathRadius, 0, 359.99, false, true));\n            if (isAnnotation && annotatElement) {\n                annotatElement.innerHTML = progress.value + '%';\n            }\n            if (progress.animation.enable) {\n                progress.labelElement.setAttribute('visibility', 'visible');\n            }\n            progress.trigger('animationComplete', {\n                value: progress.value, trackColor: progress.trackColor,\n                progressColor: progress.progressColor\n            });\n        }\n    });\n}\n","/** @private */\n// tslint:disable-next-line:max-func-body-length\nexport function getProgressThemeColor(theme) {\n    var style;\n    switch (theme) {\n        case 'Material':\n            style = {\n                linearTrackColor: '#E3165B',\n                linearProgressColor: '#E3165B',\n                circularTrackColor: '#E3165B',\n                circularProgressColor: '#E3165B',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Roboto',\n                linearFontSize: 12,\n                linearFontStyle: 'Regular',\n                circularFontFamily: 'Roboto',\n                circularFontStyle: 'Normal',\n                circularFontSize: 20,\n                progressOpacity: 1,\n                trackOpacity: 0.26,\n                bufferOpacity: 0.4,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n            };\n            break;\n        case 'Bootstrap':\n            style = {\n                linearTrackColor: '#EEEEEE',\n                linearProgressColor: '#317ab9',\n                circularTrackColor: '#EEEEEE',\n                circularProgressColor: '#317ab9',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Helvetica',\n                linearFontStyle: 'Regular',\n                linearFontSize: 12,\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: 20,\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 20,\n                linearProgressThickness: 20,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                linearTrackColor: '#E9ECEF',\n                linearProgressColor: '#007bff',\n                circularTrackColor: '#E9ECEF',\n                circularProgressColor: '#007bff',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Helvetica',\n                linearFontStyle: 'Regular',\n                linearFontSize: 12,\n                circularFontFamily: 'Helvetica',\n                circularFontStyle: 'Normal',\n                circularFontSize: 20,\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n            };\n            break;\n        case 'HighContrast':\n            style = {\n                linearTrackColor: '#BFBFBF',\n                linearProgressColor: '#FFD939',\n                circularTrackColor: '#BFBFBF',\n                circularProgressColor: '#FFD939',\n                backgroundColor: 'transparent',\n                fontColor: '#FFFFFF',\n                linearFontFamily: 'Segoe UI',\n                linearFontSize: 12,\n                linearFontStyle: 'Regular',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: 20,\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n            };\n            break;\n        default:\n            style = {\n                linearTrackColor: '#EAEAEA',\n                linearProgressColor: '#0078D6',\n                circularTrackColor: '#E6E6E6',\n                circularProgressColor: '#0078D6',\n                backgroundColor: 'transparent',\n                fontColor: '#333333',\n                linearFontFamily: 'Segoe UI',\n                linearFontStyle: 'Regular',\n                linearFontSize: 12,\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: 20,\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.3,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * corner Radius\n */\nexport var lineCapRadius = 0.9;\n/**\n * complete Angle\n */\nexport var completeAngle = 359.99;\n/**\n * valueChanged event\n */\nexport var valueChanged = 'valueChanged';\n/**\n * progressCompleted event\n */\nexport var progressCompleted = 'progressCompleted';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * progress bar complex interface\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in charts.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Animation\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(2000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Annotation\n */\nvar ProgressAnnotationSettings = /** @class */ (function (_super) {\n    __extends(ProgressAnnotationSettings, _super);\n    function ProgressAnnotationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ProgressAnnotationSettings.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressAnnotationSettings.prototype, \"annotationAngle\", void 0);\n    __decorate([\n        Property('0%')\n    ], ProgressAnnotationSettings.prototype, \"annotationRadius\", void 0);\n    return ProgressAnnotationSettings;\n}(ChildProperty));\nexport { ProgressAnnotationSettings };\n","import { createElement } from '@syncfusion/ej2-base';\nimport { annotationRender, removeElement, ProgressLocation } from '../utils/helper';\n/**\n * Base file for annotation\n */\nvar AnnotationBase = /** @class */ (function () {\n    /**\n     * Constructor for chart and accumulation annotation\n     * @param control\n     */\n    function AnnotationBase(control) {\n        this.control = control;\n    }\n    AnnotationBase.prototype.render = function (annotation, index) {\n        this.annotation = annotation;\n        var childElement = createElement('div', {\n            id: this.control.element.id + 'Annotation' + index,\n            styles: 'position:absolute;z-index:1', innerHTML: annotation.content\n        });\n        return childElement;\n    };\n    /**\n     * To process the annotation\n     * @param annotation\n     * @param index\n     * @param parentElement\n     */\n    AnnotationBase.prototype.processAnnotation = function (annotation, index, parentElement) {\n        var annotationElement;\n        var location;\n        location = new ProgressLocation(0, 0);\n        annotationElement = this.render(annotation, index);\n        if (annotationElement) {\n            this.setElementStyle(location, annotationElement, parentElement);\n        }\n        else if (this.control.redraw) {\n            removeElement(annotationElement.id);\n        }\n    };\n    AnnotationBase.prototype.setElementStyle = function (location, element, parentElement) {\n        var argsData = {\n            cancel: false, name: annotationRender, content: element,\n            location: location\n        };\n        this.control.trigger(annotationRender, argsData);\n        if (!argsData.cancel) {\n            var result = this.Location(this.annotation.annotationRadius, this.annotation.annotationAngle);\n            argsData.content.style.left = result.left + 'px';\n            argsData.content.style.top = result.top + 'px';\n            argsData.content.style.transform = 'translate(-50%, -50%)';\n            argsData.content.setAttribute('aria-label', 'Annotation');\n            parentElement.appendChild(argsData.content);\n        }\n    };\n    AnnotationBase.prototype.Location = function (radius, angle) {\n        var top;\n        var left;\n        var radius1 = parseFloat(radius);\n        if (radius1 === 0 && angle === 0) {\n            var rect = this.control.progressRect;\n            left = rect.x + (rect.width / 2);\n            top = rect.y + (rect.height / 2);\n        }\n        else {\n            var degToRadFactor = Math.PI / 180;\n            angle = angle - 90;\n            angle = angle * degToRadFactor;\n            var x = Math.round(this.control.progressSize.width / 2.25);\n            var y = Math.round(this.control.progressSize.height / 2.25);\n            left = (radius1 * Math.cos(angle)) + x;\n            top = (radius1 * Math.sin(angle)) + y;\n        }\n        return {\n            top: top, left: left\n        };\n    };\n    return AnnotationBase;\n}());\nexport { AnnotationBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createElement } from '@syncfusion/ej2-base';\nimport { AnnotationBase } from './annotation';\n/**\n * Class for progress annotation\n */\nvar ProgressAnnotation = /** @class */ (function (_super) {\n    __extends(ProgressAnnotation, _super);\n    /**\n     * Constructor for Progress annotation\n     * @private\n     */\n    function ProgressAnnotation(control, annotations) {\n        var _this = _super.call(this, control) || this;\n        _this.progress = control;\n        _this.annotations = annotations;\n        return _this;\n    }\n    /**\n     * Method to render the annotation for chart\n     * @param element\n     * @private\n     */\n    ProgressAnnotation.prototype.renderAnnotations = function (element) {\n        var _this = this;\n        this.annotations = this.progress.annotations;\n        var parentElement = document.getElementById(this.progress.element.id + 'Annotation_collections');\n        this.parentElement = parentElement ? parentElement : createElement('div', {\n            id: this.progress.element.id + 'Annotation_collections',\n            styles: 'position:absolute'\n        });\n        this.annotations.map(function (annotation, index) {\n            _this.processAnnotation(annotation, index, _this.parentElement);\n        });\n        if (!parentElement) {\n            element.appendChild(this.parentElement);\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ProgressAnnotation.prototype.getModuleName = function () {\n        return 'ProgressAnnotation';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    ProgressAnnotation.prototype.destroy = function (control) {\n        // Destroy method performed here\n    };\n    return ProgressAnnotation;\n}(AnnotationBase));\nexport { ProgressAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Browser, Complex, Event, Collection } from '@syncfusion/ej2-base';\nimport { createElement, remove } from '@syncfusion/ej2-base';\nimport { Rect, Size, getPathArc, RectOption, stringToNumber } from './utils/helper';\nimport { doLinearAnimation, doCircularAnimation, doCircularIndeterminate, doAnnotationAnimation } from './utils/progress-animation';\nimport { Margin, Animation, Font } from './model/progress-base';\nimport { SvgRenderer, PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { getProgressThemeColor } from './utils/theme';\nimport { lineCapRadius, completeAngle, valueChanged, progressCompleted } from './model/constant';\nimport { ProgressAnnotationSettings } from './model/index';\n/**\n *  progress bar control\n */\nvar ProgressBar = /** @class */ (function (_super) {\n    __extends(ProgressBar, _super);\n    function ProgressBar(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    ProgressBar.prototype.getModuleName = function () {\n        return 'progressbar';\n    };\n    ProgressBar.prototype.preRender = function () {\n        this.unWireEvents();\n        this.progressRect = new Rect(0, 0, 0, 0);\n        this.progressSize = new Size(0, 0);\n        this.wireEvents();\n    };\n    ProgressBar.prototype.render = function () {\n        this.trigger('load', { progressBar: this });\n        this.calculateProgressBarSize();\n        this.calculateProgressBarBounds();\n        this.SetThemeValues();\n        this.renderAnnotations();\n        this.renderElements();\n        this.trigger('loaded', { progressBar: this });\n        this.renderComplete();\n        this.controlRenderedTimeStamp = new Date().getTime();\n    };\n    /**\n     * Set theme values\n     */\n    ProgressBar.prototype.SetThemeValues = function () {\n        switch (this.theme) {\n            case 'Bootstrap':\n            case 'Bootstrap4':\n                this.gapWidth = (!this.gapWidth) ? 4 : this.gapWidth;\n                this.cornerRadius = this.cornerRadius === 'Auto' ? 'Round' : this.cornerRadius;\n                break;\n            default:\n                this.cornerRadius = this.cornerRadius === 'Auto' ? 'Square' : this.cornerRadius;\n        }\n    };\n    /**\n     * calculate Initial Bounds\n     */\n    ProgressBar.prototype.calculateProgressBarBounds = function () {\n        this.progressRect.x = this.margin.left;\n        this.progressRect.y = this.margin.top;\n        this.progressRect.width -= this.margin.left + this.margin.right;\n        this.progressRect.height -= this.margin.top + this.margin.bottom;\n    };\n    /**\n     * calculate size of the progress bar\n     */\n    ProgressBar.prototype.calculateProgressBarSize = function () {\n        var containerWidth = this.element.clientWidth || this.element.offsetWidth;\n        var containerHeight = this.element.clientHeight;\n        var width = (this.type === 'Linear') ? 200 : 120;\n        var height = (this.type === 'Linear') ? 30 : 120;\n        var padding = 10;\n        var thickness = Math.max(this.progressThickness, this.trackThickness);\n        height = (this.type === 'Linear' && thickness > (height - padding)) ? thickness + padding : height;\n        this.progressSize.width = stringToNumber(this.width, containerWidth) || containerWidth || width;\n        this.progressSize.height = stringToNumber(this.height, containerHeight) || containerHeight || height;\n        this.progressRect.width = this.progressSize.width;\n        this.progressRect.height = this.progressSize.height;\n    };\n    /**\n     * Render Annotation\n     */\n    ProgressBar.prototype.renderAnnotations = function () {\n        this.createSecElement();\n        this.renderAnnotation();\n    };\n    /**\n     * Render SVG Element\n     */\n    ProgressBar.prototype.renderElements = function () {\n        this.element.style.display = 'block';\n        this.element.style.position = 'relative';\n        this.removeSvg();\n        this.setTheme();\n        this.createSVG();\n        this.clipPathElement();\n        this.createTrack();\n        this.createLinearProgress();\n        this.createCircularProgress();\n        this.createLabel();\n        this.element.appendChild(this.svgObject);\n        this.setSecondaryElementPosition();\n    };\n    ProgressBar.prototype.createSecElement = function () {\n        var secElement = document.getElementById(this.element.id + 'Secondary_Element');\n        if (secElement) {\n            secElement.innerHTML = '';\n            this.secElement = secElement;\n            return;\n        }\n        this.secElement = createElement('div', {\n            id: this.element.id + 'Secondary_Element',\n            styles: 'position: absolute',\n        });\n        this.element.appendChild(this.secElement);\n    };\n    /**\n     * To set the left and top position for annotation for center aligned\n     */\n    ProgressBar.prototype.setSecondaryElementPosition = function () {\n        var element = this.secElement;\n        var rect = this.element.getBoundingClientRect();\n        var svgRect = getElement(this.svgObject.id).getBoundingClientRect();\n        element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    };\n    ProgressBar.prototype.createSVG = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + 'SVG',\n            width: this.progressSize.width,\n            height: this.progressSize.height,\n            style: 'background-color:' + this.themeStyle.backgroundColor\n        });\n    };\n    ProgressBar.prototype.clipPathElement = function () {\n        this.clipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippath' });\n        this.bufferClipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippathBuffer' });\n    };\n    ProgressBar.prototype.createTrack = function () {\n        var linearTrack;\n        var linearTrackWidth;\n        var centerX;\n        var centerY;\n        var size;\n        var radius;\n        var startAngle;\n        var endAngle;\n        var circularTrack;\n        var circularPath;\n        var option;\n        var trackThickness;\n        this.argsData = {\n            value: this.value,\n            progressColor: this.progressColor,\n            trackColor: this.trackColor\n        };\n        if (this.argsData.value === this.maximum) {\n            this.trigger(progressCompleted, this.argsData);\n        }\n        else {\n            this.trigger(valueChanged, this.argsData);\n        }\n        if (this.type === 'Linear') {\n            linearTrackWidth = this.progressRect.width;\n            option = new PathOption(this.element.id + '_Lineartrack', 'none', (this.trackThickness || this.themeStyle.linearTrackThickness), (this.argsData.trackColor || this.themeStyle.linearTrackColor), this.themeStyle.trackOpacity, '0', this.getPathLine(this.progressRect.x, linearTrackWidth, (this.trackThickness || this.themeStyle.linearTrackThickness)));\n            linearTrack = this.renderer.drawPath(option);\n            if (this.segmentCount > 1) {\n                this.segmentSize = this.calculateSegmentSize(linearTrackWidth, (this.trackThickness || this.themeStyle.linearTrackThickness));\n                linearTrack.setAttribute('stroke-dasharray', this.segmentSize);\n            }\n            if (this.cornerRadius === 'Round') {\n                linearTrack.setAttribute('stroke-linecap', 'round');\n            }\n            this.svgObject.appendChild(linearTrack);\n        }\n        else if (this.type === 'Circular') {\n            startAngle = this.startAngle;\n            this.totalAngle = (this.endAngle - this.startAngle) % 360;\n            this.totalAngle = (this.totalAngle <= 0 ? (360 + this.totalAngle) : this.totalAngle);\n            this.totalAngle -= (this.totalAngle === 360) ? 0.01 : 0;\n            endAngle = (this.startAngle + ((this.enableRtl) ? -this.totalAngle : +this.totalAngle)) % 360;\n            centerX = this.progressRect.x + (this.progressRect.width / 2);\n            centerY = this.progressRect.y + (this.progressRect.height / 2);\n            trackThickness = Math.max(this.trackThickness, this.progressThickness) ||\n                Math.max(this.themeStyle.circularProgressThickness, this.themeStyle.circularTrackThickness);\n            size = (Math.min(this.progressRect.height, this.progressRect.width) / 2) - trackThickness / 2;\n            radius = stringToNumber(this.radius, size);\n            radius = (radius === null) ? 0 : radius;\n            circularPath = getPathArc(centerX, centerY, radius, startAngle, endAngle, this.enableRtl);\n            option = new PathOption(this.element.id + '_Circulartrack', 'none', (this.trackThickness || this.themeStyle.circularTrackThickness), (this.argsData.trackColor || this.themeStyle.circularTrackColor), this.themeStyle.trackOpacity, '0', circularPath);\n            circularTrack = this.renderer.drawPath(option);\n            this.svgObject.appendChild(circularTrack);\n            this.trackwidth = circularTrack.getTotalLength();\n            if (this.segmentCount > 1) {\n                this.segmentSize = this.calculateSegmentSize(this.trackwidth, (this.trackThickness || this.themeStyle.linearTrackThickness));\n                circularTrack.setAttribute('stroke-dasharray', this.segmentSize);\n            }\n            if (this.cornerRadius === 'Round') {\n                circularTrack.setAttribute('stroke-linecap', 'round');\n            }\n        }\n    };\n    ProgressBar.prototype.createLinearProgress = function (refresh, prevWidth) {\n        if (prevWidth === void 0) { prevWidth = 0; }\n        var linearBuffer;\n        var secondaryProgressWidth;\n        var linearBufferWidth;\n        var option;\n        var linearProgress;\n        var progressWidth;\n        var linearProgressWidth;\n        var clipPathBuffer;\n        var clipPathLinear;\n        if (this.type === 'Linear') {\n            if (this.secondaryProgress !== null && !this.isIndeterminate) {\n                secondaryProgressWidth = this.calculateProgressRange(this.minimum, this.maximum, this.secondaryProgress);\n                linearBufferWidth = this.progressRect.width * secondaryProgressWidth;\n                if (this.segmentColor.length !== 0 && !this.isIndeterminate) {\n                    linearBuffer = this.createLinearSegment('_LinearBuffer', linearBufferWidth, this.themeStyle.bufferOpacity, (this.progressThickness || this.themeStyle.linearProgressThickness));\n                }\n                else {\n                    option = new PathOption(this.element.id + '_Linearbuffer', 'none', (this.progressThickness || this.themeStyle.linearProgressThickness), (this.argsData.progressColor || this.themeStyle.linearProgressColor), this.themeStyle.bufferOpacity, '0', this.getPathLine(this.progressRect.x, linearBufferWidth, (this.progressThickness || this.themeStyle.linearProgressThickness)));\n                    linearBuffer = this.renderer.drawPath(option);\n                    if (this.segmentCount > 1) {\n                        linearBuffer.setAttribute('stroke-dasharray', this.segmentSize);\n                    }\n                    if (this.cornerRadius === 'Round') {\n                        linearBuffer.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n                this.svgObject.appendChild(linearBuffer);\n                if (this.animation.enable) {\n                    clipPathBuffer = this.createClipPath(this.bufferClipPath, secondaryProgressWidth, null, this.progressRect.x, false, (this.progressThickness || this.themeStyle.linearProgressThickness));\n                    linearBuffer.setAttribute('style', 'clip-path:url(#' + this.element.id + '_clippathBuffer)');\n                    doLinearAnimation(clipPathBuffer, this, this.animation.delay, 0);\n                }\n                this.svgObject.appendChild(this.bufferClipPath);\n            }\n            if (this.argsData.value !== null) {\n                progressWidth = this.calculateProgressRange(this.minimum, this.maximum, this.argsData.value);\n                this.progressPreviousWidth = linearProgressWidth = this.progressRect.width * ((this.isIndeterminate) ? 1 : progressWidth);\n                if (this.segmentColor.length !== 0 && !this.isIndeterminate) {\n                    linearProgress = this.createLinearSegment('_LinearProgress', linearProgressWidth, this.themeStyle.progressOpacity, (this.progressThickness || this.themeStyle.linearProgressThickness));\n                }\n                else {\n                    if (!refresh) {\n                        option = new PathOption(this.element.id + '_Linearprogress', 'none', (this.progressThickness || this.themeStyle.linearProgressThickness), (this.argsData.progressColor || this.themeStyle.linearProgressColor), this.themeStyle.progressOpacity, '0', this.getPathLine(this.progressRect.x, linearProgressWidth, (this.progressThickness || this.themeStyle.linearProgressThickness)));\n                        linearProgress = this.renderer.drawPath(option);\n                    }\n                    else {\n                        linearProgress = getElement(this.element.id + '_Linearprogress');\n                        linearProgress.setAttribute('d', this.getPathLine(this.progressRect.x, linearProgressWidth, (this.progressThickness || this.themeStyle.linearProgressThickness)));\n                        linearProgress.setAttribute('stroke', this.argsData.progressColor || this.themeStyle.circularProgressColor);\n                    }\n                    if (this.segmentCount > 1) {\n                        linearProgress.setAttribute('stroke-dasharray', this.segmentSize);\n                    }\n                    if (this.cornerRadius === 'Round') {\n                        linearProgress.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n                this.svgObject.appendChild(linearProgress);\n                if (this.animation.enable || this.isIndeterminate) {\n                    var animationdelay = this.animation.delay + ((this.secondaryProgress !== null) ? (linearBufferWidth - linearProgressWidth) : 0);\n                    clipPathLinear = this.createClipPath(this.clipPath, progressWidth, null, refresh ? prevWidth : this.progressRect.x, refresh, (this.progressThickness || this.themeStyle.linearProgressThickness));\n                    linearProgress.setAttribute('style', 'clip-path:url(#' + this.element.id + '_clippath)');\n                    doLinearAnimation(clipPathLinear, this, animationdelay, refresh ? prevWidth : 0);\n                }\n                this.svgObject.appendChild(this.clipPath);\n            }\n        }\n    };\n    // tslint:disable-next-line:max-func-body-length\n    ProgressBar.prototype.createCircularProgress = function (previousStart, previousEnd, refresh) {\n        var centerX;\n        var centerY;\n        var size;\n        var endAngle;\n        var radius;\n        var startAngle = this.startAngle;\n        var previousPath;\n        this.progressStartAngle = startAngle;\n        var circularPath;\n        var bufferClipPath;\n        var progressEnd;\n        var circularProgress;\n        var circularBuffer;\n        var option;\n        var radiusDiff;\n        var progressThickness;\n        var linearClipPath;\n        var rDiff;\n        var progressSegment;\n        if (this.type === 'Circular') {\n            centerX = this.progressRect.x + (this.progressRect.width / 2);\n            centerY = this.progressRect.y + (this.progressRect.height / 2);\n            progressThickness = Math.max(this.trackThickness, this.progressThickness) ||\n                Math.max(this.themeStyle.circularProgressThickness, this.themeStyle.circularTrackThickness);\n            size = (Math.min(this.progressRect.height, this.progressRect.width) / 2) - progressThickness / 2;\n            radius = stringToNumber(this.innerRadius, size);\n            radius = (radius === null) ? 0 : radius;\n            if (this.secondaryProgress !== null && !this.isIndeterminate) {\n                if (this.segmentColor.length !== 0 && !this.isIndeterminate) {\n                    circularBuffer = this.createCircularSegment('_CircularBuffer', centerX, centerY, radius, this.secondaryProgress, this.themeStyle.bufferOpacity, (this.progressThickness || this.themeStyle.circularProgressThickness));\n                }\n                else {\n                    endAngle = this.calculateProgressRange(this.minimum, this.maximum, this.secondaryProgress);\n                    circularPath = getPathArc(centerX, centerY, radius, startAngle, endAngle, this.enableRtl);\n                    option = new PathOption(this.element.id + '_Circularbuffer', 'none', (this.progressThickness || this.themeStyle.circularProgressThickness), (this.argsData.progressColor || this.themeStyle.circularProgressColor), this.themeStyle.bufferOpacity, '0', circularPath);\n                    circularBuffer = this.renderer.drawPath(option);\n                    if (this.segmentCount > 1) {\n                        radiusDiff = parseInt(this.radius, 10) - parseInt(this.innerRadius, 10);\n                        if (radiusDiff !== 0) {\n                            progressSegment = this.trackwidth + ((radiusDiff < 0) ? (this.trackwidth * Math.abs(radiusDiff)) / parseInt(this.radius, 10) :\n                                -(this.trackwidth * Math.abs(radiusDiff)) / parseInt(this.radius, 10));\n                            this.segmentSize = this.calculateSegmentSize(progressSegment, (this.progressThickness || this.themeStyle.circularProgressThickness));\n                        }\n                        circularBuffer.setAttribute('stroke-dasharray', this.segmentSize);\n                    }\n                    if (this.cornerRadius === 'Round') {\n                        circularBuffer.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n                this.svgObject.appendChild(circularBuffer);\n                if (this.animation.enable) {\n                    bufferClipPath = this.createClipPath(this.bufferClipPath, null, '', null, false);\n                    circularBuffer.setAttribute('style', 'clip-path:url(#' + this.element.id + '_clippathBuffer)');\n                    doCircularAnimation(centerX, centerY, radius, startAngle, 0, bufferClipPath, this, (this.progressThickness || this.themeStyle.circularProgressThickness), this.animation.delay, null);\n                }\n                this.svgObject.appendChild(this.bufferClipPath);\n            }\n            if (this.argsData.value !== null) {\n                if (this.segmentColor.length !== 0 && !this.isIndeterminate) {\n                    circularProgress = this.createCircularSegment('_CircularProgress', centerX, centerY, radius, this.argsData.value, this.themeStyle.progressOpacity, (this.progressThickness || this.themeStyle.circularProgressThickness));\n                }\n                else {\n                    progressEnd = this.calculateProgressRange(this.minimum, this.maximum, this.argsData.value);\n                    this.annotationEnd = progressEnd;\n                    endAngle = ((this.isIndeterminate) ? (this.startAngle + ((this.enableRtl) ? -this.totalAngle : +this.totalAngle)) % 360 : progressEnd);\n                    circularPath = getPathArc(centerX, centerY, radius, startAngle, endAngle, this.enableRtl);\n                    option = new PathOption(this.element.id + '_Circularprogress', 'none', (this.progressThickness || this.themeStyle.circularProgressThickness), (this.argsData.progressColor || this.themeStyle.circularProgressColor), this.themeStyle.progressOpacity, '0', circularPath);\n                    if (!refresh) {\n                        circularProgress = this.renderer.drawPath(option);\n                    }\n                    else {\n                        circularProgress = getElement(this.element.id + '_Circularprogress');\n                        previousPath = circularProgress.getAttribute('d');\n                        circularProgress.setAttribute('d', circularPath);\n                        circularProgress.setAttribute('stroke', this.argsData.progressColor || this.themeStyle.circularProgressColor);\n                    }\n                    if (this.segmentCount > 1) {\n                        rDiff = parseInt(this.radius, 10) - parseInt(this.innerRadius, 10);\n                        if (rDiff !== 0) {\n                            progressSegment = this.trackwidth + ((rDiff < 0) ? (this.trackwidth * Math.abs(rDiff)) / parseInt(this.radius, 10) :\n                                -(this.trackwidth * Math.abs(rDiff)) / parseInt(this.radius, 10));\n                            this.segmentSize = this.calculateSegmentSize(progressSegment, (this.progressThickness || this.themeStyle.circularProgressThickness));\n                        }\n                        circularProgress.setAttribute('stroke-dasharray', this.segmentSize);\n                    }\n                    if (this.cornerRadius === 'Round') {\n                        circularProgress.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n                this.progressEndAngle = endAngle;\n                if (!refresh) {\n                    this.svgObject.appendChild(circularProgress);\n                }\n                if (this.animation.enable && !this.isIndeterminate) {\n                    var circulardelay = (this.secondaryProgress !== null) ? 300 : this.animation.delay;\n                    linearClipPath = this.createClipPath(this.clipPath, null, refresh ? previousPath : '', null, refresh);\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + this.element.id + '_clippath)');\n                    doCircularAnimation(centerX, centerY, radius, startAngle, progressEnd, linearClipPath, this, (this.progressThickness || this.themeStyle.circularProgressThickness), circulardelay, refresh ? previousEnd : null);\n                }\n                if (this.isIndeterminate) {\n                    var circularPathRadius = 2 * radius * 0.75;\n                    var circularPath_1 = getPathArc(centerX, centerY, circularPathRadius, startAngle, progressEnd, this.enableRtl, true);\n                    var option_1 = new PathOption(this.element.id + '_clippathcircle', 'transparent', 10, 'transparent', 1, '0', circularPath_1);\n                    var path = this.renderer.drawPath(option_1);\n                    this.clipPath.appendChild(path);\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + this.element.id + '_clippath)');\n                    doCircularIndeterminate((path), this, startAngle, progressEnd, centerX, centerY, circularPathRadius);\n                }\n                this.svgObject.appendChild(this.clipPath);\n            }\n        }\n    };\n    ProgressBar.prototype.createLabel = function () {\n        //let fontsize: string; let fontstyle: string; let fillcolor: string;\n        var textSize;\n        var isAnimation = this.animation.enable;\n        if (this.type === 'Linear' && this.showProgressValue) {\n            var linearlabel = void 0;\n            var linearbufferValue = void 0;\n            var linearprogresswidth = void 0;\n            var progresslabelwidth = this.calculateProgressRange(this.minimum, this.maximum, this.value);\n            if (this.value === this.maximum) {\n                linearbufferValue = 100;\n                linearprogresswidth = (this.progressRect.width * progresslabelwidth) - 10;\n            }\n            if (this.value > this.maximum || this.value < this.minimum || this.value === this.minimum) {\n                linearbufferValue = 0;\n                linearprogresswidth = (this.progressRect.width * progresslabelwidth) + 10;\n            }\n            if (this.value > this.minimum && this.value < this.maximum) {\n                linearbufferValue = Math.round((this.value * 100) / (this.maximum - this.minimum));\n                linearprogresswidth = (this.progressRect.width * progresslabelwidth) - 10;\n            }\n            var argsData = {\n                cancel: false, text: this.label ? this.label : String(linearbufferValue) + '%', color: this.labelStyle.color\n            };\n            this.trigger('textRender', argsData);\n            if (!argsData.cancel) {\n                textSize = measureText(argsData.text, this.labelStyle);\n                var options = {\n                    'id': this.element.id + '_linearLabel',\n                    'font-size': this.labelStyle.size || this.themeStyle.linearFontSize,\n                    'font-style': this.labelStyle.fontStyle || this.themeStyle.linearFontStyle,\n                    'font-family': this.labelStyle.fontFamily || this.themeStyle.linearFontFamily,\n                    'font-weight': this.labelStyle.fontWeight,\n                    'fill': argsData.color || this.themeStyle.fontColor,\n                    'x': linearprogresswidth,\n                    'y': this.progressRect.y + (this.progressRect.height / 2) + (textSize.height / 4),\n                    'text-anchor': 'middle',\n                    'visibility': isAnimation ? 'hidden' : 'visible'\n                };\n                linearlabel = this.renderer.createText(options, argsData.text);\n                this.labelElement = linearlabel;\n                this.svgObject.appendChild(linearlabel);\n            }\n        }\n        else if (this.type === 'Circular' && this.showProgressValue) {\n            var circularLabel = void 0;\n            var circularbufferValue = void 0;\n            var xAxis = (this.progressRect.x + (this.progressRect.width / 2));\n            var yAxis = this.progressRect.y + (this.progressRect.height / 2);\n            if (this.value === this.minimum || this.value > this.maximum) {\n                circularbufferValue = 0;\n            }\n            if (this.value === this.maximum) {\n                circularbufferValue = 100;\n            }\n            if (this.value > this.minimum && this.value < this.maximum) {\n                circularbufferValue = Math.round((this.value * 100) / (this.maximum - this.minimum));\n            }\n            var argsData = {\n                cancel: false, text: this.label ? this.label : String(circularbufferValue) + '%', color: this.labelStyle.color\n            };\n            this.trigger('textRender', argsData);\n            if (!argsData.cancel) {\n                textSize = measureText(argsData.text, this.labelStyle);\n                var options = {\n                    'id': this.element.id + '_circularLabel',\n                    'fill': argsData.color || this.themeStyle.fontColor,\n                    'font-size': this.labelStyle.size || this.themeStyle.circularFontSize,\n                    'font-style': this.labelStyle.fontStyle || this.themeStyle.circularFontStyle,\n                    'font-family': this.labelStyle.fontFamily || this.themeStyle.circularFontFamily,\n                    'font-weight': this.labelStyle.fontWeight,\n                    'height': this.progressRect.height,\n                    'width': this.progressRect.width,\n                    'visibility': isAnimation ? 'hidden' : 'visible',\n                    'x': xAxis,\n                    'y': yAxis + textSize.height / 2,\n                    'text-anchor': 'middle'\n                };\n                circularLabel = this.renderer.createText(options, argsData.text);\n                this.labelElement = circularLabel;\n                this.svgObject.appendChild(circularLabel);\n            }\n        }\n    };\n    ProgressBar.prototype.getPathLine = function (x, width, thickness) {\n        var moveTo = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (x + this.progressRect.width) - ((lineCapRadius / 2) * thickness) : (x + this.progressRect.width)) :\n            ((this.cornerRadius === 'Round') ? (x + (lineCapRadius / 2) * thickness) : x);\n        var lineTo = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (moveTo - width + (lineCapRadius * thickness)) : (moveTo - width)) :\n            ((this.cornerRadius === 'Round') ? (moveTo + width - (lineCapRadius * thickness)) : (moveTo + width));\n        return 'M' + moveTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2)) +\n            'L' + lineTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2));\n    };\n    ProgressBar.prototype.calculateProgressRange = function (min, max, value) {\n        var result;\n        var endValue;\n        if (this.type === 'Linear') {\n            endValue = (value - min) / (max - min);\n            result = (value < min || value > max) ? 0 : endValue;\n            return result;\n        }\n        else {\n            endValue = ((value - min) / (max - min)) * this.totalAngle;\n            endValue = (this.startAngle + ((this.enableRtl) ? -endValue : +endValue)) % 360;\n            result = (value < min || value > max) ? this.startAngle : endValue;\n            return result;\n        }\n    };\n    ProgressBar.prototype.calculateSegmentSize = function (width, thickness) {\n        var count = (this.type === 'Circular' && this.totalAngle === completeAngle) ? this.segmentCount : this.segmentCount - 1;\n        var cornerCount = (this.totalAngle === completeAngle || this.type === 'Linear') ? this.segmentCount : this.segmentCount - 1;\n        var gap = this.gapWidth || ((this.type === 'Linear') ? this.themeStyle.linearGapWidth : this.themeStyle.circularGapWidth);\n        var size = (width - count * gap);\n        size = (size - ((this.cornerRadius === 'Round') ? (cornerCount * (lineCapRadius * thickness)) : 0)) / this.segmentCount;\n        gap += (this.cornerRadius === 'Round') ? lineCapRadius * thickness : 0;\n        return ' ' + size + ' ' + gap;\n    };\n    ProgressBar.prototype.createClipPath = function (clipPath, width, d, x, refresh, thickness) {\n        var path;\n        var rect;\n        var option;\n        if (this.type === 'Linear') {\n            if (!refresh) {\n                rect = new RectOption(this.element.id + '_clippathrect', 'transparent', 1, 'transparent', 1, new Rect((this.cornerRadius === 'Round') ? (this.progressRect.x - (lineCapRadius / 2 * thickness)) : x, 0, this.progressSize.height, (this.isIndeterminate) ? this.progressRect.width * width :\n                    (this.cornerRadius === 'Round') ? (this.progressRect.width * width + lineCapRadius * thickness) :\n                        this.progressRect.width * width));\n                path = this.renderer.drawRectangle(rect);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathrect');\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(this.element.id + '_clippathcircle', 'transparent', 10, 'transparent', 1, '0', d);\n                path = this.renderer.drawPath(option);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathcircle');\n                path.setAttribute('d', d);\n            }\n        }\n        return path;\n    };\n    ProgressBar.prototype.createLinearSegment = function (id, width, opacity, thickness) {\n        var locX = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (this.progressRect.x + this.progressRect.width) - ((lineCapRadius / 2) * thickness) :\n            (this.progressRect.x + this.progressRect.width)) :\n            ((this.cornerRadius === 'Round') ? (this.progressRect.x + (lineCapRadius / 2) * thickness) : this.progressRect.x);\n        var locY = (this.progressRect.y + (this.progressRect.height / 2));\n        var gapWidth = (this.gapWidth || this.themeStyle.linearGapWidth);\n        var avlWidth = this.progressRect.width / this.segmentCount;\n        var avlSegWidth = (this.progressRect.width - ((this.segmentCount - 1) * gapWidth));\n        avlSegWidth = (avlSegWidth -\n            ((this.cornerRadius === 'Round') ? this.segmentCount * (lineCapRadius * thickness) : 0)) / this.segmentCount;\n        var gap = (this.cornerRadius === 'Round') ? (gapWidth + (lineCapRadius * thickness)) : gapWidth;\n        var segmentGroup = this.renderer.createGroup({ 'id': this.element.id + id + 'Group' });\n        var count = Math.ceil(width / avlWidth);\n        var segWidth;\n        var color;\n        var j = 0;\n        var option;\n        var segmentPath;\n        var tolWidth = (this.cornerRadius === 'Round') ? (width - (lineCapRadius * thickness)) : width;\n        var linearThickness = this.progressThickness || this.themeStyle.linearProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segWidth = (tolWidth < avlSegWidth) ? tolWidth : avlSegWidth;\n            if (j < this.segmentColor.length) {\n                color = this.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = this.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(this.element.id + id + i, 'none', linearThickness, color, opacity, '0', this.getLinearSegmentPath(locX, locY, segWidth));\n            segmentPath = this.renderer.drawPath(option);\n            if (this.cornerRadius === 'Round') {\n                segmentPath.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(segmentPath);\n            locX += (this.enableRtl) ? -avlSegWidth - gap : avlSegWidth + gap;\n            tolWidth -= avlSegWidth + gap;\n            tolWidth = (tolWidth < 0) ? 0 : tolWidth;\n        }\n        return segmentGroup;\n    };\n    ProgressBar.prototype.getLinearSegmentPath = function (x, y, width) {\n        return 'M' + ' ' + x + ' ' + y + ' ' + 'L' + (x + ((this.enableRtl) ? -width : width)) + ' ' + y;\n    };\n    ProgressBar.prototype.createCircularSegment = function (id, x, y, r, value, opacity, thickness) {\n        var start = this.startAngle;\n        var end = this.widthToAngle(this.minimum, this.maximum, value);\n        end -= (this.cornerRadius === 'Round' && this.totalAngle === completeAngle) ?\n            this.widthToAngle(0, this.trackwidth, ((lineCapRadius / 2) * thickness)) : 0;\n        var size = (this.trackwidth - ((this.totalAngle === completeAngle) ? this.segmentCount :\n            this.segmentCount - 1) * (this.gapWidth || this.themeStyle.circularGapWidth));\n        size = (size -\n            ((this.cornerRadius === 'Round') ?\n                (((this.totalAngle === completeAngle) ?\n                    this.segmentCount : this.segmentCount - 1) * lineCapRadius * thickness) : 0)) / this.segmentCount;\n        var avlTolEnd = this.widthToAngle(0, this.trackwidth, (this.trackwidth / this.segmentCount));\n        avlTolEnd -= (this.cornerRadius === 'Round' && this.totalAngle === completeAngle) ?\n            this.widthToAngle(0, this.trackwidth, ((lineCapRadius / 2) * thickness)) : 0;\n        var avlEnd = this.widthToAngle(0, this.trackwidth, size);\n        var gap = this.widthToAngle(0, this.trackwidth, (this.gapWidth || this.themeStyle.circularGapWidth));\n        gap += (this.cornerRadius === 'Round') ? this.widthToAngle(0, this.trackwidth, (lineCapRadius * thickness)) : 0;\n        var segmentGroup = this.renderer.createGroup({ 'id': this.element.id + id + 'Group' });\n        var gapCount = Math.floor(end / avlTolEnd);\n        var count = Math.ceil((end - gap * gapCount) / avlEnd);\n        var segmentPath;\n        var circularSegment;\n        var segmentEnd;\n        var avlSegEnd = (start + ((this.enableRtl) ? -avlEnd : avlEnd)) % 360;\n        var color;\n        var j = 0;\n        var option;\n        var circularThickness = this.progressThickness || this.themeStyle.circularProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segmentEnd = (this.enableRtl) ? ((this.startAngle - end > avlSegEnd) ? this.startAngle - end : avlSegEnd) :\n                ((this.startAngle + end < avlSegEnd) ? this.startAngle + end : avlSegEnd);\n            segmentPath = getPathArc(x, y, r, start, segmentEnd, this.enableRtl);\n            if (j < this.segmentColor.length) {\n                color = this.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = this.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(this.element.id + id + i, 'none', circularThickness, color, opacity, '0', segmentPath);\n            circularSegment = this.renderer.drawPath(option);\n            if (this.cornerRadius === 'Round') {\n                circularSegment.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(circularSegment);\n            start = segmentEnd + ((this.enableRtl) ? -gap : gap);\n            avlSegEnd += (this.enableRtl) ? -avlEnd - gap : avlEnd + gap;\n        }\n        return segmentGroup;\n    };\n    ProgressBar.prototype.widthToAngle = function (min, max, value) {\n        var angle = ((value - min) / (max - min)) * this.totalAngle;\n        return angle;\n    };\n    /**\n     * Theming for progress bar\n     */\n    ProgressBar.prototype.setTheme = function () {\n        this.themeStyle = getProgressThemeColor(this.theme);\n    };\n    /**\n     * Annotation for progress bar\n     */\n    ProgressBar.prototype.renderAnnotation = function () {\n        if (this.progressAnnotationModule && this.annotations.length > 0) {\n            this.progressAnnotationModule.renderAnnotations(this.secElement);\n        }\n    };\n    /**\n     * Handles the progressbar resize.\n     * @return {boolean}\n     * @private\n     */\n    ProgressBar.prototype.progressResize = function (e) {\n        var _this = this;\n        // 800 used as buffer time for resize event preventing from control rendered time\n        if (!(new Date().getTime() > this.controlRenderedTimeStamp + 800)) {\n            return false;\n        }\n        var arg = {\n            bar: this,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.progressSize.width, this.progressSize.height),\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTo);\n                return;\n            }\n            arg.currentSize = _this.progressSize;\n            _this.trigger('resized', arg);\n            _this.calculateProgressBarSize();\n            _this.calculateProgressBarBounds();\n            _this.secElement.innerHTML = '';\n            _this.renderAnnotation();\n            _this.renderElements();\n        }, 500);\n        return false;\n    };\n    /**\n     * Method to un-bind events for progress bar\n     */\n    ProgressBar.prototype.unWireEvents = function () {\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    /**\n     * Method to bind events for bullet chart\n     */\n    ProgressBar.prototype.wireEvents = function () {\n        this.resizeBounds = this.progressResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    ProgressBar.prototype.removeSvg = function () {\n        var svgElement = document.getElementById(this.element.id + 'SVG');\n        if (svgElement) {\n            remove(svgElement);\n        }\n    };\n    ProgressBar.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'annotations':\n                    this.secElement.innerHTML = '';\n                    this.renderAnnotation();\n                    var annotationElement = document.getElementById(this.element.id + 'Annotation0').children[0];\n                    doAnnotationAnimation(annotationElement, this, this.startAngle, this.annotationEnd);\n                    break;\n                case 'value':\n                    this.argsData = {\n                        value: this.value,\n                        progressColor: this.progressColor,\n                        trackColor: this.trackColor\n                    };\n                    if (this.argsData.value === this.maximum) {\n                        this.trigger(progressCompleted, this.argsData);\n                    }\n                    else {\n                        this.trigger(valueChanged, this.argsData);\n                    }\n                    if (this.type === 'Circular') {\n                        this.createCircularProgress(this.progressStartAngle, this.progressEndAngle, true);\n                    }\n                    else {\n                        this.createLinearProgress(true, this.progressPreviousWidth);\n                    }\n                    break;\n            }\n        }\n    };\n    ProgressBar.prototype.requiredModules = function () {\n        var modules = [];\n        var enableAnnotation = false;\n        enableAnnotation = this.annotations.some(function (value) {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'ProgressAnnotation',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    ProgressBar.prototype.getPersistData = function () {\n        return ' ';\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of ProgressBar\n     */\n    ProgressBar.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.removeSvg();\n        this.svgObject = null;\n        this.element.classList.remove('e-progressbar');\n    };\n    __decorate([\n        Property('Linear')\n    ], ProgressBar.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"secondaryProgress\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(100)\n    ], ProgressBar.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"radius\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], ProgressBar.prototype, \"segmentCount\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"gapWidth\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"segmentColor\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isIndeterminate\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"trackColor\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"progressColor\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"trackThickness\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"progressThickness\", void 0);\n    __decorate([\n        Property('Fabric')\n    ], ProgressBar.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"showProgressValue\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontStyle: null, fontWeight: 'Normal', fontFamily: null }, Font)\n    ], ProgressBar.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"label\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ProgressBar.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], ProgressBar.prototype, \"animation\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"valueChanged\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"progressCompleted\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Collection([{}], ProgressAnnotationSettings)\n    ], ProgressBar.prototype, \"annotations\", void 0);\n    ProgressBar = __decorate([\n        NotifyPropertyChanges\n    ], ProgressBar);\n    return ProgressBar;\n}(Component));\nexport { ProgressBar };\n","import * as index from './index';\nindex.ProgressBar.Inject(index.ProgressAnnotation);\nexport * from './index';\n"],"names":["degreeToLocation","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","getPathArc","startAngle","endAngle","enableRtl","animation","start","end","largeArcFlag","sweepFlag","stringToNumber","value","containerSize","undefined","indexOf","parseInt","effect","currentTime","startValue","endValue","duration","getElement","id","document","getElementById","removeElement","element","remove","doLinearAnimation","progress","delay","Animation","linearPath","width","getAttribute","isIndeterminate","toString","progressRect","animationDelay","style","visibility","animate","args","timeStamp","setAttribute","model","enable","labelElement","trigger","trackColor","progressColor","doCircularIndeterminate","circularProgress","doAnnotationAnimation","circularPath","progressEnd","annotatElementChanged","firstAnnotatElement","isAnnotation","annotations","length","progressAnnotationModule","children","tagName","annotateValueChanged","totalAngle","min","minimum","max","maximum","innerHTML","doCircularAnimation","progressWidth","thickness","annotatElement","firstElement","pathRadius","annotateValue","cornerRadius","lineCapRadius","getProgressThemeColor","theme","linearTrackColor","linearProgressColor","circularTrackColor","circularProgressColor","backgroundColor","fontColor","linearFontFamily","linearFontSize","linearFontStyle","circularFontFamily","circularFontStyle","circularFontSize","progressOpacity","trackOpacity","bufferOpacity","linearGapWidth","circularGapWidth","linearTrackThickness","linearProgressThickness","circularTrackThickness","circularProgressThickness","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","Rect","height","Size","RectOption","_super","fill","color","opacity","rect","rx","ry","transform","dashArray","_this","call","stroke","PathOption","ProgressLocation","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Margin","apply","Property","ChildProperty","Font","ProgressAnnotationSettings","AnnotationBase","control","render","annotation","index","createElement","styles","content","processAnnotation","parentElement","annotationElement","location","setElementStyle","redraw","argsData","cancel","name","result","Location","annotationRadius","annotationAngle","left","top","appendChild","angle","radius1","parseFloat","round","progressSize","ProgressAnnotation","renderAnnotations","map","getModuleName","destroy","ProgressBar","options","preRender","unWireEvents","wireEvents","progressBar","calculateProgressBarSize","calculateProgressBarBounds","SetThemeValues","renderElements","renderComplete","controlRenderedTimeStamp","Date","getTime","gapWidth","margin","right","bottom","containerWidth","clientWidth","offsetWidth","containerHeight","clientHeight","type","progressThickness","trackThickness","createSecElement","renderAnnotation","display","position","removeSvg","setTheme","createSVG","clipPathElement","createTrack","createLinearProgress","createCircularProgress","createLabel","svgObject","setSecondaryElementPosition","secElement","getBoundingClientRect","svgRect","renderer","SvgRenderer","createSvg","themeStyle","clipPath","createClipPath","bufferClipPath","linearTrack","linearTrackWidth","size","circularTrack","option","getPathLine","drawPath","segmentCount","segmentSize","calculateSegmentSize","trackwidth","getTotalLength","refresh","prevWidth","linearBuffer","secondaryProgressWidth","linearBufferWidth","linearProgress","linearProgressWidth","clipPathBuffer","clipPathLinear","secondaryProgress","calculateProgressRange","segmentColor","createLinearSegment","progressPreviousWidth","animationdelay","previousStart","previousEnd","previousPath","progressStartAngle","circularBuffer","radiusDiff","linearClipPath","rDiff","progressSegment","innerRadius","abs","createCircularSegment","annotationEnd","progressEndAngle","circulardelay","circularPathRadius","circularPath_1","option_1","path","textSize","isAnimation","showProgressValue","linearlabel","linearbufferValue","linearprogresswidth","progresslabelwidth","text","label","String","labelStyle","measureText","font-size","font-style","fontStyle","font-family","fontFamily","font-weight","fontWeight","text-anchor","createText","circularLabel","circularbufferValue","xAxis","yAxis","moveTo","lineTo","count","cornerCount","gap","drawRectangle","locX","locY","avlWidth","avlSegWidth","segWidth","segmentPath","segmentGroup","createGroup","ceil","j","tolWidth","linearThickness","getLinearSegmentPath","widthToAngle","avlTolEnd","avlEnd","circularSegment","segmentEnd","gapCount","floor","avlSegEnd","circularThickness","progressResize","e","arg","bar","currentSize","previousSize","resizeTo","clearTimeout","setTimeout","isDestroyed","window","removeEventListener","Browser","isTouch","resizeBounds","bind","addEventListener","svgElement","onPropertyChanged","newProp","oldProp","_i","_a","keys","requiredModules","modules","some","push","member","getPersistData","classList","Complex","Event","Collection","NotifyPropertyChanges","Component","index.ProgressBar","Inject","index.ProgressAnnotation"],"mappings":"oEAyDA,SAAgBA,GAAiBC,EAASC,EAASC,EAAQC,GACvD,GAAIC,IAAkBD,EAAiB,KAAOE,KAAKC,GAAK,IACxD,QACIC,EAAGP,EAAWE,EAASG,KAAKG,IAAIJ,GAChCK,EAAGR,EAAWC,EAASG,KAAKK,IAAIN,IAIxC,QAAgBO,GAAWJ,EAAGE,EAAGP,EAAQU,EAAYC,EAAUC,EAAWC,GAEtE,GAAIC,GAAQjB,EAAiBQ,EAAGE,EAAGP,EAAQU,GAEvCK,EAAMlB,EAAiBQ,EAAGE,EAAGP,EAAQW,GACrCK,EAAe,IACfC,EAAY,EAAc,IAAM,GAKhCD,GAJCJ,GAIgBF,GAAcC,EAAYD,EAAaA,EAAa,KAAOC,GAAY,IAAM,IAAM,KAHnFA,GAAYD,EAAcC,EAAWA,EAAW,KAAOD,GAAc,IAAM,IAAM,GActG,OARIG,GACI,KAAOR,EAAI,IAAME,EAAI,MAAQO,EAAMT,EAAI,IAAMS,EAAMP,EAAI,MAAQP,EAAS,IACxEA,EAAS,QAAoBgB,EAAe,IAAMC,EAAY,IAAMF,EAAIV,EAAI,IAAMU,EAAIR,EAGtF,IAAMO,EAAMT,EAAI,IAAMS,EAAMP,EAC5B,IAAMP,EAAS,IAAMA,EAAS,MAAkBgB,EAAe,IAAMC,EAAY,IAAMF,EAAIV,EAAI,IAAMU,EAAIR,EAKrH,QAAgBW,GAAeC,EAAOC,GAClC,MAAc,QAAVD,OAA4BE,KAAVF,GACa,IAAxBA,EAAMG,QAAQ,KAAeF,EAAgB,IAAOG,SAASJ,EAAO,IAAMI,SAASJ,EAAO,IAE9F,KAMX,QAAgBK,GAAOC,EAAaC,EAAYC,EAAUC,EAAUhB,GAChE,GAAIE,GAAQ,EAAca,GAAYA,EAClCZ,EAAMW,GAAc,GAAeC,EAAWA,EAClD,OAAOb,GAAQX,KAAKG,IAAImB,EAAcG,GAAYzB,KAAKC,GAAK,IAAMW,EAStE,QAAgBc,GAAWC,GACvB,MAAOC,UAASC,eAAeF,GAKnC,QAAgBG,GAAcH,GAC1B,IAAKA,EACD,MAAO,KAEX,IAAII,GAAwB,gBAAPJ,GAAkBD,EAAWC,GAAMA,CACpDI,IACAC,SAAOD,GCtHf,QAAgBE,GAAkBF,EAASG,EAAUC,EAAOxB,GACxD,GAIIW,GAJAZ,EAAY,GAAI0B,iBAChBC,EAAaN,EACbO,EAAQD,EAAWE,aAAa,SAChCrC,GAAKgC,EAASM,kBAAqBH,EAAWE,aAAa,UAAaF,EAAWE,aAAa,MAAME,WAEtG7B,EAAMsB,EAASQ,aAAaxC,EAAIgC,EAASQ,aAAaJ,OACrDJ,EAASM,iBAAoBH,EAAWE,aAAa,SAAY,GAClEI,EAAkBT,kBAA4B,EAAIC,CACtDE,GAAWO,MAAMC,WAAa,SAC9BnC,EAAUoC,QAAQT,GACdZ,SAAUS,EAASxB,UAAUe,SAC7BU,MAAOQ,EACPT,SAAU,SAAUa,GACZb,EAASzB,UACLyB,EAASM,gBACLO,EAAKC,WAAaD,EAAKZ,QACvBE,EAAWO,MAAMC,WAAa,UAC9BvB,EAAcD,EAAO0B,EAAKC,UAAWpC,EAAMQ,SAASkB,EAAO,IAAK1B,EAAMQ,SAASlB,EAAG,IAAK6C,EAAKtB,SAAUS,EAASzB,WAC/G4B,EAAWY,aAAa,IAAK3B,EAAYmB,aAIzCM,EAAKC,WAAaD,EAAKZ,QACvBE,EAAWO,MAAMC,WAAa,UAC9BvB,EAAcD,EAAO0B,EAAKC,UAAW5B,SAASkB,EAAO,IAAKlB,SAASkB,EAAO,IAAMlB,SAASlB,EAAG,IAAK6C,EAAKtB,SAAUS,EAASzB,WACzH4B,EAAWY,aAAa,IAAK3B,EAAYmB,aAK7CP,EAASM,gBACLO,EAAKC,WAAaD,EAAKZ,QACvBE,EAAWO,MAAMC,WAAa,UAC9BvB,EAAcD,EAAO0B,EAAKC,UAAW5B,SAASlB,EAAG,IAAKU,EAAKmC,EAAKtB,SAAUS,EAASzB,WACnF4B,EAAWY,aAAa,IAAK3B,EAAYmB,aAIzCM,EAAKC,WAAaD,EAAKZ,QACvBE,EAAWO,MAAMC,WAAa,UAC9BvB,EAAcD,EAAO0B,EAAKC,UAAWrC,EAAOS,SAASkB,EAAO,IAAKS,EAAKtB,SAAUS,EAASzB,WACzF4B,EAAWY,aAAa,QAAS3B,EAAYmB,cAK7D7B,IAAK,SAAUsC,GACPhB,EAASzB,UACLyB,EAASM,iBACTH,EAAWY,aAAa,IAAK/C,GAC7B+B,EAAkBF,EAASG,EAAU,IAGrCG,EAAWY,aAAa,IAAK/C,GAI7BgC,EAASM,iBACTH,EAAWY,aAAa,IAAK/C,GAC7B+B,EAAkBF,EAASG,EAAU,IAGrCG,EAAWY,aAAa,QAASX,GAGrCJ,EAASxB,UAAUyC,QACnBjB,EAASkB,aAAaH,aAAa,aAAc,WAErDf,EAASmB,QAAQ,qBACbrC,MAAOkB,EAASlB,MAAOsC,WAAYpB,EAASoB,WAC5CC,cAAerB,EAASqB,mBAMxC,QAAgBC,GAAwBC,EAAkBvB,EAAUvB,EAAOC,EAAKV,EAAGE,EAAGP,GAClE,GAAIuC,iBACVU,QAAQW,GACdhC,SAAU,IACVU,MAAO,EACPD,SAAU,SAAUa,GAChBpC,GAAS,EACTC,GAAO,EACP6C,EAAiBR,aAAa,IAAK3C,EAAWJ,EAAGE,EAAGP,EAAQc,EAAQ,IAAKC,EAAM,IAAKsB,EAASzB,WAAW,KAE5GG,IAAK,SAAUsC,GACXM,EAAwBC,EAAkBvB,EAAUvB,EAAOC,EAAKV,EAAGE,EAAGP,MAKlF,QAAgB6D,GAAsBC,EAAczB,EAAUvB,EAAOiD,GACjE,GAGIC,GACAC,EAJApD,EAAY,GAAI0B,iBAChBpB,EAAQ,EACR+C,EAAe7B,EAAS8B,YAAYC,OAAS,CAG7CF,IAAgB7B,EAASgC,2BACzBJ,EAAsBlC,SAASC,eAAeK,EAASH,QAAQJ,GAAK,eAAewC,SAAS,KACjEL,EAAoBK,SAAS,IACJ,SAA5CL,EAAoBK,SAAS,GAAGC,UAChCP,EAAwBC,EAAoBK,SAAS,GAIjE,IAAIE,GACAC,EAAapC,EAASoC,WACtBC,EAAMrC,EAASsC,QACfC,EAAMvC,EAASwC,QACf9D,EAAOD,EAAQiD,EAAeA,EAAc,IAAMA,CACtDlD,GAAUoC,QAAQa,GACdlC,SAAUS,EAASxB,UAAUe,SAC7BU,MAAOD,EAASxB,UAAUyB,MAC1BD,SAAU,SAAUa,GACZgB,GAAgBF,KAChB7C,EAAQK,EAAO0B,EAAKC,UAAWrC,EAAOuB,EAASoC,WAAYvB,EAAKtB,SAAUS,EAASzB,aACtEG,GACTyD,EAAuBjD,WAAYJ,EAAQL,GAAS2D,GAAeG,EAAMF,GAAOA,GAAK9B,WAAY,IACjGoB,EAAsBc,UAAYN,EAAuBA,EAAqB5B,WAAa,IAAM,IAGjGoB,EAAsBc,UAAYzC,EAASlB,MAAQ,MAI/DJ,IAAK,SAAUsC,GACXW,EAAsBc,UAAYzC,EAASlB,MAAQ,OAK/D,QAAgB4D,GAAoB1E,EAAGE,EAAGP,EAAQc,EAAOkE,EAAe9C,EAASG,EAAU4C,EAAW3C,EAAOZ,GACzG,GAKIwD,GACAC,EANAtE,EAAY,GAAI0B,iBAChBuB,EAAe5B,EACfkD,EAAa,EAAIpF,EAAS,IAC1BmB,EAAQ,EACR+C,EAAe7B,EAAS8B,YAAYC,OAAS,CAG7CF,IAAgB7B,EAASgC,2BACzBc,EAAepD,SAASC,eAAeK,EAASH,QAAQJ,GAAK,eAAewC,SAAS,KACjEa,EAAab,SAAS,IACG,SAArCa,EAAab,SAAS,GAAGC,UACzBW,EAAiBC,EAAab,SAAS,GAInD,IAAIe,GACAZ,EAAapC,EAASoC,WACtBC,EAAMrC,EAASsC,QACfC,EAAMvC,EAASwC,QACf9D,EAAOD,EAAQkE,EAAiBA,EAAgB,IAAMA,EACtDlC,EAAkBT,kBAA4B,EAAIC,CACtDxB,IAAoC,UAA1BuB,EAASiD,cAA6BjD,EAASM,gBACkD,GAA9E,IAAvBN,EAASzB,UAAuB2E,EAAgBN,EAAY,GAAOM,EAAgBN,EAAY,EACrGpE,EAAUoC,QAAQa,GACdlC,SAAUS,EAASxB,UAAUe,SAC7BU,MAAOQ,EACPT,SAAU,SAAUa,GACZA,EAAKC,WAAaD,EAAKZ,QACvBnB,EAAQK,EAAO0B,EAAKC,UAAWzB,EAAaZ,EAAOuB,EAASoC,WAAYvB,EAAKtB,SAAUS,EAASzB,WAC5FsD,GAAgBgB,IACZ/D,GAASJ,GACTsE,EAAgB9D,WAAYJ,EAAQL,GAAS2D,GAAeG,EAAMF,GAAOA,GAAK9B,WAAY,IAC1FsC,EAAeJ,UAAYO,EAAgBA,EAAczC,WAAa,IAAM,IAG5EsC,EAAeJ,UAAYzC,EAASlB,MAAQ,KAGpD2C,EAAaV,aAAa,IAAK3C,EAAWJ,EAAGE,EAAG6E,EAAYtE,EAAOK,EAAOkB,EAASzB,WAAW,MAGtGG,IAAK,SAAUsC,GACXS,EAAaV,aAAa,IAAK3C,EAAWJ,EAAGE,EAAG6E,EAAY,EAAG,QAAQ,GAAO,IAC1ElB,GAAgBgB,IAChBA,EAAeJ,UAAYzC,EAASlB,MAAQ,KAE5CkB,EAASxB,UAAUyC,QACnBjB,EAASkB,aAAaH,aAAa,aAAc,WAErDf,EAASmB,QAAQ,qBACbrC,MAAOkB,EAASlB,MAAOsC,WAAYpB,EAASoB,WAC5CC,cAAerB,EAASqB,mBC7LxC,QAAgB8B,GAAsBC,GAClC,GAAI1C,EACJ,QAAQ0C,GACJ,IAAK,WACD1C,GACI2C,iBAAkB,UAClBC,oBAAqB,UACrBC,mBAAoB,UACpBC,sBAAuB,UACvBC,gBAAiB,cACjBC,UAAW,UACXC,iBAAkB,SAClBC,eAAgB,GAChBC,gBAAiB,UACjBC,mBAAoB,SACpBC,kBAAmB,SACnBC,iBAAkB,GAClBC,gBAAiB,EACjBC,aAAc,IACdC,cAAe,GACfC,eAAgB,EAChBC,iBAAkB,EAClBC,qBAAsB,EACtBC,wBAAyB,EACzBC,uBAAwB,EACxBC,0BAA2B,EAE/B,MACJ,KAAK,YACD/D,GACI2C,iBAAkB,UAClBC,oBAAqB,UACrBC,mBAAoB,UACpBC,sBAAuB,UACvBC,gBAAiB,cACjBC,UAAW,UACXC,iBAAkB,YAClBE,gBAAiB,UACjBD,eAAgB,GAChBE,mBAAoB,WACpBC,kBAAmB,SACnBC,iBAAkB,GAClBC,gBAAiB,EACjBC,aAAc,EACdC,cAAe,IACfC,eAAgB,EAChBC,iBAAkB,EAClBC,qBAAsB,GACtBC,wBAAyB,GACzBC,uBAAwB,EACxBC,0BAA2B,EAE/B,MACJ,KAAK,aACD/D,GACI2C,iBAAkB,UAClBC,oBAAqB,UACrBC,mBAAoB,UACpBC,sBAAuB,UACvBC,gBAAiB,cACjBC,UAAW,UACXC,iBAAkB,YAClBE,gBAAiB,UACjBD,eAAgB,GAChBE,mBAAoB,YACpBC,kBAAmB,SACnBC,iBAAkB,GAClBC,gBAAiB,EACjBC,aAAc,EACdC,cAAe,IACfC,eAAgB,EAChBC,iBAAkB,EAClBC,qBAAsB,GACtBC,wBAAyB,GACzBC,uBAAwB,EACxBC,0BAA2B,EAE/B,MACJ,KAAK,eACD/D,GACI2C,iBAAkB,UAClBC,oBAAqB,UACrBC,mBAAoB,UACpBC,sBAAuB,UACvBC,gBAAiB,cACjBC,UAAW,UACXC,iBAAkB,WAClBC,eAAgB,GAChBC,gBAAiB,UACjBC,mBAAoB,WACpBC,kBAAmB,SACnBC,iBAAkB,GAClBC,gBAAiB,EACjBC,aAAc,EACdC,cAAe,IACfC,eAAgB,EAChBC,iBAAkB,EAClBC,qBAAsB,EACtBC,wBAAyB,EACzBC,uBAAwB,EACxBC,0BAA2B,EAE/B,MACJ,SACI/D,GACI2C,iBAAkB,UAClBC,oBAAqB,UACrBC,mBAAoB,UACpBC,sBAAuB,UACvBC,gBAAiB,cACjBC,UAAW,UACXC,iBAAkB,WAClBE,gBAAiB,UACjBD,eAAgB,GAChBE,mBAAoB,WACpBC,kBAAmB,SACnBC,iBAAkB,GAClBC,gBAAiB,EACjBC,aAAc,EACdC,cAAe,GACfC,eAAgB,EAChBC,iBAAkB,EAClBC,qBAAsB,EACtBC,wBAAyB,EACzBC,uBAAwB,EACxBC,0BAA2B,GAIvC,MAAO/D,GFnIX,GAAIgE,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,uBAA2BC,QAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIK,KAAKL,GAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASO,KAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,GAAIH,QASnFK,EAAsB,WACtB,QAASA,GAAKzH,EAAGE,EAAGwH,EAAQtF,GACxBiF,KAAKrH,EAAIA,EACTqH,KAAKnH,EAAIA,EACTmH,KAAKK,OAASA,EACdL,KAAKjF,MAAQA,EAEjB,MAAOqF,MAIPE,EAAsB,WACtB,QAASA,GAAKD,EAAQtF,GAClBiF,KAAKK,OAASA,EACdL,KAAKjF,MAAQA,EAEjB,MAAOuF,MAIPC,EAA4B,SAAUC,GAEtC,QAASD,GAAWnG,EAAIqG,EAAM1F,EAAO2F,EAAOC,EAASC,EAAMC,EAAIC,EAAIC,EAAWC,GAC1E,GAAIC,GAAQT,EAAOU,KAAKlB,KAAM5F,EAAIqG,EAAM1F,EAAO2F,EAAOC,EAASK,IAAchB,IAS7E,OARAiB,GAAMpI,EAAI+H,EAAK/H,EACfoI,EAAMtI,EAAIiI,EAAKjI,EACfsI,EAAMZ,OAASO,EAAKP,OACpBY,EAAMlG,MAAQ6F,EAAK7F,MACnBkG,EAAMJ,GAAKA,GAAU,EACrBI,EAAMH,GAAKA,GAAU,EACrBG,EAAMF,UAAYA,GAAwB,GAC1CE,EAAME,OAAoB,IAAVpG,GAAgC,KAAjBkG,EAAME,OAAiBT,EAAQ,cACvDO,EAEX,MAbA5B,GAAUkB,EAAYC,GAafD,GACTa,cA4EEC,EAAkC,WAClC,QAASA,GAAiB1I,EAAGE,GACzBmH,KAAKrH,EAAIA,EACTqH,KAAKnH,EAAIA,EAEb,MAAOwI,MGpIAxD,EAAgB,GCHvBwB,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,uBAA2BC,QAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIK,KAAKL,GAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASO,KAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,GAAIH,QAGnFuB,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HnC,GAAvHoC,EAAIC,UAAUlF,OAAQmF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOjC,OAAOqC,yBAAyBN,EAAQC,GAAOC,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAAST,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIO,GAAIV,EAAW7E,OAAS,EAAGuF,GAAK,EAAGA,KAAS1C,EAAIgC,EAAWU,MAAIJ,GAAKF,EAAI,EAAIpC,EAAEsC,GAAKF,EAAI,EAAIpC,EAAEiC,EAAQC,EAAKI,GAAKtC,EAAEiC,EAAQC,KAASI,EAChJ,OAAOF,GAAI,GAAKE,GAAKpC,OAAOyC,eAAeV,EAAQC,EAAKI,GAAIA,GAM5DM,EAAwB,SAAU3B,GAElC,QAAS2B,KACL,MAAkB,QAAX3B,GAAmBA,EAAO4B,MAAMpC,KAAM4B,YAAc5B,KAc/D,MAhBAX,GAAU8C,EAAQ3B,GAIlBc,GACIe,WAAS,KACVF,EAAOjC,UAAW,UAAO,IAC5BoB,GACIe,WAAS,KACVF,EAAOjC,UAAW,aAAU,IAC/BoB,GACIe,WAAS,KACVF,EAAOjC,UAAW,WAAQ,IAC7BoB,GACIe,WAAS,KACVF,EAAOjC,UAAW,YAAS,IACvBiC,GACTG,iBAKEC,EAAsB,SAAU/B,GAEhC,QAAS+B,KACL,MAAkB,QAAX/B,GAAmBA,EAAO4B,MAAMpC,KAAM4B,YAAc5B,KAoB/D,MAtBAX,GAAUkD,EAAM/B,GAIhBc,GACIe,WAAS,WACVE,EAAKrC,UAAW,gBAAa,IAChCoB,GACIe,WAAS,SACVE,EAAKrC,UAAW,WAAQ,IAC3BoB,GACIe,WAAS,WACVE,EAAKrC,UAAW,iBAAc,IACjCoB,GACIe,WAAS,KACVE,EAAKrC,UAAW,YAAS,IAC5BoB,GACIe,WAAS,aACVE,EAAKrC,UAAW,iBAAc,IACjCoB,GACIe,WAAS,IACVE,EAAKrC,UAAW,cAAW,IACvBqC,GACTD,iBAKEzH,EAA2B,SAAU2F,GAErC,QAAS3F,KACL,MAAkB,QAAX2F,GAAmBA,EAAO4B,MAAMpC,KAAM4B,YAAc5B,KAW/D,MAbAX,GAAUxE,EAAW2F,GAIrBc,GACIe,YAAS,IACVxH,EAAUqF,UAAW,aAAU,IAClCoB,GACIe,WAAS,MACVxH,EAAUqF,UAAW,eAAY,IACpCoB,GACIe,WAAS,IACVxH,EAAUqF,UAAW,YAAS,IAC1BrF,GACTyH,iBAKEE,EAA4C,SAAUhC,GAEtD,QAASgC,KACL,MAAkB,QAAXhC,GAAmBA,EAAO4B,MAAMpC,KAAM4B,YAAc5B,KAW/D,MAbAX,GAAUmD,EAA4BhC,GAItCc,GACIe,WAAS,OACVG,EAA2BtC,UAAW,cAAW,IACpDoB,GACIe,WAAS,IACVG,EAA2BtC,UAAW,sBAAmB,IAC5DoB,GACIe,WAAS,OACVG,EAA2BtC,UAAW,uBAAoB,IACtDsC,GACTF,iBCzGEG,EAAgC,WAKhC,QAASA,GAAeC,GACpB1C,KAAK0C,QAAUA,EAiEnB,MA/DAD,GAAevC,UAAUyC,OAAS,SAAUC,EAAYC,GAMpD,MALA7C,MAAK4C,WAAaA,EACCE,gBAAc,OAC7B1I,GAAI4F,KAAK0C,QAAQlI,QAAQJ,GAAK,aAAeyI,EAC7CE,OAAQ,8BAA+B3F,UAAWwF,EAAWI,WAUrEP,EAAevC,UAAU+C,kBAAoB,SAAUL,EAAYC,EAAOK,GACtE,GAAIC,GACAC,CACJA,GAAW,GAAI/B,GAAiB,EAAG,IACnC8B,EAAoBnD,KAAK2C,OAAOC,EAAYC,IAExC7C,KAAKqD,gBAAgBD,EAAUD,EAAmBD,GAE7ClD,KAAK0C,QAAQY,QAClB/I,EAAc4I,EAAkB/I,KAGxCqI,EAAevC,UAAUmD,gBAAkB,SAAUD,EAAU5I,EAAS0I,GACpE,GAAIK,IACAC,QAAQ,EAAOC,KLmEG,mBKnEqBT,QAASxI,EAChD4I,SAAUA,EAGd,IADApD,KAAK0C,QAAQ5G,QLgES,mBKhEiByH,IAClCA,EAASC,OAAQ,CAClB,GAAIE,GAAS1D,KAAK2D,SAAS3D,KAAK4C,WAAWgB,iBAAkB5D,KAAK4C,WAAWiB,gBAC7EN,GAASP,QAAQ3H,MAAMyI,KAAOJ,EAAOI,KAAO,KAC5CP,EAASP,QAAQ3H,MAAM0I,IAAML,EAAOK,IAAM,KAC1CR,EAASP,QAAQ3H,MAAM0F,UAAY,wBACnCwC,EAASP,QAAQtH,aAAa,aAAc,cAC5CwH,EAAcc,YAAYT,EAASP,WAG3CP,EAAevC,UAAUyD,SAAW,SAAUrL,EAAQ2L,GAClD,GAAIF,GACAD,EACAI,EAAUC,WAAW7L,EACzB,IAAgB,IAAZ4L,GAA2B,IAAVD,EAAa,CAC9B,GAAIrD,GAAOZ,KAAK0C,QAAQvH,YACxB2I,GAAOlD,EAAKjI,EAAKiI,EAAK7F,MAAQ,EAC9BgJ,EAAMnD,EAAK/H,EAAK+H,EAAKP,OAAS,MAE7B,CAED4D,GAAgB,GAChBA,GAFqBxL,KAAKC,GAAK,GAG/B,IAAIC,GAAIF,KAAK2L,MAAMpE,KAAK0C,QAAQ2B,aAAatJ,MAAQ,MACjDlC,EAAIJ,KAAK2L,MAAMpE,KAAK0C,QAAQ2B,aAAahE,OAAS,KACtDyD,GAAQI,EAAUzL,KAAKG,IAAIqL,GAAUtL,EACrCoL,EAAOG,EAAUzL,KAAKK,IAAImL,GAAUpL,EAExC,OACIkL,IAAKA,EAAKD,KAAMA,IAGjBrB,KC5EPpD,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,uBAA2BC,QAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIK,KAAKL,GAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASO,KAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,GAAIH,QAQnFuE,EAAoC,SAAU9D,GAM9C,QAAS8D,GAAmB5B,EAASjG,GACjC,GAAIwE,GAAQT,EAAOU,KAAKlB,KAAM0C,IAAY1C,IAG1C,OAFAiB,GAAMtG,SAAW+H,EACjBzB,EAAMxE,YAAcA,EACbwE,EAoCX,MA7CA5B,GAAUiF,EAAoB9D,GAgB9B8D,EAAmBpE,UAAUqE,kBAAoB,SAAU/J,GACvD,GAAIyG,GAAQjB,IACZA,MAAKvD,YAAcuD,KAAKrF,SAAS8B,WACjC,IAAIyG,GAAgB7I,SAASC,eAAe0F,KAAKrF,SAASH,QAAQJ,GAAK,yBACvE4F,MAAKkD,cAAgBA,GAAgCJ,gBAAc,OAC/D1I,GAAI4F,KAAKrF,SAASH,QAAQJ,GAAK,yBAC/B2I,OAAQ,sBAEZ/C,KAAKvD,YAAY+H,IAAI,SAAU5B,EAAYC,GACvC5B,EAAMgC,kBAAkBL,EAAYC,EAAO5B,EAAMiC,iBAEhDA,GACD1I,EAAQwJ,YAAYhE,KAAKkD,gBAMjCoB,EAAmBpE,UAAUuE,cAAgB,WACzC,MAAO,sBAOXH,EAAmBpE,UAAUwE,QAAU,SAAUhC,KAG1C4B,GACT7B,GCjEEpD,EAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,iBAChBC,uBAA2BC,QAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIK,KAAKL,GAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASO,KAAOC,KAAKC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMO,EAAGG,UAAYV,EAAEU,UAAW,GAAIH,QAGnFuB,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HnC,GAAvHoC,EAAIC,UAAUlF,OAAQmF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOjC,OAAOqC,yBAAyBN,EAAQC,GAAOC,CACrH,IAAuB,gBAAZK,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAAST,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIO,GAAIV,EAAW7E,OAAS,EAAGuF,GAAK,EAAGA,KAAS1C,EAAIgC,EAAWU,MAAIJ,GAAKF,EAAI,EAAIpC,EAAEsC,GAAKF,EAAI,EAAIpC,EAAEiC,EAAQC,EAAKI,GAAKtC,EAAEiC,EAAQC,KAASI,EAChJ,OAAOF,GAAI,GAAKE,GAAKpC,OAAOyC,eAAeV,EAAQC,EAAKI,GAAIA,GAc5D8C,EAA6B,SAAUnE,GAEvC,QAASmE,GAAYC,EAASpK,GAC1B,MAAOgG,GAAOU,KAAKlB,KAAM4E,EAASpK,IAAYwF,KAs1BlD,MAx1BAX,GAAUsF,EAAanE,GAIvBmE,EAAYzE,UAAUuE,cAAgB,WAClC,MAAO,eAEXE,EAAYzE,UAAU2E,UAAY,WAC9B7E,KAAK8E,eACL9E,KAAK7E,aAAe,GAAIiF,GAAK,EAAG,EAAG,EAAG,GACtCJ,KAAKqE,aAAe,GAAI/D,GAAK,EAAG,GAChCN,KAAK+E,cAETJ,EAAYzE,UAAUyC,OAAS,WAC3B3C,KAAKlE,QAAQ,QAAUkJ,YAAahF,OACpCA,KAAKiF,2BACLjF,KAAKkF,6BACLlF,KAAKmF,iBACLnF,KAAKuE,oBACLvE,KAAKoF,iBACLpF,KAAKlE,QAAQ,UAAYkJ,YAAahF,OACtCA,KAAKqF,iBACLrF,KAAKsF,0BAA2B,GAAIC,OAAOC,WAK/Cb,EAAYzE,UAAUiF,eAAiB,WACnC,OAAQnF,KAAKjC,OACT,IAAK,YACL,IAAK,aACDiC,KAAKyF,SAAazF,KAAKyF,SAAgBzF,KAAKyF,SAAT,EACnCzF,KAAKpC,aAAqC,SAAtBoC,KAAKpC,aAA0B,QAAUoC,KAAKpC,YAClE,MACJ,SACIoC,KAAKpC,aAAqC,SAAtBoC,KAAKpC,aAA0B,SAAWoC,KAAKpC,eAM/E+G,EAAYzE,UAAUgF,2BAA6B,WAC/ClF,KAAK7E,aAAaxC,EAAIqH,KAAK0F,OAAO5B,KAClC9D,KAAK7E,aAAatC,EAAImH,KAAK0F,OAAO3B,IAClC/D,KAAK7E,aAAaJ,OAASiF,KAAK0F,OAAO5B,KAAO9D,KAAK0F,OAAOC,MAC1D3F,KAAK7E,aAAakF,QAAUL,KAAK0F,OAAO3B,IAAM/D,KAAK0F,OAAOE,QAK9DjB,EAAYzE,UAAU+E,yBAA2B,WAC7C,GAAIY,GAAiB7F,KAAKxF,QAAQsL,aAAe9F,KAAKxF,QAAQuL,YAC1DC,EAAkBhG,KAAKxF,QAAQyL,aAC/BlL,EAAuB,WAAdiF,KAAKkG,KAAqB,IAAM,IACzC7F,EAAwB,WAAdL,KAAKkG,KAAqB,GAAK,IAEzC3I,EAAY9E,KAAKyE,IAAI8C,KAAKmG,kBAAmBnG,KAAKoG,eACtD/F,GAAwB,WAAdL,KAAKkG,MAAqB3I,EAAa8C,EAFnC,GAEwD9C,EAFxD,GAE8E8C,EAC5FL,KAAKqE,aAAatJ,MAAQvB,EAAewG,KAAKjF,MAAO8K,IAAmBA,GAAkB9K,EAC1FiF,KAAKqE,aAAahE,OAAS7G,EAAewG,KAAKK,OAAQ2F,IAAoBA,GAAmB3F,EAC9FL,KAAK7E,aAAaJ,MAAQiF,KAAKqE,aAAatJ,MAC5CiF,KAAK7E,aAAakF,OAASL,KAAKqE,aAAahE,QAKjDsE,EAAYzE,UAAUqE,kBAAoB,WACtCvE,KAAKqG,mBACLrG,KAAKsG,oBAKT3B,EAAYzE,UAAUkF,eAAiB,WACnCpF,KAAKxF,QAAQa,MAAMkL,QAAU,QAC7BvG,KAAKxF,QAAQa,MAAMmL,SAAW,WAC9BxG,KAAKyG,YACLzG,KAAK0G,WACL1G,KAAK2G,YACL3G,KAAK4G,kBACL5G,KAAK6G,cACL7G,KAAK8G,uBACL9G,KAAK+G,yBACL/G,KAAKgH,cACLhH,KAAKxF,QAAQwJ,YAAYhE,KAAKiH,WAC9BjH,KAAKkH,+BAETvC,EAAYzE,UAAUmG,iBAAmB,WACrC,GAAIc,GAAa9M,SAASC,eAAe0F,KAAKxF,QAAQJ,GAAK,oBAC3D,IAAI+M,EAGA,MAFAA,GAAW/J,UAAY,QACvB4C,KAAKmH,WAAaA,EAGtBnH,MAAKmH,WAAarE,gBAAc,OAC5B1I,GAAI4F,KAAKxF,QAAQJ,GAAK,oBACtB2I,OAAQ,uBAEZ/C,KAAKxF,QAAQwJ,YAAYhE,KAAKmH,aAKlCxC,EAAYzE,UAAUgH,4BAA8B,WAChD,GAAI1M,GAAUwF,KAAKmH,WACfvG,EAAOZ,KAAKxF,QAAQ4M,wBACpBC,EAAUlN,aAAW6F,KAAKiH,UAAU7M,IAAIgN,uBAC5C5M,GAAQa,MAAMyI,KAAOrL,KAAKyE,IAAImK,EAAQvD,KAAOlD,EAAKkD,KAAM,GAAK,KAC7DtJ,EAAQa,MAAM0I,IAAMtL,KAAKyE,IAAImK,EAAQtD,IAAMnD,EAAKmD,IAAK,GAAK,MAE9DY,EAAYzE,UAAUyG,UAAY,WAC9B3G,KAAKsH,SAAW,GAAIC,eAAYvH,KAAKxF,QAAQJ,IAC7C4F,KAAKiH,UAAYjH,KAAKsH,SAASE,WAC3BpN,GAAI4F,KAAKxF,QAAQJ,GAAK,MACtBW,MAAOiF,KAAKqE,aAAatJ,MACzBsF,OAAQL,KAAKqE,aAAahE,OAC1BhF,MAAO,oBAAsB2E,KAAKyH,WAAWrJ,mBAGrDuG,EAAYzE,UAAU0G,gBAAkB,WACpC5G,KAAK0H,SAAW1H,KAAKsH,SAASK,gBAAiBvN,GAAM4F,KAAKxF,QAAQJ,GAAK,cACvE4F,KAAK4H,eAAiB5H,KAAKsH,SAASK,gBAAiBvN,GAAM4F,KAAKxF,QAAQJ,GAAK,qBAEjFuK,EAAYzE,UAAU2G,YAAc,WAChC,GAAIgB,GACAC,EACA1P,EACAC,EACA0P,EACAzP,EACAU,EACAC,EACA+O,EACA5L,EACA6L,EACA7B,CACJpG,MAAKuD,UACD9J,MAAOuG,KAAKvG,MACZuC,cAAegE,KAAKhE,cACpBD,WAAYiE,KAAKjE,YAEjBiE,KAAKuD,SAAS9J,QAAUuG,KAAK7C,QAC7B6C,KAAKlE,QJ/Jc,oBI+JakE,KAAKuD,UAGrCvD,KAAKlE,QJtKS,eIsKakE,KAAKuD,UAElB,WAAdvD,KAAKkG,MACL4B,EAAmB9H,KAAK7E,aAAaJ,MACrCkN,EAAS,GAAI7G,cAAWpB,KAAKxF,QAAQJ,GAAK,eAAgB,OAAS4F,KAAKoG,gBAAkBpG,KAAKyH,WAAWxI,qBAAwBe,KAAKuD,SAASxH,YAAciE,KAAKyH,WAAWzJ,iBAAmBgC,KAAKyH,WAAW5I,aAAc,IAAKmB,KAAKkI,YAAYlI,KAAK7E,aAAaxC,EAAGmP,EAAmB9H,KAAKoG,gBAAkBpG,KAAKyH,WAAWxI,uBACpU4I,EAAc7H,KAAKsH,SAASa,SAASF,GACjCjI,KAAKoI,aAAe,IACpBpI,KAAKqI,YAAcrI,KAAKsI,qBAAqBR,EAAmB9H,KAAKoG,gBAAkBpG,KAAKyH,WAAWxI,sBACvG4I,EAAYnM,aAAa,mBAAoBsE,KAAKqI,cAE5B,UAAtBrI,KAAKpC,cACLiK,EAAYnM,aAAa,iBAAkB,SAE/CsE,KAAKiH,UAAUjD,YAAY6D,IAER,aAAd7H,KAAKkG,OACVlN,EAAagH,KAAKhH,WAClBgH,KAAKjD,YAAciD,KAAK/G,SAAW+G,KAAKhH,YAAc,IACtDgH,KAAKjD,WAAciD,KAAKjD,YAAc,EAAK,IAAMiD,KAAKjD,WAAciD,KAAKjD,WACzEiD,KAAKjD,YAAmC,MAApBiD,KAAKjD,WAAsB,IAAO,EACtD9D,GAAY+G,KAAKhH,YAAegH,gBAAmBA,KAAKjD,YAAciD,KAAKjD,aAAe,IAC1F3E,EAAU4H,KAAK7E,aAAaxC,EAAKqH,KAAK7E,aAAaJ,MAAQ,EAC3D1C,EAAU2H,KAAK7E,aAAatC,EAAKmH,KAAK7E,aAAakF,OAAS,EAC5D+F,EAAiB3N,KAAKyE,IAAI8C,KAAKoG,eAAgBpG,KAAKmG,oBAChD1N,KAAKyE,IAAI8C,KAAKyH,WAAWrI,0BAA2BY,KAAKyH,WAAWtI,wBACxE4I,EAAQtP,KAAKuE,IAAIgD,KAAK7E,aAAakF,OAAQL,KAAK7E,aAAaJ,OAAS,EAAKqL,EAAiB,EAG5FhK,EAAerD,EAAWX,EAASC,EADnCC,EAAqB,QADrBA,EAASkB,EAAewG,KAAK1H,OAAQyP,IACR,EAAIzP,EACmBU,EAAYC,EAAU+G,KAAK9G,WAC/E+O,EAAS,GAAI7G,cAAWpB,KAAKxF,QAAQJ,GAAK,iBAAkB,OAAS4F,KAAKoG,gBAAkBpG,KAAKyH,WAAWtI,uBAA0Ba,KAAKuD,SAASxH,YAAciE,KAAKyH,WAAWvJ,mBAAqB8B,KAAKyH,WAAW5I,aAAc,IAAKzC,GAC1O4L,EAAgBhI,KAAKsH,SAASa,SAASF,GACvCjI,KAAKiH,UAAUjD,YAAYgE,GAC3BhI,KAAKuI,WAAaP,EAAcQ,iBAC5BxI,KAAKoI,aAAe,IACpBpI,KAAKqI,YAAcrI,KAAKsI,qBAAqBtI,KAAKuI,WAAavI,KAAKoG,gBAAkBpG,KAAKyH,WAAWxI,sBACtG+I,EAActM,aAAa,mBAAoBsE,KAAKqI,cAE9B,UAAtBrI,KAAKpC,cACLoK,EAActM,aAAa,iBAAkB,WAIzDiJ,EAAYzE,UAAU4G,qBAAuB,SAAU2B,EAASC,OAC1C,KAAdA,IAAwBA,EAAY,EACxC,IAAIC,GACAC,EACAC,EACAZ,EACAa,EACAxL,EACAyL,EACAC,EACAC,CACJ,IAAkB,WAAdjJ,KAAKkG,OAC0B,OAA3BlG,KAAKkJ,mBAA+BlJ,KAAK/E,kBACzC2N,EAAyB5I,KAAKmJ,uBAAuBnJ,KAAK/C,QAAS+C,KAAK7C,QAAS6C,KAAKkJ,mBACtFL,EAAoB7I,KAAK7E,aAAaJ,MAAQ6N,EACb,IAA7B5I,KAAKoJ,aAAa1M,QAAiBsD,KAAK/E,iBAIxCgN,EAAS,GAAI7G,cAAWpB,KAAKxF,QAAQJ,GAAK,gBAAiB,OAAS4F,KAAKmG,mBAAqBnG,KAAKyH,WAAWvI,wBAA2Bc,KAAKuD,SAASvH,eAAiBgE,KAAKyH,WAAWxJ,oBAAsB+B,KAAKyH,WAAW3I,cAAe,IAAKkB,KAAKkI,YAAYlI,KAAK7E,aAAaxC,EAAGkQ,EAAoB7I,KAAKmG,mBAAqBnG,KAAKyH,WAAWvI,0BACtVyJ,EAAe3I,KAAKsH,SAASa,SAASF,GAClCjI,KAAKoI,aAAe,GACpBO,EAAajN,aAAa,mBAAoBsE,KAAKqI,aAE7B,UAAtBrI,KAAKpC,cACL+K,EAAajN,aAAa,iBAAkB,UAThDiN,EAAe3I,KAAKqJ,oBAAoB,gBAAiBR,EAAmB7I,KAAKyH,WAAW3I,cAAgBkB,KAAKmG,mBAAqBnG,KAAKyH,WAAWvI,yBAY1Jc,KAAKiH,UAAUjD,YAAY2E,GACvB3I,KAAK7G,UAAUyC,SACfoN,EAAiBhJ,KAAK2H,eAAe3H,KAAK4H,eAAgBgB,EAAwB,KAAM5I,KAAK7E,aAAaxC,GAAG,EAAQqH,KAAKmG,mBAAqBnG,KAAKyH,WAAWvI,yBAC/JyJ,EAAajN,aAAa,QAAS,kBAAoBsE,KAAKxF,QAAQJ,GAAK,oBACzEM,EAAkBsO,EAAgBhJ,KAAMA,KAAK7G,UAAUyB,MAAO,IAElEoF,KAAKiH,UAAUjD,YAAYhE,KAAK4H,iBAER,OAAxB5H,KAAKuD,SAAS9J,OAAgB,CAwB9B,GAvBA6D,EAAgB0C,KAAKmJ,uBAAuBnJ,KAAK/C,QAAS+C,KAAK7C,QAAS6C,KAAKuD,SAAS9J,OACtFuG,KAAKsJ,sBAAwBP,EAAsB/I,KAAK7E,aAAaJ,OAAUiF,qBAAwB,EAAI1C,GAC1E,IAA7B0C,KAAKoJ,aAAa1M,QAAiBsD,KAAK/E,iBAInCwN,IAKDK,EAAiB3O,aAAW6F,KAAKxF,QAAQJ,GAAK,oBAC/BsB,aAAa,IAAKsE,KAAKkI,YAAYlI,KAAK7E,aAAaxC,EAAGoQ,EAAsB/I,KAAKmG,mBAAqBnG,KAAKyH,WAAWvI,0BACvI4J,EAAepN,aAAa,SAAUsE,KAAKuD,SAASvH,eAAiBgE,KAAKyH,WAAWtJ,yBANrF8J,EAAS,GAAI7G,cAAWpB,KAAKxF,QAAQJ,GAAK,kBAAmB,OAAS4F,KAAKmG,mBAAqBnG,KAAKyH,WAAWvI,wBAA2Bc,KAAKuD,SAASvH,eAAiBgE,KAAKyH,WAAWxJ,oBAAsB+B,KAAKyH,WAAW7I,gBAAiB,IAAKoB,KAAKkI,YAAYlI,KAAK7E,aAAaxC,EAAGoQ,EAAsB/I,KAAKmG,mBAAqBnG,KAAKyH,WAAWvI,0BAC5V4J,EAAiB9I,KAAKsH,SAASa,SAASF,IAOxCjI,KAAKoI,aAAe,GACpBU,EAAepN,aAAa,mBAAoBsE,KAAKqI,aAE/B,UAAtBrI,KAAKpC,cACLkL,EAAepN,aAAa,iBAAkB,UAhBlDoN,EAAiB9I,KAAKqJ,oBAAoB,kBAAmBN,EAAqB/I,KAAKyH,WAAW7I,gBAAkBoB,KAAKmG,mBAAqBnG,KAAKyH,WAAWvI,yBAmBlKc,KAAKiH,UAAUjD,YAAY8E,GACvB9I,KAAK7G,UAAUyC,QAAUoE,KAAK/E,gBAAiB,CAC/C,GAAIsO,GAAiBvJ,KAAK7G,UAAUyB,OAAqC,OAA3BoF,KAAKkJ,kBAA+BL,EAAoBE,EAAuB,EAC7HE,GAAiBjJ,KAAK2H,eAAe3H,KAAK0H,SAAUpK,EAAe,KAAMmL,EAAUC,EAAY1I,KAAK7E,aAAaxC,EAAG8P,EAAUzI,KAAKmG,mBAAqBnG,KAAKyH,WAAWvI,yBACxK4J,EAAepN,aAAa,QAAS,kBAAoBsE,KAAKxF,QAAQJ,GAAK,cAC3EM,EAAkBuO,EAAgBjJ,KAAMuJ,EAAgBd,EAAUC,EAAY,GAElF1I,KAAKiH,UAAUjD,YAAYhE,KAAK0H,YAK5C/C,EAAYzE,UAAU6G,uBAAyB,SAAUyC,EAAeC,EAAahB,GACjF,GAAIrQ,GACAC,EACA0P,EACA9O,EACAX,EAEAoR,EADA1Q,EAAagH,KAAKhH,UAEtBgH,MAAK2J,mBAAqB3Q,CAC1B,IAAIoD,GACAwL,EACAvL,EACAH,EACA0N,EACA3B,EACA4B,EACA1D,EACA2D,EACAC,EACAC,CACJ,IAAkB,aAAdhK,KAAKkG,OACL9N,EAAU4H,KAAK7E,aAAaxC,EAAKqH,KAAK7E,aAAaJ,MAAQ,EAC3D1C,EAAU2H,KAAK7E,aAAatC,EAAKmH,KAAK7E,aAAakF,OAAS,EAC5D8F,EAAoB1N,KAAKyE,IAAI8C,KAAKoG,eAAgBpG,KAAKmG,oBACnD1N,KAAKyE,IAAI8C,KAAKyH,WAAWrI,0BAA2BY,KAAKyH,WAAWtI,wBACxE4I,EAAQtP,KAAKuE,IAAIgD,KAAK7E,aAAakF,OAAQL,KAAK7E,aAAaJ,OAAS,EAAKoL,EAAoB,EAC/F7N,EAASkB,EAAewG,KAAKiK,YAAalC,GAC1CzP,EAAqB,OAAXA,EAAmB,EAAIA,EACF,OAA3B0H,KAAKkJ,mBAA+BlJ,KAAK/E,kBACR,IAA7B+E,KAAKoJ,aAAa1M,QAAiBsD,KAAK/E,iBAKxCmB,EAAerD,EAAWX,EAASC,EAASC,EAAQU,EADpDC,EAAW+G,KAAKmJ,uBAAuBnJ,KAAK/C,QAAS+C,KAAK7C,QAAS6C,KAAKkJ,mBACElJ,KAAK9G,WAC/E+O,EAAS,GAAI7G,cAAWpB,KAAKxF,QAAQJ,GAAK,kBAAmB,OAAS4F,KAAKmG,mBAAqBnG,KAAKyH,WAAWrI,0BAA6BY,KAAKuD,SAASvH,eAAiBgE,KAAKyH,WAAWtJ,sBAAwB6B,KAAKyH,WAAW3I,cAAe,IAAK1C,GACxPwN,EAAiB5J,KAAKsH,SAASa,SAASF,GACpCjI,KAAKoI,aAAe,IAED,KADnByB,EAAahQ,SAASmG,KAAK1H,OAAQ,IAAMuB,SAASmG,KAAKiK,YAAa,OAEhED,EAAkBhK,KAAKuI,YAAesB,EAAa,EAAM7J,KAAKuI,WAAa9P,KAAKyR,IAAIL,GAAehQ,SAASmG,KAAK1H,OAAQ,KACnH0H,KAAKuI,WAAa9P,KAAKyR,IAAIL,GAAehQ,SAASmG,KAAK1H,OAAQ,KACtE0H,KAAKqI,YAAcrI,KAAKsI,qBAAqB0B,EAAkBhK,KAAKmG,mBAAqBnG,KAAKyH,WAAWrI,4BAE7GwK,EAAelO,aAAa,mBAAoBsE,KAAKqI,cAE/B,UAAtBrI,KAAKpC,cACLgM,EAAelO,aAAa,iBAAkB,UAjBlDkO,EAAiB5J,KAAKmK,sBAAsB,kBAAmB/R,EAASC,EAASC,EAAQ0H,KAAKkJ,kBAAmBlJ,KAAKyH,WAAW3I,cAAgBkB,KAAKmG,mBAAqBnG,KAAKyH,WAAWrI,2BAoB/LY,KAAKiH,UAAUjD,YAAY4F,GACvB5J,KAAK7G,UAAUyC,SACfgM,EAAiB5H,KAAK2H,eAAe3H,KAAK4H,eAAgB,KAAM,GAAI,MAAM,GAC1EgC,EAAelO,aAAa,QAAS,kBAAoBsE,KAAKxF,QAAQJ,GAAK,oBAC3EiD,EAAoBjF,EAASC,EAASC,EAAQU,EAAY,EAAG4O,EAAgB5H,KAAOA,KAAKmG,mBAAqBnG,KAAKyH,WAAWrI,0BAA4BY,KAAK7G,UAAUyB,MAAO,OAEpLoF,KAAKiH,UAAUjD,YAAYhE,KAAK4H,iBAER,OAAxB5H,KAAKuD,SAAS9J,OAAgB,CAoC9B,GAnCiC,IAA7BuG,KAAKoJ,aAAa1M,QAAiBsD,KAAK/E,iBAIxCoB,EAAc2D,KAAKmJ,uBAAuBnJ,KAAK/C,QAAS+C,KAAK7C,QAAS6C,KAAKuD,SAAS9J,OACpFuG,KAAKoK,cAAgB/N,EAErBD,EAAerD,EAAWX,EAASC,EAASC,EAAQU,EADpDC,EAAa+G,sBAAyBA,KAAKhH,YAAegH,gBAAmBA,KAAKjD,YAAciD,KAAKjD,aAAe,IAAMV,EAChD2D,KAAK9G,WAC/E+O,EAAS,GAAI7G,cAAWpB,KAAKxF,QAAQJ,GAAK,oBAAqB,OAAS4F,KAAKmG,mBAAqBnG,KAAKyH,WAAWrI,0BAA6BY,KAAKuD,SAASvH,eAAiBgE,KAAKyH,WAAWtJ,sBAAwB6B,KAAKyH,WAAW7I,gBAAiB,IAAKxC,GACvPqM,GAKDiB,GADAxN,EAAmB/B,aAAW6F,KAAKxF,QAAQJ,GAAK,sBAChBY,aAAa,KAC7CkB,EAAiBR,aAAa,IAAKU,GACnCF,EAAiBR,aAAa,SAAUsE,KAAKuD,SAASvH,eAAiBgE,KAAKyH,WAAWtJ,wBANvFjC,EAAmB8D,KAAKsH,SAASa,SAASF,GAQ1CjI,KAAKoI,aAAe,IAEN,KADd2B,EAAQlQ,SAASmG,KAAK1H,OAAQ,IAAMuB,SAASmG,KAAKiK,YAAa,OAE3DD,EAAkBhK,KAAKuI,YAAewB,EAAQ,EAAM/J,KAAKuI,WAAa9P,KAAKyR,IAAIH,GAAUlQ,SAASmG,KAAK1H,OAAQ,KACzG0H,KAAKuI,WAAa9P,KAAKyR,IAAIH,GAAUlQ,SAASmG,KAAK1H,OAAQ,KACjE0H,KAAKqI,YAAcrI,KAAKsI,qBAAqB0B,EAAkBhK,KAAKmG,mBAAqBnG,KAAKyH,WAAWrI,4BAE7GlD,EAAiBR,aAAa,mBAAoBsE,KAAKqI,cAEjC,UAAtBrI,KAAKpC,cACL1B,EAAiBR,aAAa,iBAAkB,UA3BpDQ,EAAmB8D,KAAKmK,sBAAsB,oBAAqB/R,EAASC,EAASC,EAAQ0H,KAAKuD,SAAS9J,MAAOuG,KAAKyH,WAAW7I,gBAAkBoB,KAAKmG,mBAAqBnG,KAAKyH,WAAWrI,2BA8BlMY,KAAKqK,iBAAmBpR,EACnBwP,GACDzI,KAAKiH,UAAUjD,YAAY9H,GAE3B8D,KAAK7G,UAAUyC,SAAWoE,KAAK/E,gBAAiB,CAChD,GAAIqP,GAA4C,OAA3BtK,KAAKkJ,kBAA8B,IAAMlJ,KAAK7G,UAAUyB,KAC7EkP,GAAiB9J,KAAK2H,eAAe3H,KAAK0H,SAAU,KAAMe,EAAUiB,EAAe,GAAI,KAAMjB,GAC7FvM,EAAiBR,aAAa,QAAS,kBAAoBsE,KAAKxF,QAAQJ,GAAK,cAC7EiD,EAAoBjF,EAASC,EAASC,EAAQU,EAAYqD,EAAayN,EAAgB9J,KAAOA,KAAKmG,mBAAqBnG,KAAKyH,WAAWrI,0BAA4BkL,EAAe7B,EAAUgB,EAAc,MAE/M,GAAIzJ,KAAK/E,gBAAiB,CACtB,GAAIsP,GAAqB,EAAIjS,EAAS,IAClCkS,EAAiBzR,EAAWX,EAASC,EAASkS,EAAoBvR,EAAYqD,EAAa2D,KAAK9G,WAAW,GAC3GuR,EAAW,GAAIrJ,cAAWpB,KAAKxF,QAAQJ,GAAK,kBAAmB,cAAe,GAAI,cAAe,EAAG,IAAKoQ,GACzGE,EAAO1K,KAAKsH,SAASa,SAASsC,EAClCzK,MAAK0H,SAAS1D,YAAY0G,GAC1BxO,EAAiBR,aAAa,QAAS,kBAAoBsE,KAAKxF,QAAQJ,GAAK,cAC7E6B,IAAgC+D,KAAMhH,EAAYqD,EAAajE,EAASC,EAASkS,GAErFvK,KAAKiH,UAAUjD,YAAYhE,KAAK0H,YAI5C/C,EAAYzE,UAAU8G,YAAc,WAEhC,GAAI2D,GACAC,EAAc5K,KAAK7G,UAAUyC,MACjC,IAAkB,WAAdoE,KAAKkG,MAAqBlG,KAAK6K,kBAAmB,CAClD,GAAIC,OAAc,GACdC,MAAoB,GACpBC,MAAsB,GACtBC,EAAqBjL,KAAKmJ,uBAAuBnJ,KAAK/C,QAAS+C,KAAK7C,QAAS6C,KAAKvG,MAClFuG,MAAKvG,QAAUuG,KAAK7C,UACpB4N,EAAoB,IACpBC,EAAuBhL,KAAK7E,aAAaJ,MAAQkQ,EAAsB,KAEvEjL,KAAKvG,MAAQuG,KAAK7C,SAAW6C,KAAKvG,MAAQuG,KAAK/C,SAAW+C,KAAKvG,QAAUuG,KAAK/C,WAC9E8N,EAAoB,EACpBC,EAAuBhL,KAAK7E,aAAaJ,MAAQkQ,EAAsB,IAEvEjL,KAAKvG,MAAQuG,KAAK/C,SAAW+C,KAAKvG,MAAQuG,KAAK7C,UAC/C4N,EAAoBtS,KAAK2L,MAAoB,IAAbpE,KAAKvG,OAAgBuG,KAAK7C,QAAU6C,KAAK/C,UACzE+N,EAAuBhL,KAAK7E,aAAaJ,MAAQkQ,EAAsB,GAEvE1H,IACAC,QAAQ,EAAO0H,KAAMlL,KAAKmL,MAAQnL,KAAKmL,MAAQC,OAAOL,GAAqB,IAAKrK,MAAOV,KAAKqL,WAAW3K,MAG3G,IADAV,KAAKlE,QAAQ,aAAcyH,IACtBA,EAASC,OAAQ,CAClBmH,EAAWW,cAAY/H,EAAS2H,KAAMlL,KAAKqL,WACvCzG,IACAxK,GAAM4F,KAAKxF,QAAQJ,GAAK,eACxBmR,YAAavL,KAAKqL,WAAWtD,MAAQ/H,KAAKyH,WAAWlJ,eACrDiN,aAAcxL,KAAKqL,WAAWI,WAAazL,KAAKyH,WAAWjJ,gBAC3DkN,cAAe1L,KAAKqL,WAAWM,YAAc3L,KAAKyH,WAAWnJ,iBAC7DsN,cAAe5L,KAAKqL,WAAWQ,WAC/BpL,KAAQ8C,EAAS7C,OAASV,KAAKyH,WAAWpJ,UAC1C1F,EAAKqS,EACLnS,EAAKmH,KAAK7E,aAAatC,EAAKmH,KAAK7E,aAAakF,OAAS,EAAMsK,EAAStK,OAAS,EAC/EyL,cAAe,SACfxQ,WAAcsP,EAAc,SAAW,UAE3CE,GAAc9K,KAAKsH,SAASyE,WAAWnH,EAASrB,EAAS2H,MACzDlL,KAAKnE,aAAeiP,EACpB9K,KAAKiH,UAAUjD,YAAY8G,QAG9B,IAAkB,aAAd9K,KAAKkG,MAAuBlG,KAAK6K,kBAAmB,CACzD,GAAImB,OAAgB,GAChBC,MAAsB,GACtBC,EAASlM,KAAK7E,aAAaxC,EAAKqH,KAAK7E,aAAaJ,MAAQ,EAC1DoR,EAAQnM,KAAK7E,aAAatC,EAAKmH,KAAK7E,aAAakF,OAAS,GAC1DL,KAAKvG,QAAUuG,KAAK/C,SAAW+C,KAAKvG,MAAQuG,KAAK7C,WACjD8O,EAAsB,GAEtBjM,KAAKvG,QAAUuG,KAAK7C,UACpB8O,EAAsB,KAEtBjM,KAAKvG,MAAQuG,KAAK/C,SAAW+C,KAAKvG,MAAQuG,KAAK7C,UAC/C8O,EAAsBxT,KAAK2L,MAAoB,IAAbpE,KAAKvG,OAAgBuG,KAAK7C,QAAU6C,KAAK/C,UAE/E,IAAIsG,IACAC,QAAQ,EAAO0H,KAAMlL,KAAKmL,MAAQnL,KAAKmL,MAAQC,OAAOa,GAAuB,IAAKvL,MAAOV,KAAKqL,WAAW3K,MAG7G,IADAV,KAAKlE,QAAQ,aAAcyH,IACtBA,EAASC,OAAQ,CAClBmH,EAAWW,cAAY/H,EAAS2H,KAAMlL,KAAKqL,WAC3C,IAAIzG,IACAxK,GAAM4F,KAAKxF,QAAQJ,GAAK,iBACxBqG,KAAQ8C,EAAS7C,OAASV,KAAKyH,WAAWpJ,UAC1CkN,YAAavL,KAAKqL,WAAWtD,MAAQ/H,KAAKyH,WAAW9I,iBACrD6M,aAAcxL,KAAKqL,WAAWI,WAAazL,KAAKyH,WAAW/I,kBAC3DgN,cAAe1L,KAAKqL,WAAWM,YAAc3L,KAAKyH,WAAWhJ,mBAC7DmN,cAAe5L,KAAKqL,WAAWQ,WAC/BxL,OAAUL,KAAK7E,aAAakF,OAC5BtF,MAASiF,KAAK7E,aAAaJ,MAC3BO,WAAcsP,EAAc,SAAW,UACvCjS,EAAKuT,EACLrT,EAAKsT,EAAQxB,EAAStK,OAAS,EAC/ByL,cAAe,SAEnBE,GAAgBhM,KAAKsH,SAASyE,WAAWnH,EAASrB,EAAS2H,MAC3DlL,KAAKnE,aAAemQ,EACpBhM,KAAKiH,UAAUjD,YAAYgI,MAIvCrH,EAAYzE,UAAUgI,YAAc,SAAUvP,EAAGoC,EAAOwC,GACpD,GAAI6O,GAAUpM,eAA0C,UAAtBA,KAAKpC,aAClCjF,EAAIqH,KAAK7E,aAAaJ,MAAW8C,EAAgB,EAAKN,EAAc5E,EAAIqH,KAAK7E,aAAaJ,MACnE,UAAtBiF,KAAKpC,aAA6BjF,EAAKkF,EAAgB,EAAKN,EAAa5E,EAC3E0T,EAAUrM,eAA0C,UAAtBA,KAAKpC,aAClCwO,EAASrR,EAAS8C,EAAgBN,EAAe6O,EAASrR,EACnC,UAAtBiF,KAAKpC,aAA6BwO,EAASrR,EAAS8C,EAAgBN,EAAe6O,EAASrR,CAClG,OAAO,IAAMqR,EAAS,KAAOpM,KAAK7E,aAAatC,EAAKmH,KAAK7E,aAAakF,OAAS,GAC3E,IAAMgM,EAAS,KAAOrM,KAAK7E,aAAatC,EAAKmH,KAAK7E,aAAakF,OAAS,IAEhFsE,EAAYzE,UAAUiJ,uBAAyB,SAAUnM,EAAKE,EAAKzD,GAC/D,GACIQ,EACJ,OAAkB,WAAd+F,KAAKkG,MACLjM,GAAYR,EAAQuD,IAAQE,EAAMF,GACxBvD,EAAQuD,GAAOvD,EAAQyD,EAAO,EAAIjD,IAI5CA,GAAaR,EAAQuD,IAAQE,EAAMF,GAAQgD,KAAKjD,WAChD9C,GAAY+F,KAAKhH,YAAegH,gBAAmB/F,GAAYA,IAAa,IAClER,EAAQuD,GAAOvD,EAAQyD,EAAO8C,KAAKhH,WAAaiB,IAIlE0K,EAAYzE,UAAUoI,qBAAuB,SAAUvN,EAAOwC,GAC1D,GAAI+O,GAAuB,aAAdtM,KAAKkG,MJ1fC,SI0fsBlG,KAAKjD,WAAgCiD,KAAKoI,aAAepI,KAAKoI,aAAe,EAClHmE,EJ3fe,SI2fAvM,KAAKjD,YAA8C,WAAdiD,KAAKkG,KAAqBlG,KAAKoI,aAAepI,KAAKoI,aAAe,EACtHoE,EAAMxM,KAAKyF,WAA4B,WAAdzF,KAAKkG,KAAqBlG,KAAKyH,WAAW1I,eAAiBiB,KAAKyH,WAAWzI,kBACpG+I,EAAQhN,EAAQuR,EAAQE,CAG5B,OAFAzE,IAAQA,GAA+B,UAAtB/H,KAAKpC,aAA6B2O,GAAe1O,EAAgBN,GAAc,IAAMyC,KAAKoI,aAC3GoE,GAA8B,UAAtBxM,KAAKpC,aAA4BC,EAAgBN,EAAY,EAC9D,IAAMwK,EAAO,IAAMyE,GAE9B7H,EAAYzE,UAAUyH,eAAiB,SAAUD,EAAU3M,EAAOwE,EAAG5G,EAAG8P,EAASlL,GAC7E,GAAImN,GACA9J,EACAqH,CAwBJ,OAvBkB,WAAdjI,KAAKkG,KACAuC,EAQDiC,EAAOvQ,aAAW6F,KAAKxF,QAAQJ,GAAK,kBAPpCwG,EAAO,GAAIL,GAAWP,KAAKxF,QAAQJ,GAAK,gBAAiB,cAAe,EAAG,cAAe,EAAG,GAAIgG,GAA4B,UAAtBJ,KAAKpC,aAA6BoC,KAAK7E,aAAaxC,EAAKkF,EAAgB,EAAIN,EAAc5E,EAAG,EAAGqH,KAAKqE,aAAahE,OAASL,qBAAwBA,KAAK7E,aAAaJ,MAAQA,EAC1P,UAAtBiF,KAAKpC,aAA6BoC,KAAK7E,aAAaJ,MAAQA,EAAQ8C,EAAgBN,EACjFyC,KAAK7E,aAAaJ,MAAQA,IAClC2P,EAAO1K,KAAKsH,SAASmF,cAAc7L,GACnC8G,EAAS1D,YAAY0G,IAOpBjC,GAMDiC,EAAOvQ,aAAW6F,KAAKxF,QAAQJ,GAAK,oBAC/BsB,aAAa,IAAK6D,IANvB0I,EAAS,GAAI7G,cAAWpB,KAAKxF,QAAQJ,GAAK,kBAAmB,cAAe,GAAI,cAAe,EAAG,IAAKmF,GACvGmL,EAAO1K,KAAKsH,SAASa,SAASF,GAC9BP,EAAS1D,YAAY0G,IAOtBA,GAEX/F,EAAYzE,UAAUmJ,oBAAsB,SAAUjP,EAAIW,EAAO4F,EAASpD,GACtE,GAAImP,GAAQ1M,eAA0C,UAAtBA,KAAKpC,aAChCoC,KAAK7E,aAAaxC,EAAIqH,KAAK7E,aAAaJ,MAAW8C,EAAgB,EAAKN,EACxEyC,KAAK7E,aAAaxC,EAAIqH,KAAK7E,aAAaJ,MACjB,UAAtBiF,KAAKpC,aAA6BoC,KAAK7E,aAAaxC,EAAKkF,EAAgB,EAAKN,EAAayC,KAAK7E,aAAaxC,EAC/GgU,EAAQ3M,KAAK7E,aAAatC,EAAKmH,KAAK7E,aAAakF,OAAS,EAC1DoF,EAAYzF,KAAKyF,UAAYzF,KAAKyH,WAAW1I,eAC7C6N,EAAW5M,KAAK7E,aAAaJ,MAAQiF,KAAKoI,aAC1CyE,EAAe7M,KAAK7E,aAAaJ,OAAUiF,KAAKoI,aAAe,GAAK3C,CACxEoH,IAAeA,GACa,UAAtB7M,KAAKpC,aAA4BoC,KAAKoI,cAAgBvK,EAAgBN,GAAa,IAAMyC,KAAKoI,YAWpG,KAAK,GAPD0E,GACApM,EAEAuH,EACA8E,EAPAP,EAA6B,UAAtBxM,KAAKpC,aAA6B6H,EAAY5H,EAAgBN,EAAckI,EACnFuH,EAAehN,KAAKsH,SAAS2F,aAAc7S,GAAM4F,KAAKxF,QAAQJ,GAAKA,EAAK,UACxEkS,EAAQ7T,KAAKyU,KAAKnS,EAAQ6R,GAG1BO,EAAI,EAGJC,EAAkC,UAAtBpN,KAAKpC,aAA6B7C,EAAS8C,EAAgBN,EAAcxC,EACrFsS,EAAkBrN,KAAKmG,mBAAqBnG,KAAKyH,WAAWvI,wBACvD+C,EAAI,EAAGA,EAAIqK,EAAOrK,IACvB6K,EAAYM,EAAWP,EAAeO,EAAWP,EAC7CM,EAAInN,KAAKoJ,aAAa1M,QACtBgE,EAAQV,KAAKoJ,aAAa+D,GAC1BA,MAGAA,EAAI,EACJzM,EAAQV,KAAKoJ,aAAa+D,GAC1BA,KAEJlF,EAAS,GAAI7G,cAAWpB,KAAKxF,QAAQJ,GAAKA,EAAK6H,EAAG,OAAQoL,EAAiB3M,EAAOC,EAAS,IAAKX,KAAKsN,qBAAqBZ,EAAMC,EAAMG,IACtIC,EAAc/M,KAAKsH,SAASa,SAASF,GACX,UAAtBjI,KAAKpC,cACLmP,EAAYrR,aAAa,iBAAkB,SAE/CsR,EAAahJ,YAAY+I,GACzBL,GAAS1M,gBAAmB6M,EAAcL,EAAMK,EAAcL,EAE9DY,GADAA,GAAYP,EAAcL,GACH,EAAK,EAAIY,CAEpC,OAAOJ,IAEXrI,EAAYzE,UAAUoN,qBAAuB,SAAU3U,EAAGE,EAAGkC,GACzD,MAAO,KAAYpC,EAAI,IAAME,EAAI,MAAaF,GAAMqH,gBAAmBjF,EAAQA,IAAU,IAAMlC,GAEnG8L,EAAYzE,UAAUiK,sBAAwB,SAAU/P,EAAIzB,EAAGE,EAAGgJ,EAAGpI,EAAOkH,EAASpD,GACjF,GAAInE,GAAQ4G,KAAKhH,WACbK,EAAM2G,KAAKuN,aAAavN,KAAK/C,QAAS+C,KAAK7C,QAAS1D,EACxDJ,IAA8B,UAAtB2G,KAAKpC,cJjlBM,SIilBsBoC,KAAKjD,WAC1CiD,KAAKuN,aAAa,EAAGvN,KAAKuI,WAAc1K,EAAgB,EAAKN,GAAc,CAC/E,IAAIwK,GAAQ/H,KAAKuI,YJnlBE,SImlBavI,KAAKjD,WAAgCiD,KAAKoI,aACtEpI,KAAKoI,aAAe,IAAMpI,KAAKyF,UAAYzF,KAAKyH,WAAWzI,iBAC/D+I,IAAQA,GACoB,UAAtB/H,KAAKpC,cJtlBQ,SIulBRoC,KAAKjD,WACJiD,KAAKoI,aAAepI,KAAKoI,aAAe,GAAKvK,EAAgBN,EAAa,IAAMyC,KAAKoI,YACjG,IAAIoF,GAAYxN,KAAKuN,aAAa,EAAGvN,KAAKuI,WAAavI,KAAKuI,WAAavI,KAAKoI,aAC9EoF,IAAoC,UAAtBxN,KAAKpC,cJ1lBA,SI0lB4BoC,KAAKjD,WAChDiD,KAAKuN,aAAa,EAAGvN,KAAKuI,WAAc1K,EAAgB,EAAKN,GAAc,CAC/E,IAAIkQ,GAASzN,KAAKuN,aAAa,EAAGvN,KAAKuI,WAAYR,GAC/CyE,EAAMxM,KAAKuN,aAAa,EAAGvN,KAAKuI,WAAavI,KAAKyF,UAAYzF,KAAKyH,WAAWzI,iBAClFwN,IAA8B,UAAtBxM,KAAKpC,aAA4BoC,KAAKuN,aAAa,EAAGvN,KAAKuI,WAAa1K,EAAgBN,GAAc,CAY9G,KAAK,GARDwP,GACAW,EACAC,EAEAjN,EAEAuH,EATA+E,EAAehN,KAAKsH,SAAS2F,aAAc7S,GAAM4F,KAAKxF,QAAQJ,GAAKA,EAAK,UACxEwT,EAAWnV,KAAKoV,MAAMxU,EAAMmU,GAC5BlB,EAAQ7T,KAAKyU,MAAM7T,EAAMmT,EAAMoB,GAAYH,GAI3CK,GAAa1U,GAAU4G,gBAAmByN,EAASA,IAAW,IAE9DN,EAAI,EAEJY,EAAoB/N,KAAKmG,mBAAqBnG,KAAKyH,WAAWrI,0BACzD6C,EAAI,EAAGA,EAAIqK,EAAOrK,IAGvB8K,EAAchU,EAAWJ,EAAGE,EAAGgJ,EAAGzI,EAFlCuU,EAAc3N,eAAoBA,KAAKhH,WAAaK,EAAMyU,EAAa9N,KAAKhH,WAAaK,EAAMyU,EACzF9N,KAAKhH,WAAaK,EAAMyU,EAAa9N,KAAKhH,WAAaK,EAAMyU,EACd9N,KAAK9G,WACtDiU,EAAInN,KAAKoJ,aAAa1M,QACtBgE,EAAQV,KAAKoJ,aAAa+D,GAC1BA,MAGAA,EAAI,EACJzM,EAAQV,KAAKoJ,aAAa+D,GAC1BA,KAEJlF,EAAS,GAAI7G,cAAWpB,KAAKxF,QAAQJ,GAAKA,EAAK6H,EAAG,OAAQ8L,EAAmBrN,EAAOC,EAAS,IAAKoM,GAClGW,EAAkB1N,KAAKsH,SAASa,SAASF,GACf,UAAtBjI,KAAKpC,cACL8P,EAAgBhS,aAAa,iBAAkB,SAEnDsR,EAAahJ,YAAY0J,GACzBtU,EAAQuU,GAAe3N,gBAAmBwM,EAAMA,GAChDsB,GAAc9N,gBAAmByN,EAASjB,EAAMiB,EAASjB,CAE7D,OAAOQ,IAEXrI,EAAYzE,UAAUqN,aAAe,SAAUvQ,EAAKE,EAAKzD,GAErD,OADcA,EAAQuD,IAAQE,EAAMF,GAAQgD,KAAKjD,YAMrD4H,EAAYzE,UAAUwG,SAAW,WAC7B1G,KAAKyH,WAAa3J,EAAsBkC,KAAKjC,QAKjD4G,EAAYzE,UAAUoG,iBAAmB,WACjCtG,KAAKrD,0BAA4BqD,KAAKvD,YAAYC,OAAS,GAC3DsD,KAAKrD,yBAAyB4H,kBAAkBvE,KAAKmH,aAQ7DxC,EAAYzE,UAAU8N,eAAiB,SAAUC,GAC7C,GAAIhN,GAAQjB,IAEZ,OAAM,GAAIuF,OAAOC,UAAYxF,KAAKsF,yBAA2B,KACzD,OAAO,CAEX,IAAI4I,IACAC,IAAKnO,KACLyD,KAAM,UACN2K,YAAa,GAAI9N,GAAK,EAAG,GACzB+N,aAAc,GAAI/N,GAAKN,KAAKqE,aAAatJ,MAAOiF,KAAKqE,aAAahE,QAkBtE,OAhBIL,MAAKsO,UACLC,aAAavO,KAAKsO,UAEtBtO,KAAKsO,SAAWE,WAAW,WACvB,GAAIvN,EAAMwN,YAEN,WADAF,cAAatN,EAAMqN,SAGvBJ,GAAIE,YAAcnN,EAAMoD,aACxBpD,EAAMnF,QAAQ,UAAWoS,GACzBjN,EAAMgE,2BACNhE,EAAMiE,6BACNjE,EAAMkG,WAAW/J,UAAY,GAC7B6D,EAAMqF,mBACNrF,EAAMmE,kBACP,MACI,GAKXT,EAAYzE,UAAU4E,aAAe,WACjC4J,OAAOC,oBAAqBC,UAAQC,SAAY,eAAiBH,SAAU,uBAAyBA,QAAW,oBAAsB,SAAU1O,KAAK8O,eAKxJnK,EAAYzE,UAAU6E,WAAa,WAC/B/E,KAAK8O,aAAe9O,KAAKgO,eAAee,KAAK/O,MAC7C0O,OAAOM,iBAAkBJ,UAAQC,SAAY,eAAiBH,SAAU,uBAAyBA,QAAW,oBAAsB,SAAU1O,KAAK8O,eAErJnK,EAAYzE,UAAUuG,UAAY,WAC9B,GAAIwI,GAAa5U,SAASC,eAAe0F,KAAKxF,QAAQJ,GAAK,MACvD6U,IACAxU,SAAOwU,IAGftK,EAAYzE,UAAUgP,kBAAoB,SAAUC,EAASC,GACzD,IAAK,GAAIC,GAAK,EAAGC,EAAK7P,OAAO8P,KAAKJ,GAAUE,EAAKC,EAAG5S,OAAQ2S,IAExD,OADWC,EAAGD,IAEV,IAAK,cACDrP,KAAKmH,WAAW/J,UAAY,GAC5B4C,KAAKsG,mBAELnK,EADwB9B,SAASC,eAAe0F,KAAKxF,QAAQJ,GAAK,eAAewC,SAAS,GACjDoD,KAAMA,KAAKhH,WAAYgH,KAAKoK,cACrE,MACJ,KAAK,QACDpK,KAAKuD,UACD9J,MAAOuG,KAAKvG,MACZuC,cAAegE,KAAKhE,cACpBD,WAAYiE,KAAKjE,YAEjBiE,KAAKuD,SAAS9J,QAAUuG,KAAK7C,QAC7B6C,KAAKlE,QJntBE,oBImtByBkE,KAAKuD,UAGrCvD,KAAKlE,QJ1tBH,eI0tByBkE,KAAKuD,UAElB,aAAdvD,KAAKkG,KACLlG,KAAK+G,uBAAuB/G,KAAK2J,mBAAoB3J,KAAKqK,kBAAkB,GAG5ErK,KAAK8G,sBAAqB,EAAM9G,KAAKsJ,yBAMzD3E,EAAYzE,UAAUsP,gBAAkB,WACpC,GAAIC,KAWJ,OATmBzP,MAAKvD,YAAYiT,KAAK,SAAUjW,GAC/C,MAA0B,QAAlBA,EAAMuJ,WAGdyM,EAAQE,MACJC,OAAQ,qBACRpU,MAAOwE,QAGRyP,GAEX9K,EAAYzE,UAAU2P,eAAiB,WACnC,MAAO,KAQXlL,EAAYzE,UAAUwE,QAAU,WAC5B1E,KAAK8E,eACLtE,EAAON,UAAUwE,QAAQxD,KAAKlB,MAC9BA,KAAKyG,YACLzG,KAAKiH,UAAY,KACjBjH,KAAKxF,QAAQsV,UAAUrV,OAAO,kBAElC6G,GACIe,WAAS,WACVsC,EAAYzE,UAAW,WAAQ,IAClCoB,GACIe,WAAS,OACVsC,EAAYzE,UAAW,YAAS,IACnCoB,GACIe,WAAS,OACVsC,EAAYzE,UAAW,wBAAqB,IAC/CoB,GACIe,WAAS,IACVsC,EAAYzE,UAAW,cAAW,IACrCoB,GACIe,WAAS,MACVsC,EAAYzE,UAAW,cAAW,IACrCoB,GACIe,WAAS,IACVsC,EAAYzE,UAAW,iBAAc,IACxCoB,GACIe,WAAS,IACVsC,EAAYzE,UAAW,eAAY,IACtCoB,GACIe,WAAS,SACVsC,EAAYzE,UAAW,aAAU,IACpCoB,GACIe,WAAS,SACVsC,EAAYzE,UAAW,kBAAe,IACzCoB,GACIe,WAAS,IACVsC,EAAYzE,UAAW,mBAAgB,IAC1CoB,GACIe,WAAS,OACVsC,EAAYzE,UAAW,eAAY,IACtCoB,GACIe,WAAS,KACVsC,EAAYzE,UAAW,mBAAgB,IAC1CoB,GACIe,WAAS,SACVsC,EAAYzE,UAAW,mBAAgB,IAC1CoB,GACIe,WAAS,OACVsC,EAAYzE,UAAW,aAAU,IACpCoB,GACIe,WAAS,OACVsC,EAAYzE,UAAW,YAAS,IACnCoB,GACIe,YAAS,IACVsC,EAAYzE,UAAW,sBAAmB,IAC7CoB,GACIe,YAAS,IACVsC,EAAYzE,UAAW,gBAAa,IACvCoB,GACIe,WAAS,OACVsC,EAAYzE,UAAW,iBAAc,IACxCoB,GACIe,WAAS,OACVsC,EAAYzE,UAAW,oBAAiB,IAC3CoB,GACIe,WAAS,IACVsC,EAAYzE,UAAW,qBAAkB,IAC5CoB,GACIe,WAAS,IACVsC,EAAYzE,UAAW,wBAAqB,IAC/CoB,GACIe,WAAS,WACVsC,EAAYzE,UAAW,YAAS,IACnCoB,GACIe,YAAS,IACVsC,EAAYzE,UAAW,wBAAqB,IAC/CoB,GACIyO,WAAUhI,KAAM,KAAMrH,MAAO,KAAM+K,UAAW,KAAMI,WAAY,SAAUF,WAAY,MAAQpJ,IAC/FoC,EAAYzE,UAAW,iBAAc,IACxCoB,GACIe,WAAS,KACVsC,EAAYzE,UAAW,YAAS,IACnCoB,GACIyO,aAAY5N,IACbwC,EAAYzE,UAAW,aAAU,IACpCoB,GACIyO,aAAYlV,IACb8J,EAAYzE,UAAW,gBAAa,IACvCoB,GACI0O,WACDrL,EAAYzE,UAAW,WAAQ,IAClCoB,GACI0O,WACDrL,EAAYzE,UAAW,iBAAc,IACxCoB,GACI0O,WACDrL,EAAYzE,UAAW,aAAU,IACpCoB,GACI0O,WACDrL,EAAYzE,UAAW,mBAAgB,IAC1CoB,GACI0O,WACDrL,EAAYzE,UAAW,wBAAqB,IAC/CoB,GACI0O,WACDrL,EAAYzE,UAAW,wBAAqB,IAC/CoB,GACI2O,kBAAiBzN,IAClBmC,EAAYzE,UAAW,kBAAe,IACzCyE,EAAcrD,GACV4O,yBACDvL,IAELwL,mBCx3BFC,GAAkBC,OAAOC,iOR2GK"}