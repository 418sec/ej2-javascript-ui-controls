{"version":3,"file":"ej2-progressbar.umd.min.js","sources":["../src/progressbar/utils/helper.js","../src/progressbar/utils/progress-animation.js","../src/progressbar/model/constant.js","../src/progressbar/model/progress-base.js","../src/progressbar/model/annotation.js","../src/progressbar/model/progress-annotation.js","../src/progressbar/progressbar.js","../src/progressbar/utils/theme.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * helper for progress bar\n */\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, height, width) {\n        this.x = x;\n        this.y = y;\n        this.height = height;\n        this.width = width;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar Size = /** @class */ (function () {\n    function Size(height, width) {\n        this.height = height;\n        this.width = width;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, width, color, opacity, rect, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, width, color, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        _this.stroke = (width !== 0 && _this.stroke !== '') ? color : 'transparent';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/** calculate the start and end point of circle */\nexport function degreeToLocation(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * (Math.PI / 180);\n    return {\n        x: centerX + (radius * Math.cos(angleInRadians)),\n        y: centerY + (radius * Math.sin(angleInRadians))\n    };\n}\n/** calculate the path of the circle */\nexport function getPathArc(x, y, radius, startAngle, endAngle, enableRtl, animation) {\n    // tslint:disable-next-line\n    var start = degreeToLocation(x, y, radius, startAngle);\n    // tslint:disable-next-line\n    var end = degreeToLocation(x, y, radius, endAngle);\n    var largeArcFlag = '0';\n    var sweepFlag = (enableRtl) ? '0' : '1';\n    if (!enableRtl) {\n        largeArcFlag = ((endAngle >= startAngle) ? endAngle : endAngle + 360) - startAngle <= 180 ? '0' : '1';\n    }\n    else {\n        largeArcFlag = ((startAngle >= endAngle) ? startAngle : startAngle + 360) - endAngle <= 180 ? '0' : '1';\n    }\n    var d;\n    if (animation) {\n        d = 'M ' + x + ' ' + y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' ' + ' 0 ' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y;\n    }\n    else {\n        d = 'M' + start.x + ' ' + start.y +\n            'A' + radius + ' ' + radius + ' ' + '0' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y;\n    }\n    return d;\n}\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Animation Effect Calculation\n * @private\n */\nexport function effect(currentTime, startValue, endValue, duration, enableRtl) {\n    var start = (enableRtl) ? endValue : -endValue;\n    var end = startValue + ((enableRtl) ? -endValue : endValue);\n    return start * Math.cos(currentTime / duration * (Math.PI / 2)) + end;\n}\n/**\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * @private\n */\nexport function removeElement(id) {\n    if (!id) {\n        return null;\n    }\n    var element = typeof id === 'string' ? getElement(id) : id;\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * @private\n */\nvar ProgressLocation = /** @class */ (function () {\n    function ProgressLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return ProgressLocation;\n}());\nexport { ProgressLocation };\n","import { Animation } from '@syncfusion/ej2-base';\nimport { effect, getPathArc } from '../utils/helper';\nimport { lineCapRadius } from '../model/constant';\n/**\n * To do the animation for linear progress bar\n */\nexport function doLinearAnimation(element, progress, delay, start) {\n    var animation = new Animation({});\n    var linearPath = element;\n    var width = linearPath.getAttribute('width');\n    var x = (progress.isIndeterminate ? -(+linearPath.getAttribute('width')) : +linearPath.getAttribute('x')).toString();\n    var currentTime;\n    var end = progress.progressRect.x + progress.progressRect.width +\n        (progress.isIndeterminate ? (+linearPath.getAttribute('width')) : 0);\n    var animationDelay = (progress.isIndeterminate) ? 0 : delay;\n    linearPath.style.visibility = 'hidden';\n    animation.animate(linearPath, {\n        duration: progress.animation.duration,\n        delay: animationDelay,\n        progress: function (args) {\n            if (progress.enableRtl) {\n                if (progress.isIndeterminate) {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        currentTime = effect(args.timeStamp, end - parseInt(width, 10), end - parseInt(x, 10), args.duration, progress.enableRtl);\n                        linearPath.setAttribute('x', currentTime.toString());\n                    }\n                }\n                else {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        currentTime = effect(args.timeStamp, parseInt(width, 10), parseInt(width, 10) - parseInt(x, 10), args.duration, progress.enableRtl);\n                        linearPath.setAttribute('x', currentTime.toString());\n                    }\n                }\n            }\n            else {\n                if (progress.isIndeterminate) {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        currentTime = effect(args.timeStamp, parseInt(x, 10), end, args.duration, progress.enableRtl);\n                        linearPath.setAttribute('x', currentTime.toString());\n                    }\n                }\n                else {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        currentTime = effect(args.timeStamp, start, parseInt(width, 10), args.duration, progress.enableRtl);\n                        linearPath.setAttribute('width', currentTime.toString());\n                    }\n                }\n            }\n        },\n        end: function (model) {\n            if (progress.enableRtl) {\n                if (progress.isIndeterminate) {\n                    linearPath.setAttribute('x', x);\n                    doLinearAnimation(element, progress, 0);\n                }\n                else {\n                    linearPath.setAttribute('x', x);\n                }\n            }\n            else {\n                if (progress.isIndeterminate) {\n                    linearPath.setAttribute('x', x);\n                    doLinearAnimation(element, progress, 0);\n                }\n                else {\n                    linearPath.setAttribute('width', width);\n                }\n            }\n            if (progress.animation.enable) {\n                progress.labelElement.setAttribute('visibility', 'visible');\n            }\n            progress.trigger('animationComplete', {\n                value: progress.value, trackColor: progress.trackColor,\n                progressColor: progress.progressColor\n            });\n        }\n    });\n}\n/** To do the animation for circular progress bar */\nexport function doCircularIndeterminate(circularProgress, progress, start, end, x, y, radius) {\n    var animation = new Animation({});\n    animation.animate(circularProgress, {\n        duration: 2000,\n        delay: 0,\n        progress: function (args) {\n            start += 5;\n            end += 5;\n            circularProgress.setAttribute('d', getPathArc(x, y, radius, start % 360, end % 360, progress.enableRtl, true));\n        },\n        end: function (model) {\n            doCircularIndeterminate(circularProgress, progress, start, end, x, y, radius);\n        }\n    });\n}\n/** To do the annotation animation for circular progress bar */\nexport function doAnnotationAnimation(circularPath, progress, start, progressEnd) {\n    var animation = new Animation({});\n    var value = 0;\n    var isAnnotation = progress.annotations.length > 0;\n    var annotatElementChanged;\n    var firstAnnotatElement;\n    if (isAnnotation && progress.progressAnnotationModule) {\n        firstAnnotatElement = document.getElementById(progress.element.id + 'Annotation0').children[0];\n        if (firstAnnotatElement && firstAnnotatElement.children[0]) {\n            if (firstAnnotatElement.children[0].tagName === 'SPAN') {\n                annotatElementChanged = firstAnnotatElement.children[0];\n            }\n        }\n    }\n    var annotateValueChanged;\n    var totalAngle = progress.totalAngle;\n    var min = progress.minimum;\n    var max = progress.maximum;\n    var end = (start > progressEnd) ? progressEnd + 360 : progressEnd;\n    animation.animate(circularPath, {\n        duration: progress.animation.duration,\n        delay: progress.animation.delay,\n        progress: function (args) {\n            if (isAnnotation && annotatElementChanged) {\n                value = effect(args.timeStamp, start, progress.totalAngle, args.duration, progress.enableRtl);\n                if (value <= end) {\n                    annotateValueChanged = parseInt((((value - start) / totalAngle) * (max - min) + min).toString(), 10);\n                    annotatElementChanged.innerHTML = annotateValueChanged ? annotateValueChanged.toString() + '%' : '';\n                }\n                else {\n                    annotatElementChanged.innerHTML = progress.value + '%';\n                }\n            }\n        },\n        end: function (model) {\n            annotatElementChanged.innerHTML = progress.value + '%';\n        }\n    });\n}\n/** To do the animation for circular progress bar */\nexport function doCircularAnimation(x, y, radius, start, progressWidth, element, progress, thickness, delay, startValue) {\n    var animation = new Animation({});\n    var circularPath = element;\n    var pathRadius = 2 * radius * 0.75;\n    var value = 0;\n    var isAnnotation = progress.annotations.length > 0;\n    var annotatElement;\n    var firstElement;\n    if (isAnnotation && progress.progressAnnotationModule) {\n        firstElement = document.getElementById(progress.element.id + 'Annotation0').children[0];\n        if (firstElement && firstElement.children[0]) {\n            if (firstElement.children[0].tagName === 'SPAN') {\n                annotatElement = firstElement.children[0];\n            }\n        }\n    }\n    var annotateValue;\n    var totalAngle = progress.totalAngle;\n    var min = progress.minimum;\n    var max = progress.maximum;\n    var end = (start > progressWidth) ? progressWidth + 360 : progressWidth;\n    var animationDelay = (progress.isIndeterminate) ? 0 : delay;\n    start += (progress.cornerRadius === 'Round' && !progress.isIndeterminate) ?\n        ((progress.enableRtl === true) ? (lineCapRadius * thickness / 2) : -(lineCapRadius * thickness / 2)) : 0;\n    animation.animate(circularPath, {\n        duration: progress.animation.duration,\n        delay: animationDelay,\n        progress: function (args) {\n            if (args.timeStamp >= args.delay) {\n                value = effect(args.timeStamp, startValue | start, progress.totalAngle, args.duration, progress.enableRtl);\n                if (isAnnotation && annotatElement) {\n                    if (value <= end) {\n                        annotateValue = parseInt((((value - start) / totalAngle) * (max - min) + min).toString(), 10);\n                        annotatElement.innerHTML = annotateValue ? annotateValue.toString() + '%' : '';\n                    }\n                    else {\n                        annotatElement.innerHTML = progress.value + '%';\n                    }\n                }\n                circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, value, progress.enableRtl, true));\n            }\n        },\n        end: function (model) {\n            circularPath.setAttribute('d', getPathArc(x, y, pathRadius, 0, 359.99, false, true));\n            if (isAnnotation && annotatElement) {\n                annotatElement.innerHTML = progress.value + '%';\n            }\n            if (progress.animation.enable) {\n                progress.labelElement.setAttribute('visibility', 'visible');\n            }\n            progress.trigger('animationComplete', {\n                value: progress.value, trackColor: progress.trackColor,\n                progressColor: progress.progressColor\n            });\n        }\n    });\n}\n","/**\n * corner Radius\n */\nexport var lineCapRadius = 0.9;\n/**\n * complete Angle\n */\nexport var completeAngle = 359.99;\n/**\n * valueChanged event\n */\nexport var valueChanged = 'valueChanged';\n/**\n * progressCompleted event\n */\nexport var progressCompleted = 'progressCompleted';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * progress bar complex interface\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in charts.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Animation\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(2000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Annotation\n */\nvar ProgressAnnotationSettings = /** @class */ (function (_super) {\n    __extends(ProgressAnnotationSettings, _super);\n    function ProgressAnnotationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ProgressAnnotationSettings.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressAnnotationSettings.prototype, \"annotationAngle\", void 0);\n    __decorate([\n        Property('0%')\n    ], ProgressAnnotationSettings.prototype, \"annotationRadius\", void 0);\n    return ProgressAnnotationSettings;\n}(ChildProperty));\nexport { ProgressAnnotationSettings };\n","import { createElement } from '@syncfusion/ej2-base';\nimport { annotationRender, removeElement, ProgressLocation } from '../utils/helper';\n/**\n * Base file for annotation\n */\nvar AnnotationBase = /** @class */ (function () {\n    /**\n     * Constructor for chart and accumulation annotation\n     * @param control\n     */\n    function AnnotationBase(control) {\n        this.control = control;\n    }\n    AnnotationBase.prototype.render = function (annotation, index) {\n        this.annotation = annotation;\n        var childElement = createElement('div', {\n            id: this.control.element.id + 'Annotation' + index,\n            styles: 'position:absolute;z-index:1', innerHTML: annotation.content\n        });\n        return childElement;\n    };\n    /**\n     * To process the annotation\n     * @param annotation\n     * @param index\n     * @param parentElement\n     */\n    AnnotationBase.prototype.processAnnotation = function (annotation, index, parentElement) {\n        var annotationElement;\n        var location;\n        location = new ProgressLocation(0, 0);\n        annotationElement = this.render(annotation, index);\n        if (annotationElement) {\n            this.setElementStyle(location, annotationElement, parentElement);\n        }\n        else if (this.control.redraw) {\n            removeElement(annotationElement.id);\n        }\n    };\n    AnnotationBase.prototype.setElementStyle = function (location, element, parentElement) {\n        var argsData = {\n            cancel: false, name: annotationRender, content: element,\n            location: location\n        };\n        this.control.trigger(annotationRender, argsData);\n        if (!argsData.cancel) {\n            var result = this.Location(this.annotation.annotationRadius, this.annotation.annotationAngle);\n            argsData.content.style.left = result.left + 'px';\n            argsData.content.style.top = result.top + 'px';\n            argsData.content.style.transform = 'translate(-50%, -50%)';\n            argsData.content.setAttribute('aria-label', 'Annotation');\n            parentElement.appendChild(argsData.content);\n        }\n    };\n    AnnotationBase.prototype.Location = function (radius, angle) {\n        var top;\n        var left;\n        var radius1 = parseFloat(radius);\n        if (radius1 === 0 && angle === 0) {\n            var rect = this.control.progressRect;\n            left = rect.x + (rect.width / 2);\n            top = rect.y + (rect.height / 2);\n        }\n        else {\n            var degToRadFactor = Math.PI / 180;\n            angle = angle - 90;\n            angle = angle * degToRadFactor;\n            var x = Math.round(this.control.progressSize.width / 2.25);\n            var y = Math.round(this.control.progressSize.height / 2.25);\n            left = (radius1 * Math.cos(angle)) + x;\n            top = (radius1 * Math.sin(angle)) + y;\n        }\n        return {\n            top: top, left: left\n        };\n    };\n    return AnnotationBase;\n}());\nexport { AnnotationBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createElement } from '@syncfusion/ej2-base';\nimport { AnnotationBase } from './annotation';\n/**\n * Class for progress annotation\n */\nvar ProgressAnnotation = /** @class */ (function (_super) {\n    __extends(ProgressAnnotation, _super);\n    /**\n     * Constructor for Progress annotation\n     * @private\n     */\n    function ProgressAnnotation(control, annotations) {\n        var _this = _super.call(this, control) || this;\n        _this.progress = control;\n        _this.annotations = annotations;\n        return _this;\n    }\n    /**\n     * Method to render the annotation for chart\n     * @param element\n     * @private\n     */\n    ProgressAnnotation.prototype.renderAnnotations = function (element) {\n        var _this = this;\n        this.annotations = this.progress.annotations;\n        var parentElement = document.getElementById(this.progress.element.id + 'Annotation_collections');\n        this.parentElement = parentElement ? parentElement : createElement('div', {\n            id: this.progress.element.id + 'Annotation_collections',\n            styles: 'position:absolute'\n        });\n        this.annotations.map(function (annotation, index) {\n            _this.processAnnotation(annotation, index, _this.parentElement);\n        });\n        if (!parentElement) {\n            element.appendChild(this.parentElement);\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ProgressAnnotation.prototype.getModuleName = function () {\n        return 'ProgressAnnotation';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    ProgressAnnotation.prototype.destroy = function (control) {\n        // Destroy method performed here\n    };\n    return ProgressAnnotation;\n}(AnnotationBase));\nexport { ProgressAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Browser, Complex, Event, Collection } from '@syncfusion/ej2-base';\nimport { createElement, remove } from '@syncfusion/ej2-base';\nimport { Rect, Size, getPathArc, RectOption, stringToNumber } from './utils/helper';\nimport { doLinearAnimation, doCircularAnimation, doCircularIndeterminate, doAnnotationAnimation } from './utils/progress-animation';\nimport { Margin, Animation, Font } from './model/progress-base';\nimport { SvgRenderer, PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { getProgressThemeColor } from './utils/theme';\nimport { lineCapRadius, completeAngle, valueChanged, progressCompleted } from './model/constant';\nimport { ProgressAnnotationSettings } from './model/index';\n/**\n *  progress bar control\n */\nvar ProgressBar = /** @class */ (function (_super) {\n    __extends(ProgressBar, _super);\n    function ProgressBar(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    ProgressBar.prototype.getModuleName = function () {\n        return 'progressbar';\n    };\n    ProgressBar.prototype.preRender = function () {\n        this.unWireEvents();\n        this.progressRect = new Rect(0, 0, 0, 0);\n        this.progressSize = new Size(0, 0);\n        this.wireEvents();\n    };\n    ProgressBar.prototype.render = function () {\n        this.trigger('load', { progressBar: this });\n        this.calculateProgressBarSize();\n        this.calculateProgressBarBounds();\n        this.SetThemeValues();\n        this.renderAnnotations();\n        this.renderElements();\n        this.trigger('loaded', { progressBar: this });\n        this.renderComplete();\n        this.controlRenderedTimeStamp = new Date().getTime();\n    };\n    /**\n     * Set theme values\n     */\n    ProgressBar.prototype.SetThemeValues = function () {\n        switch (this.theme) {\n            case 'Bootstrap':\n            case 'Bootstrap4':\n                this.gapWidth = (!this.gapWidth) ? 4 : this.gapWidth;\n                this.cornerRadius = this.cornerRadius === 'Auto' ? 'Round' : this.cornerRadius;\n                break;\n            default:\n                this.cornerRadius = this.cornerRadius === 'Auto' ? 'Square' : this.cornerRadius;\n        }\n    };\n    /**\n     * calculate Initial Bounds\n     */\n    ProgressBar.prototype.calculateProgressBarBounds = function () {\n        this.progressRect.x = this.margin.left;\n        this.progressRect.y = this.margin.top;\n        this.progressRect.width -= this.margin.left + this.margin.right;\n        this.progressRect.height -= this.margin.top + this.margin.bottom;\n    };\n    /**\n     * calculate size of the progress bar\n     */\n    ProgressBar.prototype.calculateProgressBarSize = function () {\n        var containerWidth = this.element.clientWidth || this.element.offsetWidth;\n        var containerHeight = this.element.clientHeight;\n        var width = (this.type === 'Linear') ? 200 : 120;\n        var height = (this.type === 'Linear') ? 30 : 120;\n        var padding = 10;\n        var thickness = Math.max(this.progressThickness, this.trackThickness);\n        height = (this.type === 'Linear' && thickness > (height - padding)) ? thickness + padding : height;\n        this.progressSize.width = stringToNumber(this.width, containerWidth) || containerWidth || width;\n        this.progressSize.height = stringToNumber(this.height, containerHeight) || containerHeight || height;\n        this.progressRect.width = this.progressSize.width;\n        this.progressRect.height = this.progressSize.height;\n    };\n    /**\n     * Render Annotation\n     */\n    ProgressBar.prototype.renderAnnotations = function () {\n        this.createSecElement();\n        this.renderAnnotation();\n    };\n    /**\n     * Render SVG Element\n     */\n    ProgressBar.prototype.renderElements = function () {\n        this.element.style.display = 'block';\n        this.element.style.position = 'relative';\n        this.removeSvg();\n        this.setTheme();\n        this.createSVG();\n        this.clipPathElement();\n        this.createTrack();\n        this.createLinearProgress();\n        this.createCircularProgress();\n        this.createLabel();\n        this.element.appendChild(this.svgObject);\n        this.setSecondaryElementPosition();\n    };\n    ProgressBar.prototype.createSecElement = function () {\n        var secElement = document.getElementById(this.element.id + 'Secondary_Element');\n        if (secElement) {\n            secElement.innerHTML = '';\n            this.secElement = secElement;\n            return;\n        }\n        this.secElement = createElement('div', {\n            id: this.element.id + 'Secondary_Element',\n            styles: 'position: absolute',\n        });\n        this.element.appendChild(this.secElement);\n    };\n    /**\n     * To set the left and top position for annotation for center aligned\n     */\n    ProgressBar.prototype.setSecondaryElementPosition = function () {\n        var element = this.secElement;\n        var rect = this.element.getBoundingClientRect();\n        var svgRect = getElement(this.svgObject.id).getBoundingClientRect();\n        element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    };\n    ProgressBar.prototype.createSVG = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + 'SVG',\n            width: this.progressSize.width,\n            height: this.progressSize.height,\n            style: 'background-color:' + this.themeStyle.backgroundColor\n        });\n    };\n    ProgressBar.prototype.clipPathElement = function () {\n        this.clipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippath' });\n        this.bufferClipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippathBuffer' });\n    };\n    ProgressBar.prototype.createTrack = function () {\n        var linearTrack;\n        var linearTrackWidth;\n        var centerX;\n        var centerY;\n        var size;\n        var radius;\n        var startAngle;\n        var endAngle;\n        var circularTrack;\n        var circularPath;\n        var option;\n        var trackThickness;\n        this.argsData = {\n            value: this.value,\n            progressColor: this.progressColor,\n            trackColor: this.trackColor\n        };\n        if (this.argsData.value === this.maximum) {\n            this.trigger(progressCompleted, this.argsData);\n        }\n        else {\n            this.trigger(valueChanged, this.argsData);\n        }\n        if (this.type === 'Linear') {\n            linearTrackWidth = this.progressRect.width;\n            option = new PathOption(this.element.id + '_Lineartrack', 'none', (this.trackThickness || this.themeStyle.linearTrackThickness), (this.argsData.trackColor || this.themeStyle.linearTrackColor), this.themeStyle.trackOpacity, '0', this.getPathLine(this.progressRect.x, linearTrackWidth, (this.trackThickness || this.themeStyle.linearTrackThickness)));\n            linearTrack = this.renderer.drawPath(option);\n            if (this.segmentCount > 1) {\n                this.segmentSize = this.calculateSegmentSize(linearTrackWidth, (this.trackThickness || this.themeStyle.linearTrackThickness));\n                linearTrack.setAttribute('stroke-dasharray', this.segmentSize);\n            }\n            if (this.cornerRadius === 'Round') {\n                linearTrack.setAttribute('stroke-linecap', 'round');\n            }\n            this.svgObject.appendChild(linearTrack);\n        }\n        else if (this.type === 'Circular') {\n            startAngle = this.startAngle;\n            this.totalAngle = (this.endAngle - this.startAngle) % 360;\n            this.totalAngle = (this.totalAngle <= 0 ? (360 + this.totalAngle) : this.totalAngle);\n            this.totalAngle -= (this.totalAngle === 360) ? 0.01 : 0;\n            endAngle = (this.startAngle + ((this.enableRtl) ? -this.totalAngle : +this.totalAngle)) % 360;\n            centerX = this.progressRect.x + (this.progressRect.width / 2);\n            centerY = this.progressRect.y + (this.progressRect.height / 2);\n            trackThickness = Math.max(this.trackThickness, this.progressThickness) ||\n                Math.max(this.themeStyle.circularProgressThickness, this.themeStyle.circularTrackThickness);\n            size = (Math.min(this.progressRect.height, this.progressRect.width) / 2) - trackThickness / 2;\n            radius = stringToNumber(this.radius, size);\n            radius = (radius === null) ? 0 : radius;\n            circularPath = getPathArc(centerX, centerY, radius, startAngle, endAngle, this.enableRtl);\n            option = new PathOption(this.element.id + '_Circulartrack', 'none', (this.trackThickness || this.themeStyle.circularTrackThickness), (this.argsData.trackColor || this.themeStyle.circularTrackColor), this.themeStyle.trackOpacity, '0', circularPath);\n            circularTrack = this.renderer.drawPath(option);\n            this.svgObject.appendChild(circularTrack);\n            this.trackwidth = circularTrack.getTotalLength();\n            if (this.segmentCount > 1) {\n                this.segmentSize = this.calculateSegmentSize(this.trackwidth, (this.trackThickness || this.themeStyle.linearTrackThickness));\n                circularTrack.setAttribute('stroke-dasharray', this.segmentSize);\n            }\n            if (this.cornerRadius === 'Round') {\n                circularTrack.setAttribute('stroke-linecap', 'round');\n            }\n        }\n    };\n    ProgressBar.prototype.createLinearProgress = function (refresh, prevWidth) {\n        if (prevWidth === void 0) { prevWidth = 0; }\n        var linearBuffer;\n        var secondaryProgressWidth;\n        var linearBufferWidth;\n        var option;\n        var linearProgress;\n        var progressWidth;\n        var linearProgressWidth;\n        var clipPathBuffer;\n        var clipPathLinear;\n        if (this.type === 'Linear') {\n            if (this.secondaryProgress !== null && !this.isIndeterminate) {\n                secondaryProgressWidth = this.calculateProgressRange(this.minimum, this.maximum, this.secondaryProgress);\n                linearBufferWidth = this.progressRect.width * secondaryProgressWidth;\n                if (this.segmentColor.length !== 0 && !this.isIndeterminate) {\n                    linearBuffer = this.createLinearSegment('_LinearBuffer', linearBufferWidth, this.themeStyle.bufferOpacity, (this.progressThickness || this.themeStyle.linearProgressThickness));\n                }\n                else {\n                    option = new PathOption(this.element.id + '_Linearbuffer', 'none', (this.progressThickness || this.themeStyle.linearProgressThickness), (this.argsData.progressColor || this.themeStyle.linearProgressColor), this.themeStyle.bufferOpacity, '0', this.getPathLine(this.progressRect.x, linearBufferWidth, (this.progressThickness || this.themeStyle.linearProgressThickness)));\n                    linearBuffer = this.renderer.drawPath(option);\n                    if (this.segmentCount > 1) {\n                        linearBuffer.setAttribute('stroke-dasharray', this.segmentSize);\n                    }\n                    if (this.cornerRadius === 'Round') {\n                        linearBuffer.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n                this.svgObject.appendChild(linearBuffer);\n                if (this.animation.enable) {\n                    clipPathBuffer = this.createClipPath(this.bufferClipPath, secondaryProgressWidth, null, this.progressRect.x, false, (this.progressThickness || this.themeStyle.linearProgressThickness));\n                    linearBuffer.setAttribute('style', 'clip-path:url(#' + this.element.id + '_clippathBuffer)');\n                    doLinearAnimation(clipPathBuffer, this, this.animation.delay, 0);\n                }\n                this.svgObject.appendChild(this.bufferClipPath);\n            }\n            if (this.argsData.value !== null) {\n                progressWidth = this.calculateProgressRange(this.minimum, this.maximum, this.argsData.value);\n                this.progressPreviousWidth = linearProgressWidth = this.progressRect.width * ((this.isIndeterminate) ? 1 : progressWidth);\n                if (this.segmentColor.length !== 0 && !this.isIndeterminate) {\n                    linearProgress = this.createLinearSegment('_LinearProgress', linearProgressWidth, this.themeStyle.progressOpacity, (this.progressThickness || this.themeStyle.linearProgressThickness));\n                }\n                else {\n                    if (!refresh) {\n                        option = new PathOption(this.element.id + '_Linearprogress', 'none', (this.progressThickness || this.themeStyle.linearProgressThickness), (this.argsData.progressColor || this.themeStyle.linearProgressColor), this.themeStyle.progressOpacity, '0', this.getPathLine(this.progressRect.x, linearProgressWidth, (this.progressThickness || this.themeStyle.linearProgressThickness)));\n                        linearProgress = this.renderer.drawPath(option);\n                    }\n                    else {\n                        linearProgress = getElement(this.element.id + '_Linearprogress');\n                        linearProgress.setAttribute('d', this.getPathLine(this.progressRect.x, linearProgressWidth, (this.progressThickness || this.themeStyle.linearProgressThickness)));\n                        linearProgress.setAttribute('stroke', this.argsData.progressColor || this.themeStyle.circularProgressColor);\n                    }\n                    if (this.segmentCount > 1) {\n                        linearProgress.setAttribute('stroke-dasharray', this.segmentSize);\n                    }\n                    if (this.cornerRadius === 'Round') {\n                        linearProgress.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n                this.svgObject.appendChild(linearProgress);\n                if (this.animation.enable || this.isIndeterminate) {\n                    var animationdelay = this.animation.delay + ((this.secondaryProgress !== null) ? (linearBufferWidth - linearProgressWidth) : 0);\n                    clipPathLinear = this.createClipPath(this.clipPath, progressWidth, null, refresh ? prevWidth : this.progressRect.x, refresh, (this.progressThickness || this.themeStyle.linearProgressThickness));\n                    linearProgress.setAttribute('style', 'clip-path:url(#' + this.element.id + '_clippath)');\n                    doLinearAnimation(clipPathLinear, this, animationdelay, refresh ? prevWidth : 0);\n                }\n                this.svgObject.appendChild(this.clipPath);\n            }\n        }\n    };\n    // tslint:disable-next-line:max-func-body-length\n    ProgressBar.prototype.createCircularProgress = function (previousStart, previousEnd, refresh) {\n        var centerX;\n        var centerY;\n        var size;\n        var endAngle;\n        var radius;\n        var startAngle = this.startAngle;\n        var previousPath;\n        this.progressStartAngle = startAngle;\n        var circularPath;\n        var bufferClipPath;\n        var progressEnd;\n        var circularProgress;\n        var circularBuffer;\n        var option;\n        var radiusDiff;\n        var progressThickness;\n        var linearClipPath;\n        var rDiff;\n        var progressSegment;\n        if (this.type === 'Circular') {\n            centerX = this.progressRect.x + (this.progressRect.width / 2);\n            centerY = this.progressRect.y + (this.progressRect.height / 2);\n            progressThickness = Math.max(this.trackThickness, this.progressThickness) ||\n                Math.max(this.themeStyle.circularProgressThickness, this.themeStyle.circularTrackThickness);\n            size = (Math.min(this.progressRect.height, this.progressRect.width) / 2) - progressThickness / 2;\n            radius = stringToNumber(this.innerRadius, size);\n            radius = (radius === null) ? 0 : radius;\n            if (this.secondaryProgress !== null && !this.isIndeterminate) {\n                if (this.segmentColor.length !== 0 && !this.isIndeterminate) {\n                    circularBuffer = this.createCircularSegment('_CircularBuffer', centerX, centerY, radius, this.secondaryProgress, this.themeStyle.bufferOpacity, (this.progressThickness || this.themeStyle.circularProgressThickness));\n                }\n                else {\n                    endAngle = this.calculateProgressRange(this.minimum, this.maximum, this.secondaryProgress);\n                    circularPath = getPathArc(centerX, centerY, radius, startAngle, endAngle, this.enableRtl);\n                    option = new PathOption(this.element.id + '_Circularbuffer', 'none', (this.progressThickness || this.themeStyle.circularProgressThickness), (this.argsData.progressColor || this.themeStyle.circularProgressColor), this.themeStyle.bufferOpacity, '0', circularPath);\n                    circularBuffer = this.renderer.drawPath(option);\n                    if (this.segmentCount > 1) {\n                        radiusDiff = parseInt(this.radius, 10) - parseInt(this.innerRadius, 10);\n                        if (radiusDiff !== 0) {\n                            progressSegment = this.trackwidth + ((radiusDiff < 0) ? (this.trackwidth * Math.abs(radiusDiff)) / parseInt(this.radius, 10) :\n                                -(this.trackwidth * Math.abs(radiusDiff)) / parseInt(this.radius, 10));\n                            this.segmentSize = this.calculateSegmentSize(progressSegment, (this.progressThickness || this.themeStyle.circularProgressThickness));\n                        }\n                        circularBuffer.setAttribute('stroke-dasharray', this.segmentSize);\n                    }\n                    if (this.cornerRadius === 'Round') {\n                        circularBuffer.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n                this.svgObject.appendChild(circularBuffer);\n                if (this.animation.enable) {\n                    bufferClipPath = this.createClipPath(this.bufferClipPath, null, '', null, false);\n                    circularBuffer.setAttribute('style', 'clip-path:url(#' + this.element.id + '_clippathBuffer)');\n                    doCircularAnimation(centerX, centerY, radius, startAngle, 0, bufferClipPath, this, (this.progressThickness || this.themeStyle.circularProgressThickness), this.animation.delay, null);\n                }\n                this.svgObject.appendChild(this.bufferClipPath);\n            }\n            if (this.argsData.value !== null) {\n                if (this.segmentColor.length !== 0 && !this.isIndeterminate) {\n                    circularProgress = this.createCircularSegment('_CircularProgress', centerX, centerY, radius, this.argsData.value, this.themeStyle.progressOpacity, (this.progressThickness || this.themeStyle.circularProgressThickness));\n                }\n                else {\n                    progressEnd = this.calculateProgressRange(this.minimum, this.maximum, this.argsData.value);\n                    this.annotationEnd = progressEnd;\n                    endAngle = ((this.isIndeterminate) ? (this.startAngle + ((this.enableRtl) ? -this.totalAngle : +this.totalAngle)) % 360 : progressEnd);\n                    circularPath = getPathArc(centerX, centerY, radius, startAngle, endAngle, this.enableRtl);\n                    option = new PathOption(this.element.id + '_Circularprogress', 'none', (this.progressThickness || this.themeStyle.circularProgressThickness), (this.argsData.progressColor || this.themeStyle.circularProgressColor), this.themeStyle.progressOpacity, '0', circularPath);\n                    if (!refresh) {\n                        circularProgress = this.renderer.drawPath(option);\n                    }\n                    else {\n                        circularProgress = getElement(this.element.id + '_Circularprogress');\n                        previousPath = circularProgress.getAttribute('d');\n                        circularProgress.setAttribute('d', circularPath);\n                        circularProgress.setAttribute('stroke', this.argsData.progressColor || this.themeStyle.circularProgressColor);\n                    }\n                    if (this.segmentCount > 1) {\n                        rDiff = parseInt(this.radius, 10) - parseInt(this.innerRadius, 10);\n                        if (rDiff !== 0) {\n                            progressSegment = this.trackwidth + ((rDiff < 0) ? (this.trackwidth * Math.abs(rDiff)) / parseInt(this.radius, 10) :\n                                -(this.trackwidth * Math.abs(rDiff)) / parseInt(this.radius, 10));\n                            this.segmentSize = this.calculateSegmentSize(progressSegment, (this.progressThickness || this.themeStyle.circularProgressThickness));\n                        }\n                        circularProgress.setAttribute('stroke-dasharray', this.segmentSize);\n                    }\n                    if (this.cornerRadius === 'Round') {\n                        circularProgress.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n                this.progressEndAngle = endAngle;\n                if (!refresh) {\n                    this.svgObject.appendChild(circularProgress);\n                }\n                if (this.animation.enable && !this.isIndeterminate) {\n                    var circulardelay = (this.secondaryProgress !== null) ? 300 : this.animation.delay;\n                    linearClipPath = this.createClipPath(this.clipPath, null, refresh ? previousPath : '', null, refresh);\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + this.element.id + '_clippath)');\n                    doCircularAnimation(centerX, centerY, radius, startAngle, progressEnd, linearClipPath, this, (this.progressThickness || this.themeStyle.circularProgressThickness), circulardelay, refresh ? previousEnd : null);\n                }\n                if (this.isIndeterminate) {\n                    var circularPathRadius = 2 * radius * 0.75;\n                    var circularPath_1 = getPathArc(centerX, centerY, circularPathRadius, startAngle, progressEnd, this.enableRtl, true);\n                    var option_1 = new PathOption(this.element.id + '_clippathcircle', 'transparent', 10, 'transparent', 1, '0', circularPath_1);\n                    var path = this.renderer.drawPath(option_1);\n                    this.clipPath.appendChild(path);\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + this.element.id + '_clippath)');\n                    doCircularIndeterminate((path), this, startAngle, progressEnd, centerX, centerY, circularPathRadius);\n                }\n                this.svgObject.appendChild(this.clipPath);\n            }\n        }\n    };\n    ProgressBar.prototype.createLabel = function () {\n        //let fontsize: string; let fontstyle: string; let fillcolor: string;\n        var textSize;\n        var isAnimation = this.animation.enable;\n        if (this.type === 'Linear' && this.showProgressValue) {\n            var linearlabel = void 0;\n            var linearbufferValue = void 0;\n            var linearprogresswidth = void 0;\n            var progresslabelwidth = this.calculateProgressRange(this.minimum, this.maximum, this.value);\n            if (this.value === this.maximum) {\n                linearbufferValue = 100;\n                linearprogresswidth = (this.progressRect.width * progresslabelwidth) - 10;\n            }\n            if (this.value > this.maximum || this.value < this.minimum || this.value === this.minimum) {\n                linearbufferValue = 0;\n                linearprogresswidth = (this.progressRect.width * progresslabelwidth) + 10;\n            }\n            if (this.value > this.minimum && this.value < this.maximum) {\n                linearbufferValue = Math.round((this.value * 100) / (this.maximum - this.minimum));\n                linearprogresswidth = (this.progressRect.width * progresslabelwidth) - 10;\n            }\n            var argsData = {\n                cancel: false, text: this.label ? this.label : String(linearbufferValue) + '%', color: this.labelStyle.color\n            };\n            this.trigger('textRender', argsData);\n            if (!argsData.cancel) {\n                textSize = measureText(argsData.text, this.labelStyle);\n                var options = {\n                    'id': this.element.id + '_linearLabel',\n                    'font-size': this.labelStyle.size || this.themeStyle.linearFontSize,\n                    'font-style': this.labelStyle.fontStyle || this.themeStyle.linearFontStyle,\n                    'font-family': this.labelStyle.fontFamily || this.themeStyle.linearFontFamily,\n                    'font-weight': this.labelStyle.fontWeight,\n                    'fill': argsData.color || this.themeStyle.fontColor,\n                    'x': linearprogresswidth,\n                    'y': this.progressRect.y + (this.progressRect.height / 2) + (textSize.height / 4),\n                    'text-anchor': 'middle',\n                    'visibility': isAnimation ? 'hidden' : 'visible'\n                };\n                linearlabel = this.renderer.createText(options, argsData.text);\n                this.labelElement = linearlabel;\n                this.svgObject.appendChild(linearlabel);\n            }\n        }\n        else if (this.type === 'Circular' && this.showProgressValue) {\n            var circularLabel = void 0;\n            var circularbufferValue = void 0;\n            var xAxis = (this.progressRect.x + (this.progressRect.width / 2));\n            var yAxis = this.progressRect.y + (this.progressRect.height / 2);\n            if (this.value === this.minimum || this.value > this.maximum) {\n                circularbufferValue = 0;\n            }\n            if (this.value === this.maximum) {\n                circularbufferValue = 100;\n            }\n            if (this.value > this.minimum && this.value < this.maximum) {\n                circularbufferValue = Math.round((this.value * 100) / (this.maximum - this.minimum));\n            }\n            var argsData = {\n                cancel: false, text: this.label ? this.label : String(circularbufferValue) + '%', color: this.labelStyle.color\n            };\n            this.trigger('textRender', argsData);\n            if (!argsData.cancel) {\n                textSize = measureText(argsData.text, this.labelStyle);\n                var options = {\n                    'id': this.element.id + '_circularLabel',\n                    'fill': argsData.color || this.themeStyle.fontColor,\n                    'font-size': this.labelStyle.size || this.themeStyle.circularFontSize,\n                    'font-style': this.labelStyle.fontStyle || this.themeStyle.circularFontStyle,\n                    'font-family': this.labelStyle.fontFamily || this.themeStyle.circularFontFamily,\n                    'font-weight': this.labelStyle.fontWeight,\n                    'height': this.progressRect.height,\n                    'width': this.progressRect.width,\n                    'visibility': isAnimation ? 'hidden' : 'visible',\n                    'x': xAxis,\n                    'y': yAxis + textSize.height / 2,\n                    'text-anchor': 'middle'\n                };\n                circularLabel = this.renderer.createText(options, argsData.text);\n                this.labelElement = circularLabel;\n                this.svgObject.appendChild(circularLabel);\n            }\n        }\n    };\n    ProgressBar.prototype.getPathLine = function (x, width, thickness) {\n        var moveTo = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (x + this.progressRect.width) - ((lineCapRadius / 2) * thickness) : (x + this.progressRect.width)) :\n            ((this.cornerRadius === 'Round') ? (x + (lineCapRadius / 2) * thickness) : x);\n        var lineTo = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (moveTo - width + (lineCapRadius * thickness)) : (moveTo - width)) :\n            ((this.cornerRadius === 'Round') ? (moveTo + width - (lineCapRadius * thickness)) : (moveTo + width));\n        return 'M' + moveTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2)) +\n            'L' + lineTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2));\n    };\n    ProgressBar.prototype.calculateProgressRange = function (min, max, value) {\n        var result;\n        var endValue;\n        if (this.type === 'Linear') {\n            endValue = (value - min) / (max - min);\n            result = (value < min || value > max) ? 0 : endValue;\n            return result;\n        }\n        else {\n            endValue = ((value - min) / (max - min)) * this.totalAngle;\n            endValue = (this.startAngle + ((this.enableRtl) ? -endValue : +endValue)) % 360;\n            result = (value < min || value > max) ? this.startAngle : endValue;\n            return result;\n        }\n    };\n    ProgressBar.prototype.calculateSegmentSize = function (width, thickness) {\n        var count = (this.type === 'Circular' && this.totalAngle === completeAngle) ? this.segmentCount : this.segmentCount - 1;\n        var cornerCount = (this.totalAngle === completeAngle || this.type === 'Linear') ? this.segmentCount : this.segmentCount - 1;\n        var gap = this.gapWidth || ((this.type === 'Linear') ? this.themeStyle.linearGapWidth : this.themeStyle.circularGapWidth);\n        var size = (width - count * gap);\n        size = (size - ((this.cornerRadius === 'Round') ? (cornerCount * (lineCapRadius * thickness)) : 0)) / this.segmentCount;\n        gap += (this.cornerRadius === 'Round') ? lineCapRadius * thickness : 0;\n        return ' ' + size + ' ' + gap;\n    };\n    ProgressBar.prototype.createClipPath = function (clipPath, width, d, x, refresh, thickness) {\n        var path;\n        var rect;\n        var option;\n        if (this.type === 'Linear') {\n            if (!refresh) {\n                rect = new RectOption(this.element.id + '_clippathrect', 'transparent', 1, 'transparent', 1, new Rect((this.cornerRadius === 'Round') ? (this.progressRect.x - (lineCapRadius / 2 * thickness)) : x, 0, this.progressSize.height, (this.isIndeterminate) ? this.progressRect.width * width :\n                    (this.cornerRadius === 'Round') ? (this.progressRect.width * width + lineCapRadius * thickness) :\n                        this.progressRect.width * width));\n                path = this.renderer.drawRectangle(rect);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathrect');\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(this.element.id + '_clippathcircle', 'transparent', 10, 'transparent', 1, '0', d);\n                path = this.renderer.drawPath(option);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathcircle');\n                path.setAttribute('d', d);\n            }\n        }\n        return path;\n    };\n    ProgressBar.prototype.createLinearSegment = function (id, width, opacity, thickness) {\n        var locX = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (this.progressRect.x + this.progressRect.width) - ((lineCapRadius / 2) * thickness) :\n            (this.progressRect.x + this.progressRect.width)) :\n            ((this.cornerRadius === 'Round') ? (this.progressRect.x + (lineCapRadius / 2) * thickness) : this.progressRect.x);\n        var locY = (this.progressRect.y + (this.progressRect.height / 2));\n        var gapWidth = (this.gapWidth || this.themeStyle.linearGapWidth);\n        var avlWidth = this.progressRect.width / this.segmentCount;\n        var avlSegWidth = (this.progressRect.width - ((this.segmentCount - 1) * gapWidth));\n        avlSegWidth = (avlSegWidth -\n            ((this.cornerRadius === 'Round') ? this.segmentCount * (lineCapRadius * thickness) : 0)) / this.segmentCount;\n        var gap = (this.cornerRadius === 'Round') ? (gapWidth + (lineCapRadius * thickness)) : gapWidth;\n        var segmentGroup = this.renderer.createGroup({ 'id': this.element.id + id + 'Group' });\n        var count = Math.ceil(width / avlWidth);\n        var segWidth;\n        var color;\n        var j = 0;\n        var option;\n        var segmentPath;\n        var tolWidth = (this.cornerRadius === 'Round') ? (width - (lineCapRadius * thickness)) : width;\n        var linearThickness = this.progressThickness || this.themeStyle.linearProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segWidth = (tolWidth < avlSegWidth) ? tolWidth : avlSegWidth;\n            if (j < this.segmentColor.length) {\n                color = this.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = this.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(this.element.id + id + i, 'none', linearThickness, color, opacity, '0', this.getLinearSegmentPath(locX, locY, segWidth));\n            segmentPath = this.renderer.drawPath(option);\n            if (this.cornerRadius === 'Round') {\n                segmentPath.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(segmentPath);\n            locX += (this.enableRtl) ? -avlSegWidth - gap : avlSegWidth + gap;\n            tolWidth -= avlSegWidth + gap;\n            tolWidth = (tolWidth < 0) ? 0 : tolWidth;\n        }\n        return segmentGroup;\n    };\n    ProgressBar.prototype.getLinearSegmentPath = function (x, y, width) {\n        return 'M' + ' ' + x + ' ' + y + ' ' + 'L' + (x + ((this.enableRtl) ? -width : width)) + ' ' + y;\n    };\n    ProgressBar.prototype.createCircularSegment = function (id, x, y, r, value, opacity, thickness) {\n        var start = this.startAngle;\n        var end = this.widthToAngle(this.minimum, this.maximum, value);\n        end -= (this.cornerRadius === 'Round' && this.totalAngle === completeAngle) ?\n            this.widthToAngle(0, this.trackwidth, ((lineCapRadius / 2) * thickness)) : 0;\n        var size = (this.trackwidth - ((this.totalAngle === completeAngle) ? this.segmentCount :\n            this.segmentCount - 1) * (this.gapWidth || this.themeStyle.circularGapWidth));\n        size = (size -\n            ((this.cornerRadius === 'Round') ?\n                (((this.totalAngle === completeAngle) ?\n                    this.segmentCount : this.segmentCount - 1) * lineCapRadius * thickness) : 0)) / this.segmentCount;\n        var avlTolEnd = this.widthToAngle(0, this.trackwidth, (this.trackwidth / this.segmentCount));\n        avlTolEnd -= (this.cornerRadius === 'Round' && this.totalAngle === completeAngle) ?\n            this.widthToAngle(0, this.trackwidth, ((lineCapRadius / 2) * thickness)) : 0;\n        var avlEnd = this.widthToAngle(0, this.trackwidth, size);\n        var gap = this.widthToAngle(0, this.trackwidth, (this.gapWidth || this.themeStyle.circularGapWidth));\n        gap += (this.cornerRadius === 'Round') ? this.widthToAngle(0, this.trackwidth, (lineCapRadius * thickness)) : 0;\n        var segmentGroup = this.renderer.createGroup({ 'id': this.element.id + id + 'Group' });\n        var gapCount = Math.floor(end / avlTolEnd);\n        var count = Math.ceil((end - gap * gapCount) / avlEnd);\n        var segmentPath;\n        var circularSegment;\n        var segmentEnd;\n        var avlSegEnd = (start + ((this.enableRtl) ? -avlEnd : avlEnd)) % 360;\n        var color;\n        var j = 0;\n        var option;\n        var circularThickness = this.progressThickness || this.themeStyle.circularProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segmentEnd = (this.enableRtl) ? ((this.startAngle - end > avlSegEnd) ? this.startAngle - end : avlSegEnd) :\n                ((this.startAngle + end < avlSegEnd) ? this.startAngle + end : avlSegEnd);\n            segmentPath = getPathArc(x, y, r, start, segmentEnd, this.enableRtl);\n            if (j < this.segmentColor.length) {\n                color = this.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = this.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(this.element.id + id + i, 'none', circularThickness, color, opacity, '0', segmentPath);\n            circularSegment = this.renderer.drawPath(option);\n            if (this.cornerRadius === 'Round') {\n                circularSegment.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(circularSegment);\n            start = segmentEnd + ((this.enableRtl) ? -gap : gap);\n            avlSegEnd += (this.enableRtl) ? -avlEnd - gap : avlEnd + gap;\n        }\n        return segmentGroup;\n    };\n    ProgressBar.prototype.widthToAngle = function (min, max, value) {\n        var angle = ((value - min) / (max - min)) * this.totalAngle;\n        return angle;\n    };\n    /**\n     * Theming for progress bar\n     */\n    ProgressBar.prototype.setTheme = function () {\n        this.themeStyle = getProgressThemeColor(this.theme);\n    };\n    /**\n     * Annotation for progress bar\n     */\n    ProgressBar.prototype.renderAnnotation = function () {\n        if (this.progressAnnotationModule && this.annotations.length > 0) {\n            this.progressAnnotationModule.renderAnnotations(this.secElement);\n        }\n    };\n    /**\n     * Handles the progressbar resize.\n     * @return {boolean}\n     * @private\n     */\n    ProgressBar.prototype.progressResize = function (e) {\n        var _this = this;\n        // 800 used as buffer time for resize event preventing from control rendered time\n        if (!(new Date().getTime() > this.controlRenderedTimeStamp + 800)) {\n            return false;\n        }\n        var arg = {\n            bar: this,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.progressSize.width, this.progressSize.height),\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTo);\n                return;\n            }\n            arg.currentSize = _this.progressSize;\n            _this.trigger('resized', arg);\n            _this.calculateProgressBarSize();\n            _this.calculateProgressBarBounds();\n            _this.secElement.innerHTML = '';\n            _this.renderAnnotation();\n            _this.renderElements();\n        }, 500);\n        return false;\n    };\n    /**\n     * Method to un-bind events for progress bar\n     */\n    ProgressBar.prototype.unWireEvents = function () {\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    /**\n     * Method to bind events for bullet chart\n     */\n    ProgressBar.prototype.wireEvents = function () {\n        this.resizeBounds = this.progressResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    ProgressBar.prototype.removeSvg = function () {\n        var svgElement = document.getElementById(this.element.id + 'SVG');\n        if (svgElement) {\n            remove(svgElement);\n        }\n    };\n    ProgressBar.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'annotations':\n                    this.secElement.innerHTML = '';\n                    this.renderAnnotation();\n                    var annotationElement = document.getElementById(this.element.id + 'Annotation0').children[0];\n                    doAnnotationAnimation(annotationElement, this, this.startAngle, this.annotationEnd);\n                    break;\n                case 'value':\n                    this.argsData = {\n                        value: this.value,\n                        progressColor: this.progressColor,\n                        trackColor: this.trackColor\n                    };\n                    if (this.argsData.value === this.maximum) {\n                        this.trigger(progressCompleted, this.argsData);\n                    }\n                    else {\n                        this.trigger(valueChanged, this.argsData);\n                    }\n                    if (this.type === 'Circular') {\n                        this.createCircularProgress(this.progressStartAngle, this.progressEndAngle, true);\n                    }\n                    else {\n                        this.createLinearProgress(true, this.progressPreviousWidth);\n                    }\n                    break;\n            }\n        }\n    };\n    ProgressBar.prototype.requiredModules = function () {\n        var modules = [];\n        var enableAnnotation = false;\n        enableAnnotation = this.annotations.some(function (value) {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'ProgressAnnotation',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    ProgressBar.prototype.getPersistData = function () {\n        return ' ';\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of ProgressBar\n     */\n    ProgressBar.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.removeSvg();\n        this.svgObject = null;\n        this.element.classList.remove('e-progressbar');\n    };\n    __decorate([\n        Property('Linear')\n    ], ProgressBar.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"secondaryProgress\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(100)\n    ], ProgressBar.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"radius\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], ProgressBar.prototype, \"segmentCount\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"gapWidth\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"segmentColor\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isIndeterminate\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"trackColor\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"progressColor\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"trackThickness\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"progressThickness\", void 0);\n    __decorate([\n        Property('Fabric')\n    ], ProgressBar.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"showProgressValue\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontStyle: null, fontWeight: 'Normal', fontFamily: null }, Font)\n    ], ProgressBar.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"label\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ProgressBar.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], ProgressBar.prototype, \"animation\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"valueChanged\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"progressCompleted\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Collection([{}], ProgressAnnotationSettings)\n    ], ProgressBar.prototype, \"annotations\", void 0);\n    ProgressBar = __decorate([\n        NotifyPropertyChanges\n    ], ProgressBar);\n    return ProgressBar;\n}(Component));\nexport { ProgressBar };\n","/** @private */\n// tslint:disable-next-line:max-func-body-length\nexport function getProgressThemeColor(theme) {\n    var style;\n    switch (theme) {\n        case 'Material':\n            style = {\n                linearTrackColor: '#E3165B',\n                linearProgressColor: '#E3165B',\n                circularTrackColor: '#E3165B',\n                circularProgressColor: '#E3165B',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Roboto',\n                linearFontSize: 12,\n                linearFontStyle: 'Regular',\n                circularFontFamily: 'Roboto',\n                circularFontStyle: 'Normal',\n                circularFontSize: 20,\n                progressOpacity: 1,\n                trackOpacity: 0.26,\n                bufferOpacity: 0.4,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n            };\n            break;\n        case 'Bootstrap':\n            style = {\n                linearTrackColor: '#EEEEEE',\n                linearProgressColor: '#317ab9',\n                circularTrackColor: '#EEEEEE',\n                circularProgressColor: '#317ab9',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Helvetica',\n                linearFontStyle: 'Regular',\n                linearFontSize: 12,\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: 20,\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 20,\n                linearProgressThickness: 20,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                linearTrackColor: '#E9ECEF',\n                linearProgressColor: '#007bff',\n                circularTrackColor: '#E9ECEF',\n                circularProgressColor: '#007bff',\n                backgroundColor: 'transparent',\n                fontColor: '#000000',\n                linearFontFamily: 'Helvetica',\n                linearFontStyle: 'Regular',\n                linearFontSize: 12,\n                circularFontFamily: 'Helvetica',\n                circularFontStyle: 'Normal',\n                circularFontSize: 20,\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n            };\n            break;\n        case 'HighContrast':\n            style = {\n                linearTrackColor: '#BFBFBF',\n                linearProgressColor: '#FFD939',\n                circularTrackColor: '#BFBFBF',\n                circularProgressColor: '#FFD939',\n                backgroundColor: 'transparent',\n                fontColor: '#FFFFFF',\n                linearFontFamily: 'Segoe UI',\n                linearFontSize: 12,\n                linearFontStyle: 'Regular',\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: 20,\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n            };\n            break;\n        default:\n            style = {\n                linearTrackColor: '#EAEAEA',\n                linearProgressColor: '#0078D6',\n                circularTrackColor: '#E6E6E6',\n                circularProgressColor: '#0078D6',\n                backgroundColor: 'transparent',\n                fontColor: '#333333',\n                linearFontFamily: 'Segoe UI',\n                linearFontStyle: 'Regular',\n                linearFontSize: 12,\n                circularFontFamily: 'Segoe UI',\n                circularFontStyle: 'Normal',\n                circularFontSize: 20,\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.3,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n            };\n            break;\n    }\n    return style;\n}\n"],"names":["degreeToLocation","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","getPathArc","startAngle","endAngle","enableRtl","animation","start","end","largeArcFlag","sweepFlag","stringToNumber","value","containerSize","undefined","indexOf","parseInt","effect","currentTime","startValue","endValue","duration","getElement","id","document","getElementById","removeElement","element","remove","doLinearAnimation","progress","delay","Animation","linearPath","width","getAttribute","isIndeterminate","toString","progressRect","animationDelay","style","visibility","animate","args","timeStamp","setAttribute","model","enable","labelElement","trigger","trackColor","progressColor","doCircularIndeterminate","circularProgress","doAnnotationAnimation","circularPath","progressEnd","annotatElementChanged","firstAnnotatElement","isAnnotation","annotations","length","progressAnnotationModule","children","tagName","annotateValueChanged","totalAngle","min","minimum","max","maximum","innerHTML","doCircularAnimation","progressWidth","thickness","annotatElement","firstElement","pathRadius","annotateValue","cornerRadius","lineCapRadius","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","Rect","height","Size","RectOption","_super","fill","color","opacity","rect","rx","ry","transform","dashArray","_this","call","stroke","PathOption","annotationRender","ProgressLocation","progressCompleted","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Margin","apply","Property","ChildProperty","Font","ProgressAnnotationSettings","AnnotationBase","control","render","annotation","index","createElement","styles","content","processAnnotation","parentElement","annotationElement","location","setElementStyle","redraw","argsData","cancel","name","result","Location","annotationRadius","annotationAngle","left","top","appendChild","angle","radius1","parseFloat","round","progressSize","ProgressAnnotation","renderAnnotations","map","getModuleName","destroy","ProgressBar","options","preRender","unWireEvents","wireEvents","progressBar","calculateProgressBarSize","calculateProgressBarBounds","SetThemeValues","renderElements","renderComplete","controlRenderedTimeStamp","Date","getTime","theme","gapWidth","margin","right","bottom","containerWidth","clientWidth","offsetWidth","containerHeight","clientHeight","type","progressThickness","trackThickness","createSecElement","renderAnnotation","display","position","removeSvg","setTheme","createSVG","clipPathElement","createTrack","createLinearProgress","createCircularProgress","createLabel","svgObject","setSecondaryElementPosition","secElement","getBoundingClientRect","svgRect","renderer","SvgRenderer","createSvg","themeStyle","backgroundColor","clipPath","createClipPath","bufferClipPath","linearTrack","linearTrackWidth","size","circularTrack","option","linearTrackThickness","linearTrackColor","trackOpacity","getPathLine","drawPath","segmentCount","segmentSize","calculateSegmentSize","circularProgressThickness","circularTrackThickness","circularTrackColor","trackwidth","getTotalLength","refresh","prevWidth","linearBuffer","secondaryProgressWidth","linearBufferWidth","linearProgress","linearProgressWidth","clipPathBuffer","clipPathLinear","secondaryProgress","calculateProgressRange","segmentColor","linearProgressThickness","linearProgressColor","bufferOpacity","createLinearSegment","progressPreviousWidth","circularProgressColor","progressOpacity","animationdelay","previousStart","previousEnd","previousPath","progressStartAngle","circularBuffer","radiusDiff","linearClipPath","rDiff","progressSegment","innerRadius","abs","createCircularSegment","annotationEnd","progressEndAngle","circulardelay","circularPathRadius","circularPath_1","option_1","path","textSize","isAnimation","showProgressValue","linearlabel","linearbufferValue","linearprogresswidth","progresslabelwidth","text","label","String","labelStyle","measureText","font-size","linearFontSize","font-style","fontStyle","linearFontStyle","font-family","fontFamily","linearFontFamily","font-weight","fontWeight","fontColor","text-anchor","createText","circularLabel","circularbufferValue","xAxis","yAxis","circularFontSize","circularFontStyle","circularFontFamily","moveTo","lineTo","count","cornerCount","gap","linearGapWidth","circularGapWidth","drawRectangle","locX","locY","avlWidth","avlSegWidth","segWidth","segmentPath","segmentGroup","createGroup","ceil","j","tolWidth","linearThickness","getLinearSegmentPath","widthToAngle","avlTolEnd","avlEnd","circularSegment","segmentEnd","gapCount","floor","avlSegEnd","circularThickness","getProgressThemeColor","progressResize","e","arg","bar","currentSize","previousSize","resizeTo","clearTimeout","setTimeout","isDestroyed","window","removeEventListener","Browser","isTouch","resizeBounds","bind","addEventListener","svgElement","onPropertyChanged","newProp","oldProp","_i","_a","keys","requiredModules","modules","some","push","member","getPersistData","classList","Complex","Event","Collection","NotifyPropertyChanges","Component"],"mappings":"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"}