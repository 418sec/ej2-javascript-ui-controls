{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/utility/connector.js","../src/diagram/objects/tooltip.js","../src/diagram/objects/connector.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/constraints-util.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/interaction/container-interaction.js","../src/diagram/utility/swim-lane-util.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/uml-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/core/appearance.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/preview.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/ruler/ruler.js","../src/diagram/interaction/selector.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/core/containers/grid.js","../src/diagram/objects/icon.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/diagram/layoutinfo.js","../src/diagram/objects/node.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-mapping.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/utility/diff-map.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/serialization-settings.js","../src/diagram/diagram/custom-cursor.js","../src/diagram/diagram-settings.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/interaction/line-routing.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param {IconShapeModel} icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if ((ele.sourcePadding || ele.targetPadding)) {\n        rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param {Diagram} diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param {Diagram} diagram\n * @param {NodeModel | ConnectorModel} node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { PortConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { DiagramAction } from '../enum/enum';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getTemplateContent } from '../utility/dom-util';\nimport { SymbolSize } from './preview';\nvar getConnectorType = function (obj) {\n    if (isBlazor()) {\n        return DiagramConnectorShape;\n    }\n    else {\n        if (obj) {\n            switch (obj.type) {\n                case 'Bpmn':\n                    return BpmnFlow;\n                case 'UmlActivity':\n                    return ActivityFlow;\n                case 'UmlClassifier':\n                    return RelationShip;\n                default:\n                    return ConnectorShape;\n            }\n        }\n        return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramConnectorSegment;\n        }\n        else {\n            switch (obj.type) {\n                case 'Straight':\n                    return StraightSegment;\n                case 'Bezier':\n                    return BezierSegment;\n                case 'Orthogonal':\n                    return OrthogonalSegment;\n                default:\n                    return StraightSegment;\n            }\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar DiagramConnectorSegment = /** @class */ (function (_super) {\n    __extends(DiagramConnectorSegment, _super);\n    function DiagramConnectorSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    DiagramConnectorSegment.prototype.getClassName = function () {\n        return 'DiagramConnectorSegment';\n    };\n    __decorate([\n        Property('Straight')\n    ], DiagramConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramConnectorSegment.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector2\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"direction\", void 0);\n    return DiagramConnectorSegment;\n}(ChildProperty));\nexport { DiagramConnectorSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connector shape for blazor\n */\nvar DiagramConnectorShape = /** @class */ (function (_super) {\n    __extends(DiagramConnectorShape, _super);\n    function DiagramConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], DiagramConnectorShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Directional')\n    ], DiagramConnectorShape.prototype, \"associationType\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], DiagramConnectorShape.prototype, \"relationship\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], DiagramConnectorShape.prototype, \"multiplicity\", void 0);\n    __decorate([\n        Property('Sequence')\n    ], DiagramConnectorShape.prototype, \"bpmnFlow\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"message\", void 0);\n    __decorate([\n        Property('Normal')\n    ], DiagramConnectorShape.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"association\", void 0);\n    __decorate([\n        Property('Object')\n    ], DiagramConnectorShape.prototype, \"umlActivityFlow\", void 0);\n    __decorate([\n        Property(30)\n    ], DiagramConnectorShape.prototype, \"exceptionFlowHeight\", void 0);\n    return DiagramConnectorShape;\n}(ChildProperty));\nexport { DiagramConnectorShape };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /* tslint:disable */\n    Connector.prototype.setPortID = function (diagram, isTarget) {\n        if (this.targetID && this.sourceID) {\n            var targetNode = diagram.nameTable[this.targetID];\n            var sourceNode = diagram.nameTable[this.sourceID];\n            var ports = isTarget ? (targetNode && targetNode.ports) : (sourceNode && sourceNode.ports);\n            var port = void 0;\n            for (var i = 0; ports && i < ports.length; i++) {\n                port = ports[i];\n                if (this.targetPortID === port.id && isTarget) {\n                    if ((port.constraints & PortConstraints.None) || !(port.constraints & PortConstraints.InConnect)) {\n                        this.targetPortID = '';\n                    }\n                }\n                else if (this.sourcePortID === port.id && !isTarget) {\n                    if ((port.constraints & PortConstraints.None) || !(port.constraints & PortConstraints.OutConnect)) {\n                        this.sourcePortID = '';\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        if (this.sourcePortID) {\n            this.setPortID(diagram);\n        }\n        if (this.targetPortID) {\n            this.setPortID(diagram, true);\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                var flow = (isBlazor() ? this.shape.bpmnFlow : this.shape.flow);\n                switch (flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                var activityFlow = (isBlazor() ? this.shape.umlActivityFlow :\n                    this.shape.flow);\n                switch (activityFlow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id, diagram.annotationTemplate));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId, annotationTemplate) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            textele = getTemplateContent(textele, annotation, annotationTemplate);\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource, diagramAction) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n            if (diagramAction && ((diagramAction) & DiagramAction.DecoratorPropertyChange)) {\n                strokeWidth = 1;\n            }\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (diagramAction & DiagramAction.DecoratorPropertyChange) ? 0 : (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts, diagramAction) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true, diagramAction);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false, diagramAction);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element, diagramActions) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points, diagramActions);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation, diagramActions) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement, diagramActions);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points, diagramAction) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts, diagramAction);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts, diagramAction);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message' ||\n                    (isBlazor() && connector.shape.bpmnFlow === 'Message')) {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception' || (isBlazor() &&\n                    connector.shape.umlActivityFlow === 'Exception')) {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"connectionPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset, canLaneInterchange } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints, NodeConstraints } from '../enum/enum';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                if (!(obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                    var undoObj = cloneObject(obj);\n                    diagram.clearSelection();\n                    removeChildrenInLane(diagram, obj);\n                    obj.parentId = '';\n                    var entry = {\n                        type: 'ChildCollectionChanged', category: 'Internal',\n                        undoObject: undoObj, redoObject: cloneObject(obj)\n                    };\n                    diagram.addHistoryEntry(entry);\n                    if (diagram.commandHandler.isContainer) {\n                        diagram.commandHandler.isContainer = false;\n                        diagram.endGroupAction();\n                    }\n                    moveSwinLaneChild(obj, diagram);\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    diagram.enableServerDataBinding(false);\n    var object;\n    var container;\n    var nodes;\n    if ((!isBlazor()) || (isBlazor() && (diagram.diagramActions & DiagramAction.ToolAction))) {\n        if (diagram.selectedObject.helperObject) {\n            nodes = diagram.selectedObject.helperObject;\n        }\n        else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n            if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n                object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n                container = diagram.selectedItems.wrapper.children[0];\n            }\n            else {\n                object = obj;\n                if (isBlazor()) {\n                    if (obj === diagram.selectedItems.nodes[0]) {\n                        container = diagram.selectedItems.wrapper;\n                    }\n                    else {\n                        container = obj.wrapper;\n                    }\n                }\n                else {\n                    container = diagram.selectedItems.wrapper;\n                }\n            }\n            diagram.selectedObject.actualObject = object;\n            if ((!diagram.currentSymbol) && (((object.isLane && canLaneInterchange(object, diagram) &&\n                checkParentAsContainer(diagram, object))\n                || ((!object.isLane) && checkParentAsContainer(diagram, object))) ||\n                ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n                var node = {\n                    id: 'helper',\n                    rotateAngle: container.rotateAngle,\n                    offsetX: container.offsetX, offsetY: container.offsetY,\n                    minWidth: container.minWidth, minHeight: container.minHeight,\n                    maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                    width: container.actualSize.width,\n                    height: container.actualSize.height,\n                    style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n                };\n                nodes = createHelper(diagram, node);\n                diagram.selectedObject.helperObject = nodes;\n            }\n        }\n    }\n    diagram.enableServerDataBinding(true);\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            moveSwinLaneChild(node, diagram);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction moveSwinLaneChild(node, diagram) {\n    var sourceNode = getDiagramElement(node.id + '_groupElement', diagram.element.id);\n    var targetId = (node.parentId) ? node.parentId + '_groupElement' : diagram.element.id + '_diagramLayer';\n    var targetNode = getDiagramElement(targetId, diagram.element.id);\n    if (sourceNode && targetNode) {\n        targetNode.appendChild(sourceNode);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' &&\n        sourceParent.container && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints, DiagramEvent } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds, removeChildInContainer } from '../interaction/container-interaction';\nimport { canSelect } from './constraints-util';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    shape.header.id = shape.header.id || randomId();\n    var node = {\n        id: object.id + shape.header.id,\n        annotations: [cloneObject(shape.header.annotation)],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    if (!canSelect(object)) {\n        node.constraints &= ~NodeConstraints.Select;\n    }\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [cloneObject(shape.phases[phaseIndex].header.annotation)],\n        maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    phaseObject.annotations[0].rotateAngle = orientation ? 0 : 270;\n    if (!canSelect(object)) {\n        phaseObject.constraints &= ~NodeConstraints.Select;\n    }\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        if (!canSelect(object)) {\n            canvas.constraints &= ~NodeConstraints.Select;\n        }\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [cloneObject(shape.lanes[laneIndex].header.annotation)],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            laneNode.annotations[0].rotateAngle = orientation ? 270 : 0;\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            if (!canSelect(object)) {\n                laneNode.constraints &= ~NodeConstraints.Select;\n            }\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 && shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting) && edges.type === 'Orthogonal') {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetY > position.y) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetY < position.y) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    grid.updateRowIndex(sourceIndex, targetIndex);\n                }\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetX > position.x) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetX < position.x) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    if ((shape.phaseSize === 0 || shape.phases.length === 0) && (targetIndex === 0 || sourceIndex === 0)) {\n                        if (shape.header && shape.hasHeader) {\n                            var changeHeaderIndex = (targetIndex === 0) ? sourceIndex : targetIndex;\n                            grid.rows[0].cells[changeHeaderIndex].children = grid.rows[0].cells[0].children;\n                            grid.rows[0].cells[changeHeaderIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                            grid.rows[0].cells[0].children = [];\n                        }\n                    }\n                    grid.updateColumnIndex(0, sourceIndex, targetIndex);\n                }\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            temp = lanes[sourceLaneIndex];\n            if (temp.canMove) {\n                undoElement = {\n                    target: cloneObject(target), source: cloneObject(obj)\n                };\n                temp = lanes[sourceLaneIndex];\n                lanes.splice(sourceLaneIndex, 1);\n                lanes.splice(targetLaneIndex, 0, temp);\n                redoElement = {\n                    target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n                };\n                entry = {\n                    type: 'LanePositionChanged', redoObject: redoElement,\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    diagram.commandHandler.addHistoryEntry(entry);\n                }\n                ChangeLaneIndex(diagram, swimLane, 0);\n                updateConnectorsProperties(connectors, diagram);\n                updateSwimLaneChildPosition(lanes, diagram);\n                swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n                swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var args;\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        args = {\n            element: laneObj, cause: diagram.diagramActions, state: 'Changing', type: 'Addition', cancel: false, laneIndex: laneIndex\n        };\n        diagram.triggerEvent(DiagramEvent.collectionChange, args);\n        if (!args.cancel) {\n            if (orientation_1) {\n                var rowDef = new RowDefinition();\n                rowDef.height = lane.height;\n                grid.addRow(index, rowDef, false);\n                swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n                swimLane.wrapper.height = grid.height = swimLane.height;\n            }\n            else {\n                var colDef = new ColumnDefinition();\n                colDef.width = lane.width;\n                grid.addColumn(laneIndex + 1, colDef, false);\n                if (swimLane.width) {\n                    swimLane.width += lane.width;\n                    swimLane.wrapper.width = grid.width = swimLane.width;\n                }\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    grid.rows[0].cells[0].columnSpan += 1;\n                }\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                laneObj.id += randomId();\n            }\n            if (count !== undefined) {\n                shape.lanes.splice(count, 0, laneObj);\n            }\n            else {\n                shape.lanes.push(laneObj);\n            }\n            args = {\n                element: laneObj, cause: diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n            redoObj = (shape.orientation === 'Horizontal') ?\n                diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n                ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                    diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                    redoObject: cloneObject(redoObj), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            var startRowIndex = (shape.orientation === 'Horizontal') ?\n                index : ((shape.header && shape.hasHeader) ? 1 : 0);\n            ChangeLaneIndex(diagram, swimLane, startRowIndex);\n            swimLaneMeasureAndArrange(swimLane);\n            updateHeaderMaxWidth(diagram, swimLane);\n            children = lane.children;\n            if (children && children.length > 0) {\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n                    point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                    if (shape.orientation === 'Horizontal') {\n                        cell = grid.rows[index].cells[i];\n                        for (i = 0; i < grid.rows[index].cells.length; i++) {\n                            addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < grid.rows.length; k++) {\n                            cell = grid.rows[k].cells[index];\n                            addChildNodeToNewLane(diagram, cell, point, child);\n                        }\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, diagram);\n            diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                if ((removeNode.constraints & NodeConstraints.Delete)) {\n                                    diagram.remove(removeNode);\n                                }\n                                else {\n                                    removeChildInContainer(diagram, removeNode, {}, false);\n                                }\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    var args;\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            args = {\n                element: lane, cause: diagram.diagramActions, state: 'Changing', type: 'Removal', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            if (!args.cancel) {\n                var undoObj = cloneObject(shape.lanes[laneIndex]);\n                removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    var entry = {\n                        type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                        redoObject: cloneObject(lane), category: 'Internal'\n                    };\n                    diagram.addHistoryEntry(entry);\n                }\n                shape.lanes.splice(laneIndex, 1);\n                var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                    (findStartLaneIndex(swimLane) + laneIndex);\n                if (shape.orientation === 'Horizontal') {\n                    row = grid.rows[index];\n                    for (i = 0; i < row.cells.length; i++) {\n                        cell = row.cells[i];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeRow(index);\n                }\n                else {\n                    swimLane.width = (swimLane.width !== undefined) ?\n                        swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                    for (i = 0; i < grid.rows.length; i++) {\n                        cell = grid.rows[i].cells[index];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeColumn(index);\n                }\n                args = {\n                    element: lane, cause: diagram.diagramActions, state: 'Changed', type: 'Removal', cancel: false, laneIndex: laneIndex\n                };\n                diagram.triggerEvent(DiagramEvent.collectionChange, args);\n                swimLane.width = swimLane.wrapper.width = grid.width;\n                swimLane.height = swimLane.wrapper.height = grid.height;\n                swimLaneMeasureAndArrange(swimLane);\n                if (swimLane.shape.orientation === 'Vertical') {\n                    index = 0;\n                }\n                ChangeLaneIndex(diagram, swimLane, index);\n                diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\nexport function findLane(laneNode, diagram) {\n    var lane;\n    if (laneNode.isLane) {\n        var swimLane = diagram.getObject(laneNode.parentId);\n        if (swimLane && swimLane.shape.type === 'SwimLane' && laneNode.isLane) {\n            var laneIndex = findLaneIndex(swimLane, laneNode);\n            lane = swimLane.shape.lanes[laneIndex];\n        }\n    }\n    return lane;\n}\nexport function canLaneInterchange(laneNode, diagram) {\n    if (laneNode.isLane) {\n        var lane = findLane(laneNode, diagram);\n        if (lane.canMove) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function updateSwimLaneChildPosition(lanes, diagram) {\n    var lane;\n    var node;\n    for (var i = 0; i < lanes.length; i++) {\n        lane = lanes[i];\n        for (var j = 0; j < lane.children.length; j++) {\n            node = diagram.nameTable[lane.children[j].id];\n            node.offsetX = node.wrapper.offsetX;\n            node.offsetY = node.wrapper.offsetY;\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor, Browser } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function getSpaceValue(intervals, isLine, i, space) {\n    space = !isLine ? ((intervals[i - 1] !== undefined) ? intervals[i - 1] + space : 0) : space;\n    return space;\n}\n/**\n * @private\n */\nexport function getInterval(intervals, isLine) {\n    var newInterval = [];\n    if (!isLine) {\n        for (var k = 0; k < intervals.length; k++) {\n            newInterval.push(intervals[k]);\n        }\n        newInterval.push(intervals[newInterval.length - 2]);\n        newInterval.push(intervals[newInterval.length - 2]);\n    }\n    else {\n        newInterval = intervals;\n    }\n    return newInterval;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        var shape = (isBlazor() ? child.shape.umlActivityShape :\n            child.shape.shape);\n        switch (shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        var flow = (isBlazor() ?\n            child.shape.umlActivityFlow : child.shape.flow);\n        switch (flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/* tslint:disable */\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            var bpmnFlow = (isBlazor() ? child.shape.bpmnFlow : child.shape.flow);\n            switch (bpmnFlow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            var flow = (isBlazor() ?\n                child.shape.umlActivityFlow : child.shape.flow);\n            switch (flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation' ||\n                child.shape.relationship === undefined) {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/* tslint:enable */\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n    if (!actualNode.hasSubTree && defaultValue.canEnableSubTree) {\n        actualNode.orientation = node.layoutInfo.orientation;\n        actualNode.type = node.layoutInfo.type;\n        if (node.layoutInfo.offset !== actualNode.offset && (node.layoutInfo.offset) !== undefined) {\n            actualNode.offset = node.layoutInfo.offset;\n        }\n    }\n    node.layoutInfo.hasSubTree = actualNode.hasSubTree;\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param {Diagram} diagram\n * @param {PointModel} mousePosition\n * @param {NodeModel | ConnectorModel} node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if ((clonedObject[property] instanceof Object) && defaultObject && defaultObject[property]) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.enableServerDataBinding(false);\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    diagram.enableServerDataBinding(true);\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1)) && dataObj.nodes) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                if (style.gradient) {\n                    updateGradient(changedObject.gradient, style.gradient);\n                    break;\n                }\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = ((isBlazor() ? actualObject.shape.basicShape === 'Rectangle' :\n                actualObject.shape.shape === 'Rectangle')) ? new DiagramElement() : new PathElement();\n            if ((!isBlazor() && actualObject.shape.shape === 'Polygon') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Polygon')) {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape((isBlazor() ? actualObject.shape.basicShape :\n                    actualObject.shape.shape));\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if ((!isBlazor() && actualObject.shape.shape === 'Rectangle') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Rectangle')) {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            var shape = (isBlazor()) ? actualObject.shape.flowShape : actualObject.shape.shape;\n            flowShapeElement.data = getFlowShape(shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && ((isBlazor() && newValues.shape.flowShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.flowShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' &&\n            ((isBlazor() && newValues.shape.umlActivityShape !== undefined) ||\n                (!isBlazor() && newValues.shape.shape !== undefined))) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (((isBlazor() && newValues.shape.basicShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.basicShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    if (!isBlazor()) {\n        actualObject.shape.shape = newValues.shape.shape;\n    }\n    else {\n        actualObject.shape.umlActivityShape = newValues.shape.umlActivityShape;\n    }\n    var shapes = !isBlazor() ? actualObject.shape.shape :\n        actualObject.shape.umlActivityShape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if ((isBlazor() && actualObject.shape.umlActivityShape === 'InitialNode') ||\n        (!isBlazor() && actualObject.shape.shape === 'InitialNode')) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode')) ||\n        ((isBlazor() && (actualObject.shape.umlActivityShape === 'ForkNode' ||\n            actualObject.shape.umlActivityShape === 'JoinNode')))) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n        (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode')) {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var shape = (isBlazor() ? node.shape.umlActivityShape : node.shape.shape);\n    var umlActivityShapeData = getUMLActivityShape(shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points, diagramActions) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0], diagramActions);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points, diagramActions);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - (size / 2 + 12.5);\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + (size / 2 + 12.5);\n                break;\n            case 'Left':\n                point.x += left - (size / 2 + 12.5);\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + (size / 2 + 12.5);\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    if (node) {\n        node = node;\n        for (var i = 0; i < node.ports.length; i++) {\n            if (id === node.ports[i].id) {\n                return node.ports[i];\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(args.target);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target },\n            position: arg.position, cancel: arg.cancel\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param {Object} obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var cloneSelectedObjects = function (diagram) {\n    var nodes = diagram.selectedItems.nodes;\n    var connectors = diagram.selectedItems.connectors;\n    diagram.protectPropertyChange(true);\n    var isEnableServerDatabind = diagram.allowServerDataBinding;\n    diagram.allowServerDataBinding = false;\n    diagram.selectedItems.nodes = [];\n    diagram.selectedItems.connectors = [];\n    diagram.allowServerDataBinding = isEnableServerDatabind;\n    diagram.protectPropertyChange(false);\n    var clonedSelectedItems = cloneObject(diagram.selectedItems);\n    for (var i = 0; i < nodes.length; i++) {\n        diagram.selectedItems.nodes.push(diagram.nameTable[nodes[i].id]);\n    }\n    for (var i = 0; i < connectors.length; i++) {\n        diagram.selectedItems.connectors.push(diagram.nameTable[connectors[i].id]);\n    }\n    return clonedSelectedItems;\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var checkPort = function (node, element) {\n    for (var i = 0; i < node.ports.length; i++) {\n        if (node.ports[i].id === element.id.split('_')[1]) {\n            return true;\n        }\n    }\n    return false;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n/** @private */\nexport function checkBrowserInfo() {\n    if ((navigator.platform.indexOf('Mac') >= 0 || navigator.platform.indexOf('iPad') >= 0\n        || navigator.platform.indexOf('iPhone') >= 0 || navigator.platform.indexOf('MacIntel') >= 0)\n        && (Browser.info.name === 'safari' || Browser.info.name === 'webkit')) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canMeasureDecoratorPath(objects) {\n    if (objects.indexOf('shape') !== -1 || objects.indexOf('pathData') !== -1 ||\n        objects.indexOf('width') !== -1 || objects.indexOf('height') !== -1) {\n        return true;\n    }\n    return false;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: node.style.strokeColor,\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: (node.style.strokeColor === 'black') ? '#ffffff00' : node.style.strokeColor }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    diagram.UpdateBlazorDiagramModel(newObj, 'Node');\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: {\n                            fill: node.style.fill, strokeColor: (node.style.strokeColor === 'black') ?\n                                '#ffffff00' : node.style.strokeColor, textWrapping: textWrap\n                        },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    diagram.UpdateBlazorDiagramModel(temp, 'Node');\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill,\n                            strokeColor: (node.style.strokeColor === 'black') ? '#ffffff00' : node.style.strokeColor },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    diagram.UpdateBlazorDiagramModel(temp, 'Node');\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: {\n                        fill: node.style.fill, strokeColor: (node.style.strokeColor === 'black') ?\n                            '#ffffff00' : node.style.strokeColor\n                    }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                diagram.UpdateBlazorDiagramModel(temp, 'Node');\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n        style: { strokeColor: (stack.style.strokeColor === 'black') ? '#ffffff00' : stack.style.strokeColor }\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText, cloneObject } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement, cloneBlazorObject } from './diagram-util';\nimport { templateCompiler } from '../utility/base-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureWindowElement = 'measureElement';\n    window[measureWindowElement].style.visibility = 'visible';\n    var svg = window[measureWindowElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureWindowElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureWindowElement = 'measureElement';\n        window[measureWindowElement].style.visibility = 'visible';\n        var svg = window[measureWindowElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureWindowElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bBoxText(txtValue, text) };\n                        txtValue = '';\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : (text.textWrapping === 'NoWrap') ? [eachLine[j]] : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize, id, callback) {\n    var measureWindowElement = 'measureElement';\n    window[measureWindowElement].style.visibility = 'visible';\n    var imageElement = window[measureWindowElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureWindowElement].style.visibility = 'hidden';\n    var element = document.createElement('img');\n    element.setAttribute('src', source);\n    setAttributeHtml(element, { id: id + 'sf-imageNode', style: 'display: none;' });\n    document.body.appendChild(element);\n    // tslint:disable-next-line:no-any\n    element.onload = function (event) {\n        var loadedImage = event.currentTarget;\n        if (callback) {\n            callback(id, { width: loadedImage.width, height: loadedImage.height });\n        }\n    };\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureWindowElement = 'measureElement';\n    window[measureWindowElement].style.visibility = 'visible';\n    var nativeSVG = window[measureWindowElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureWindowElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureWindowElement = 'measureElement';\n    window[measureWindowElement].style.visibility = 'visible';\n    var nativeSVG = window[measureWindowElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureWindowElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    }\n    else {\n        diagramElement = (element) ? element.querySelector('#' + CSS.escape(elementId)) : document.getElementById(elementId);\n    }\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getUserHandleLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramUserHandleLayer = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramUserHandleLayer.getElementsByClassName('e-userHandle-layer');\n    adornerLayer = elementcoll[0];\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var domTable = 'domTable';\n    var expandCollapse = null;\n    if (!window[domTable][diagramId + '_gridline']) {\n        var diagramGridSvg = getGridLayerSvg(diagramId);\n        expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n        window[domTable][diagramId + '_gridline'] = expandCollapse;\n    }\n    else {\n        expandCollapse = window[domTable][diagramId + '_gridline'];\n    }\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var domTable = 'domTable';\n    if (!window[domTable][diagramId + 'html_layer']) {\n        var element = getDiagramElement(diagramId);\n        var elementcoll = void 0;\n        elementcoll = element.getElementsByClassName('e-html-layer');\n        htmlLayer = elementcoll[0];\n        window[domTable][diagramId + 'html_layer'] = htmlLayer;\n    }\n    else {\n        htmlLayer = window[domTable][diagramId + 'html_layer'];\n    }\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param {string} elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml, nodeObject) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    var isSvg = false;\n    if (node instanceof Node) {\n        sentNode = node;\n        if (node.shape.type === 'Native') {\n            isSvg = true;\n            var svgContent = void 0;\n            var div_1 = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            document.body.appendChild(div_1);\n            /* tslint:disable */\n            div_1.innerHTML = (node.shape.content);\n            /* tslint:disable */\n            svgContent = (div_1.getElementsByTagName('svg').length > 0)\n                ? div_1.getElementsByTagName('svg')[0].outerHTML : div_1.getElementsByTagName('g')[0].outerHTML;\n            /* tslint:disable */\n            node.shape.content = svgContent;\n            /* tslint:disable */\n            element.content = svgContent;\n            div_1.parentElement.removeChild(div_1);\n        }\n        var blazor = 'Blazor';\n        if (isBlazor()) {\n            content = 'diagramsf_node_template';\n            sentNode = cloneBlazorObject(node);\n        }\n    }\n    else {\n        sentNode = node;\n        //new\n        if (isBlazor()) {\n            sentNode = cloneBlazorObject(node);\n            content = 'diagramsf_annotation_template';\n        }\n    }\n    var item;\n    if (typeof element.content === 'string' && (!element.isTemplate || isBlazor())) {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n            //new\n            // for (item of compiledString(sentNode, null, null, content, undefined, undefined, isSvg)) {\n            //     div.appendChild(item);\n            // }\n        }\n    }\n    else if (element.isTemplate) {\n        var compiledString = void 0;\n        compiledString = element.getNodeTemplate()(cloneObject(nodeObject), undefined, 'template', undefined, undefined, false);\n        for (var i = 0; i < compiledString.length; i++) {\n            div.appendChild(compiledString[i]);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return element.isTemplate ?\n        div : (isHtml ? div.cloneNode(true) : div.cloneNode(true));\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i] !== 'style') {\n            svg.setAttribute(keys[i], attributes[keys[i]]);\n        }\n        else {\n            applyStyleAgainstCsp(svg, attributes[keys[i]]);\n        }\n    }\n}\n/** @private */\nexport function applyStyleAgainstCsp(svg, attributes) {\n    var keys = attributes.split(';');\n    for (var i = 0; i < keys.length; i++) {\n        var attribute = keys[i].split(':');\n        if (attribute.length === 2) {\n            svg.style[attribute[0].trim()] = attribute[1].trim();\n        }\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i] !== 'style') {\n            element.setAttribute(keys[i], attributes[keys[i]]);\n        }\n        else {\n            applyStyleAgainstCsp(element, attributes[keys[i]]);\n        }\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureWindowElement = 'measureElement';\n    if (!window[measureWindowElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureWindowElement] = divElement;\n        window[measureWindowElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureWindowElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        (options.textWrapping === 'Wrap' || options.textWrapping === 'WrapWithOverflow')) {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n/** @private */\nexport function getTemplateContent(annotationcontent, annotation, annotationTemplate) {\n    if (annotationTemplate && !annotation.template) {\n        annotationcontent.isTemplate = true;\n        annotationcontent.template = annotationcontent.content = getContent(annotationcontent, true, annotation);\n    }\n    else {\n        annotationcontent.content = annotation.template;\n    }\n    return annotationcontent;\n}\n/** @private */\nexport function createUserHandleTemplates(userHandleTemplate, template, selectedItems) {\n    var userHandleFn;\n    var handle;\n    var compiledString;\n    var i;\n    var div;\n    if (userHandleTemplate && template) {\n        userHandleFn = templateCompiler(userHandleTemplate);\n        for (var _i = 0, _a = selectedItems.userHandles; _i < _a.length; _i++) {\n            handle = _a[_i];\n            if (userHandleFn) {\n                compiledString = userHandleFn(cloneObject(handle), undefined, 'template', undefined, undefined, false);\n                for (i = 0; i < compiledString.length; i++) {\n                    var attr = {\n                        'style': 'height: 100%; width: 100%; pointer-events: all',\n                        'id': handle.name + '_template_hiddenUserHandle'\n                    };\n                    div = createHtmlElement('div', attr);\n                    div.appendChild(compiledString[i]);\n                }\n                template[0].appendChild(div);\n            }\n        }\n    }\n    else if (isBlazor()) {\n        var content = 'diagramsf_userHandle_template';\n        var a = void 0;\n        for (var _b = 0, _c = selectedItems.userHandles; _b < _c.length; _b++) {\n            handle = _c[_b];\n            if (!handle.pathData && !handle.content && !handle.source) {\n                compiledString = compile(handle.content);\n                for (i = 0, a = compiledString(cloneBlazorObject(handle), null, null, content); i < a.length; i++) {\n                    var attr = {\n                        'style': 'height: 100%; width: 100%; pointer-events: all',\n                        'id': handle.name + '_template_hiddenUserHandle'\n                    };\n                    div = createHtmlElement('div', attr);\n                    div.appendChild(a[i]);\n                }\n                template[0].appendChild(div);\n            }\n        }\n    }\n}\n","import { compile as baseTemplateComplier } from '@syncfusion/ej2-base';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode, applyStyleAgainstCsp } from './dom-util';\nimport { Node, BasicShape, Shape, Native, BpmnShape, BpmnActivity, BpmnTask, BpmnSubProcess } from '../objects/node';\nimport { IconShape } from '../objects/icon';\nimport { TextStyle, ShapeStyle, Margin } from '../core/appearance';\nimport { Port } from '../objects/port';\nimport { Annotation } from '../objects/annotation';\nimport { Connector, Decorator } from '../objects/connector';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\nexport function getIndex(comp, id) {\n    if (comp.nodes && comp.nodes.length > 0) {\n        for (var i = 0; i < comp.nodes.length; i++) {\n            if (comp.nodes[i].id === id) {\n                return i;\n            }\n        }\n    }\n    if (comp.connectors && comp.connectors.length > 0) {\n        for (var i = 0; i < comp.connectors.length; i++) {\n            if (comp.connectors[i].id === id) {\n                return i;\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function templateCompiler(template) {\n    if (template) {\n        var e = void 0;\n        try {\n            if (document.querySelectorAll(template).length) {\n                return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n        catch (e) {\n            return baseTemplateComplier(template);\n        }\n    }\n    return undefined;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\nfunction updateCloneProp(properties, obj) {\n    var prop = [];\n    if (obj instanceof Node) {\n        prop = ['width', 'height', 'offsetX', 'offsetY', 'container', 'visible', 'horizontalAlignment', 'verticalAlignment',\n            'backgroundColor', 'borderColor', 'borderWidth', 'rotateAngle', 'minHeight', 'minWidth', 'maxHeight',\n            'maxWidth', 'pivot', 'margin', 'flip', 'wrapper', 'constraints', 'style', 'annotations', 'ports', 'isExpanded', 'expandIcon'];\n    }\n    else if (obj instanceof Connector) {\n        prop = ['constraints', 'sourcePadding', 'targetPadding', 'cornerRadius', 'flip', 'type', 'targetDecorator', 'sourceDecorator',\n            'sourceID', 'shape', 'bridgeSpace', 'annotations', 'segments', 'hitPadding', 'tooltip', 'previewSize', 'dragSize', 'style',\n            'sourcePortID', 'targetID', 'targetPortID', 'visible'];\n    }\n    else if (obj instanceof Decorator) {\n        prop = ['height', 'width', 'shape', 'style', 'pivot', 'pathData'];\n    }\n    else if (obj instanceof Shape || obj instanceof IconShape) {\n        prop.push('shape');\n        if (obj instanceof BasicShape) {\n            prop.push('cornerRadius');\n        }\n        else if (obj instanceof Text) {\n            prop.push('margin');\n        }\n        else if (obj instanceof Image) {\n            prop.push('align');\n            prop.push('scale');\n        }\n        else if (obj instanceof Native) {\n            prop.push('scale');\n        }\n        else if (obj instanceof BpmnShape) {\n            prop.push('activity');\n            prop.push('annotations');\n        }\n        else if (obj instanceof IconShape) {\n            prop.push('borderColor');\n            prop.push('borderWidth');\n            prop.push('cornerRadius');\n            prop.push('fill');\n        }\n    }\n    else if (obj instanceof BpmnActivity) {\n        prop.push('subProcess');\n    }\n    else if (obj instanceof BpmnTask) {\n        prop.push('call');\n        prop.push('compensation');\n        prop.push('loop');\n    }\n    else if (obj instanceof BpmnSubProcess) {\n        prop.push('adhoc');\n        prop.push('boundary');\n        prop.push('compensation');\n        prop.push('loop');\n        prop.push('processes');\n    }\n    else if (obj instanceof Port) {\n        prop.push('height');\n        prop.push('width');\n        prop.push('visibility');\n        prop.push('horizontalAlignment');\n        prop.push('verticalAlignment');\n        prop.push('shape');\n    }\n    else if (obj instanceof Annotation) {\n        prop.push('constraints');\n        prop.push('height');\n        prop.push('horizontalAlignment');\n        prop.push('rotateAngle');\n        prop.push('template');\n        prop.push('verticalAlignment');\n        prop.push('visibility');\n        prop.push('width');\n        prop.push('margin');\n    }\n    else if (obj instanceof Margin) {\n        prop.push('left');\n        prop.push('right');\n        prop.push('top');\n        prop.push('bottom');\n    }\n    else if (obj instanceof TextStyle) {\n        prop = ['strokeWidth', 'strokeDashArray', 'opacity', 'gradient', 'fontSize', 'fontFamily', 'textOverflow',\n            'textDecoration', 'whiteSpace', 'textWrapping', 'textAlign', 'italic', 'bold'];\n    }\n    if (obj instanceof ShapeStyle) {\n        prop.push('strokeColor');\n        prop.push('color');\n    }\n    properties = properties.concat(prop);\n    return properties;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key, cloneBlazorProp) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        if (cloneBlazorProp) {\n            properties = updateCloneProp(properties, obj);\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property, cloneBlazorProp);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], undefined, undefined, cloneBlazorProp);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key, cloneBlazorProp) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key, cloneBlazorProp));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureWindowElement = 'measureElement';\n    window[measureWindowElement].style.visibility = 'visible';\n    var svg = window[measureWindowElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    applyStyleAgainstCsp(text, 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureWindowElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/* tslint:disable */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action !== 'OrthoThumb') {\n                    if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                        && canDragSourceEnd(conn_1)) {\n                        if (action) {\n                            return action;\n                        }\n                    }\n                    if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                        && canDragTargetEnd(conn_1)) {\n                        if (action) {\n                            return action;\n                        }\n                    }\n                }\n                else {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\n/* tslint:enable */\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'grab',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = (isBlazor() ? node.shape : node.shape);\n        var bpmnShape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n        if (bpmnShape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (bpmnShape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (bpmnShape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (bpmnShape === 'Message' || bpmnShape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (bpmnShape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (bpmnShape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData((isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape));\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + (isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape);\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if ((!isBlazor() && node.shape.shape === 'Event') ||\n            (isBlazor() && node.shape.bpmnShape === 'Event')) {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if ((!isBlazor() && node.shape.shape === 'Activity') ||\n            (isBlazor() && node.shape.bpmnShape === 'Activity')) {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = 'white';\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && source.shape.shape !== 'TextAnnotation') ||\n                (isBlazor() && source.shape.bpmnShape !== 'TextAnnotation'))) {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n            if (shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape ||\n            (actualObject.shape.bpmnShape);\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (((isBlazor() && newShape.bpmnShape === 'Gateway') || newShape.shape === 'Gateway') &&\n            newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'DataObject') || newShape.shape === 'DataObject') &&\n            newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Activity') || newShape.shape === 'Activity') &&\n            newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Event') || newShape.shape === 'Event') &&\n            newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Message') || newShape.shape === 'Message') ||\n            ((isBlazor() && newShape.bpmnShape === 'DataSource') || newShape.shape === 'DataSource')) {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? ((!isBlazor() && actualObject.shape.shape === 'Activity' ||\n                (isBlazor() && actualObject.shape.bpmnShape === 'Activity'))) ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (((!isBlazor() && actualObject.shape.shape === 'Activity') ||\n                        (isBlazor() && actualObject.shape.bpmnShape === 'Activity')) &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (((!isBlazor() && actualObject.shape.shape === 'Gateway')\n                        || (isBlazor() && actualObject.shape.bpmnShape === 'Gateway')) ||\n                        ((!isBlazor() && actualObject.shape.shape === 'Event')\n                            || (isBlazor() && actualObject.shape.bpmnShape === 'Event'))) {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if ((!isBlazor() && currentNode.shape.shape === 'Event') ||\n                        (isBlazor() && currentNode.shape.bpmnShape === 'Event')) {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if ((!isBlazor() && node.shape.shape === 'Event') ||\n                (isBlazor() && node.shape.bpmnShape === 'Event')) {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                ((!isBlazor() && node.shape.shape === 'Activity') ||\n                    (isBlazor() && node.shape.bpmnShape === 'Activity'))\n                && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramGradient;\n        }\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar DiagramGradient = /** @class */ (function (_super) {\n    __extends(DiagramGradient, _super);\n    function DiagramGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], DiagramGradient.prototype, \"r\", void 0);\n    return DiagramGradient;\n}(Gradient));\nexport { DiagramGradient };\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n/**\n * Defines the style of shape/path\n */\nvar DiagramShapeStyle = /** @class */ (function (_super) {\n    __extends(DiagramShapeStyle, _super);\n    function DiagramShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], DiagramShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], DiagramShapeStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], DiagramShapeStyle.prototype, \"gradient\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(12)\n    ], DiagramShapeStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property('Arial')\n    ], DiagramShapeStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], DiagramShapeStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('Center')\n    ], DiagramShapeStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShapeStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], DiagramShapeStyle.prototype, \"textWrapping\", void 0);\n    return DiagramShapeStyle;\n}(ChildProperty));\nexport { DiagramShapeStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * @private\n */\nexport var BlazorAction;\n(function (BlazorAction) {\n    /** Return the layout value is true when doLayout is called   */\n    BlazorAction[BlazorAction[\"Default\"] = 0] = \"Default\";\n    /** Need to return the layout value when doLayout is called  */\n    BlazorAction[BlazorAction[\"expandNode\"] = 2] = \"expandNode\";\n    /** Enabled during the mouse interaction  */\n    BlazorAction[BlazorAction[\"interaction\"] = 4] = \"interaction\";\n})(BlazorAction || (BlazorAction = {}));\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables or disables near node padding to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"ConnectToNearByNode\"] = 131072] = \"ConnectToNearByNode\";\n    /** Enables or disables near port padding to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"ConnectToNearByPort\"] = 262144] = \"ConnectToNearByPort\";\n    /** Enables or disables Enables or disables near port and node padding to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"ConnectToNearByElement\"] = 393216] = \"ConnectToNearByElement\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 470590] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables child in parent for the swimLane node */\n    NodeConstraints[NodeConstraints[\"AllowMovingOutsideLane\"] = 33554432] = \"AllowMovingOutsideLane\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n    /** Use to prevent the collection change event while dragging lane from palette and over it in diagram */\n    DiagramAction[DiagramAction[\"PreventCollectionChangeOnDragOver\"] = 4096] = \"PreventCollectionChangeOnDragOver\";\n    /** Use to prevent the z order on dragging the diagram elements */\n    DiagramAction[DiagramAction[\"PreventZIndexOnDragging\"] = 8192] = \"PreventZIndexOnDragging\";\n    /** Indicates whether group dragging has been activated */\n    DiagramAction[DiagramAction[\"isGroupDragging\"] = 16384] = \"isGroupDragging\";\n    /** Indicates whether drag is initiated by mouse  */\n    DiagramAction[DiagramAction[\"DragUsingMouse\"] = 32768] = \"DragUsingMouse\";\n    /** Indicates whether decorator property is changed or not */\n    DiagramAction[DiagramAction[\"DecoratorPropertyChange\"] = 65536] = \"DecoratorPropertyChange\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n    /** Indicates whether animation happens or not  */\n    RealAction[RealAction[\"AnimationClick\"] = 64] = \"AnimationClick\";\n    /** Enable the group action */\n    RealAction[RealAction[\"EnableGroupAction\"] = 128] = \"EnableGroupAction\";\n    /** Indicate action in Progress */\n    RealAction[RealAction[\"PanInProgress\"] = 256] = \"PanInProgress\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n    DiagramEvent[DiagramEvent[\"onImageLoad\"] = 31] = \"onImageLoad\";\n    DiagramEvent[DiagramEvent[\"onDoBindingInit\"] = 32] = \"onDoBindingInit\";\n    DiagramEvent[DiagramEvent[\"keyUp\"] = 33] = \"keyUp\";\n    DiagramEvent[DiagramEvent[\"keyDown\"] = 34] = \"keyDown\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        /** @private */\n        this.inversedAlignment = true;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param {number} x\n     * @param {number} y\n     * @param {UnitMode} mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param {Size} size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param {Size} availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize, obj, callback) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param {Size} desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param {Size} desiredSize\n     * @param {Size} availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param {Size} availableSize\n     */\n    Container.prototype.measure = function (availableSize, id, callback) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize, id, callback);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param {Size} desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param {Size} size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param {Size} size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param {DiagramElement} child\n     * @param {PointModel} center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param {Size} availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param {Size} desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param {Size} availableSize\n     */\n    Canvas.prototype.measure = function (availableSize, id, callback) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize, id, callback);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param {DiagramElement} child\n     * @param {Size} childSize\n     * @param {Size} parentSize\n     * @param {number} x\n     * @param {number} y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param {DiagramElement} child\n     * @param {number} x\n     * @param {number} y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = child.inversedAlignment ? x : (x - child.desiredSize.width);\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x = child.inversedAlignment ? (x - child.desiredSize.width) : x;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = child.inversedAlignment ? y : (y - child.desiredSize.height);\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y = child.inversedAlignment ? (y - child.desiredSize.height) : y;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param {Size} availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param {Size} desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param {string} pathData\n     * @param {Rect} bounds\n     * @param {Size} actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param {Size} availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize, id, callback) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param {Size} desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            if (!this.canReset) {\n                this.canReset = true;\n                this.template = getContent(this, false);\n                this.canReset = false;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param {Size} availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param {Size} desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    // tslint:disable-next-line:no-any\n    function Port(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.inEdges = [];\n        _this.outEdges = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"outEdges\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"inEdges\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property('String')\n    ], Annotation.prototype, \"annotationType\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * customize the size of the individual palette items.\n */\nvar SymbolSize = /** @class */ (function (_super) {\n    __extends(SymbolSize, _super);\n    function SymbolSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"height\", void 0);\n    return SymbolSize;\n}(ChildProperty));\nexport { SymbolSize };\n/**\n * Defines the size and description of a symbol\n */\nvar SymbolPaletteInfo = /** @class */ (function (_super) {\n    __extends(SymbolPaletteInfo, _super);\n    function SymbolPaletteInfo() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPaletteInfo.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPaletteInfo.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPaletteInfo.prototype, \"fit\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPaletteInfo.prototype, \"description\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPaletteInfo.prototype, \"template\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPaletteInfo.prototype, \"tooltip\", void 0);\n    return SymbolPaletteInfo;\n}(ChildProperty));\nexport { SymbolPaletteInfo };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { DiagramTooltip } from './tooltip';\nimport { SymbolPaletteInfo } from './preview';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    __decorate([\n        Complex({}, SymbolPaletteInfo)\n    ], NodeBase.prototype, \"symbolInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\nimport { templateCompiler } from '../../utility/base-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId, nodeTemplate) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        _this.templateFn = templateCompiler(nodeTemplate);\n        return _this;\n    }\n    /** @private */\n    DiagramHtmlElement.prototype.getNodeTemplate = function () {\n        return this.templateFn;\n    };\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            if (!this.isTemplate) {\n                this.template = getContent(this, true);\n            }\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param {number} scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param {HTMLElement} rulerObj - Defines the ruler Object\n     * @param {PointModel} currentPoint - Defines the current point for ruler Object\n     * @param {number} offset - Defines the offset ruler Object\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('Top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableNodes\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableConnectors\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"template\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        /**\n         * Sets or gets whether the padding of the element needs to be measured\n         * @private\n         */\n        _this.considerPadding = true;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param {Size} availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param {Size} desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param {Size} availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        if (this.considerPadding) {\n            this.applyPadding(desired);\n        }\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar LayoutInfo = /** @class */ (function (_super) {\n    __extends(LayoutInfo, _super);\n    function LayoutInfo() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Horizontal')\n    ], LayoutInfo.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Center')\n    ], LayoutInfo.prototype, \"type\", void 0);\n    __decorate([\n        Property(undefined)\n    ], LayoutInfo.prototype, \"offset\", void 0);\n    __decorate([\n        Property(false)\n    ], LayoutInfo.prototype, \"enableRouting\", void 0);\n    __decorate([\n        Property([])\n    ], LayoutInfo.prototype, \"children\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"assistants\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"level\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"hasSubTree\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"rows\", void 0);\n    return LayoutInfo;\n}(ChildProperty));\nexport { LayoutInfo };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { IconShape } from './icon';\nimport { measurePath, getContent, getTemplateContent } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nimport { LayoutInfo } from '../diagram/layoutinfo';\nimport { SymbolSize } from './preview';\nvar getShapeType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramShape;\n        }\n        else {\n            switch (obj.type) {\n                case 'Basic':\n                    return BasicShape;\n                case 'Flow':\n                    return FlowShape;\n                case 'Path':\n                    return Path;\n                case 'Image':\n                    return Image;\n                case 'Text':\n                    return Text;\n                case 'Bpmn':\n                    return BpmnShape;\n                case 'Native':\n                    return Native;\n                case 'HTML':\n                    return Html;\n                case 'UmlActivity':\n                    return UmlActivityShape;\n                case 'UmlClassifier':\n                    return UmlClassifierShape;\n                case 'SwimLane':\n                    return SwimLane;\n                default:\n                    return BasicShape;\n            }\n        }\n    }\n    return (isBlazor()) ? DiagramShape : BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/* tslint:disable */\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar DiagramShape = /** @class */ (function (_super) {\n    __extends(DiagramShape, _super);\n    function DiagramShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    DiagramShape.prototype.getClassName = function () {\n        return 'DiagramShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], DiagramShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], DiagramShape.prototype, \"basicShape\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], DiagramShape.prototype, \"flowShape\", void 0);\n    __decorate([\n        Property('Event')\n    ], DiagramShape.prototype, \"bpmnShape\", void 0);\n    __decorate([\n        Property('Action')\n    ], DiagramShape.prototype, \"umlActivityShape\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"data\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"textContent\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], DiagramShape.prototype, \"scale\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShape.prototype, \"align\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], DiagramShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], DiagramShape.prototype, \"points\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], DiagramShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], DiagramShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], DiagramShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], DiagramShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], DiagramShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], DiagramShape.prototype, \"classifier\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], DiagramShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], DiagramShape.prototype, \"interfaceShape\", void 0);\n    return DiagramShape;\n}(ChildProperty));\nexport { DiagramShape };\n/* tslint:enable */\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = (isBlazor() ? this.shape.textContent : this.shape.content);\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if ((!isBlazor() && this.shape.shape === 'Rectangle') || (isBlazor() && this.shape.basicShape === 'Rectangle')) {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if ((!isBlazor() && this.shape.shape === 'Polygon') || (isBlazor() && this.shape.basicShape === 'Polygon')) {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape((isBlazor()) ? this.shape.basicShape : this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape((isBlazor() ? this.shape.flowShape : this.shape.shape));\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id, undefined, diagram.nodeTemplate);\n                if (this.shape.content) {\n                    htmlContent.content = this.shape.content;\n                }\n                else if (diagram.nodeTemplate) {\n                    htmlContent.isTemplate = true;\n                    htmlContent.template = htmlContent.content = getContent(htmlContent, true, this);\n                }\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if ((!isBlazor() && this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) ||\n            ((isBlazor()) && (this.shape.basicShape === 'Rectangle'\n                && this.shape.type === \"Basic\" && !this.shape.cornerRadius))) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if ((this.shape instanceof Text) || (isBlazor() && this.shape.type === \"Text\")) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || ((!isBlazor() && this.shape.shape === 'Message') || (isBlazor() && this.shape.bpmnShape === 'Message')) ||\n            ((!isBlazor() && this.shape.shape === 'DataSource') || (isBlazor() && this.shape.bpmnShape === 'DataSource'))) && ((this.shape.type !== 'UmlActivity' || ((!isBlazor() && this.shape.shape !== 'FinalNode') ||\n            (isBlazor() && this.shape.umlActivityShape !== 'FinalNode'))))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            port.inversedAlignment = canvas.inversedAlignment;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            iconContainer.inversedAlignment = canvas.inversedAlignment;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize, annotationTemplate) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i, annotationTemplate);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            annotation.inversedAlignment = container.inversedAlignment;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value, annotationTemplate) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            annotationcontent = getTemplateContent(annotationcontent, annotation, annotationTemplate);\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Complex({}, LayoutInfo)\n    ], Node.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], Node.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], Node.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    __decorate([\n        Property(true)\n    ], Lane.prototype, \"canMove\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            var childNodesHeight = 0;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n                        (options.textWrapping === 'WrapWithOverflow' || options.textWrapping === 'Wrap') && parentNode) {\n                        var size = (options.isHorizontalLane) ? parentNode.actualSize.width : parentNode.actualSize.height;\n                        if (offsetY < size) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > size) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                            childNodesHeight += child.dy;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (childNodesHeight && options.isHorizontalLane) {\n                pivotX = options.parentOffsetX + options.pivotX;\n                pivotY = options.parentOffsetY + options.pivotY;\n                options.y = options.parentOffsetY - childNodesHeight * options.pivotY + 0.5;\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        if (isBlazor() && obj.alignment === 'None' && scale === 'Stretch') {\n            scale = '';\n        }\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                        break;\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            element.isTemplate ? htmlElement.appendChild(element.template) : htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param {DiagramNativeElement} node\n     * @param {SVGElement} group\n     * @param {number} height\n     * @param {number} width\n     * @param {SVGSVGElement} parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        if (checkBrowserInfo()) {\n            group.setAttribute('clip-path', 'url(' + location.protocol + '//' + location.host + location.pathname +\n                '#' + node.id + '_clip)');\n        }\n        else {\n            group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        }\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                if (checkBrowserInfo()) {\n                    fill = 'url(' + location.protocol + '//' + location.host + location.pathname + '#' + grd.id + ')';\n                }\n                else {\n                    fill = 'url(#' + grd.id + ')';\n                }\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner, getInterval, getSpaceValue } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette, isPreviewNode);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg, isPreviewNode);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 1.2;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform, diagramUserHandlelayer) {\n        var wrapper = selectorItem.wrapper;\n        var canDraw;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            canDraw = true;\n            if ((obj.disableConnectors && selectorItem.connectors.length > 0) ||\n                (obj.disableNodes && selectorItem.nodes.length > 0)) {\n                canDraw = false;\n            }\n            var div = document.getElementById(obj.name + '_template_hiddenUserHandle');\n            if (div) {\n                obj.template = (div.childNodes[0]).cloneNode(true);\n            }\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (canDraw) {\n                if (obj.pathData) {\n                    var data = obj.pathData ? obj.pathData : obj.content;\n                    var option = this.getBaseAttributes(wrapper);\n                    option.id = obj.name + '_userhandle';\n                    option.fill = obj.backgroundColor;\n                    option.stroke = obj.borderColor;\n                    option.strokeWidth = obj.borderWidth;\n                    option.centerX = newPoint.x;\n                    option.centerY = newPoint.y;\n                    option.radius = obj.size * 0.5;\n                    option.class = 'e-diagram-userhandle-circle';\n                    option.angle = 0;\n                    option.visible = obj.visible;\n                    option.opacity = 1;\n                    this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                    var pathPading = 5;\n                    var arrayCollection = [];\n                    arrayCollection = processPathData(data);\n                    arrayCollection = splitArrayCollection(arrayCollection);\n                    var pathSize = measurePath(data);\n                    //requiredSize/contentSize\n                    var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                    var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                    var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                    pathSize = measurePath(newData);\n                    var options = {\n                        x: newPoint.x - pathSize.width / 2,\n                        y: newPoint.y - pathSize.height / 2, angle: 0, id: '',\n                        class: 'e-diagram-userhandle-path', fill: obj.pathColor,\n                        stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                        width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                    };\n                    this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n                }\n                else if (obj.content) {\n                    var handleContent = void 0;\n                    handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                    handleContent.content = obj.content;\n                    handleContent.offsetX = newPoint.x;\n                    handleContent.offsetY = newPoint.y;\n                    handleContent.id = obj.name + '_shape';\n                    handleContent.horizontalAlignment = 'Center';\n                    handleContent.verticalAlignment = 'Center';\n                    handleContent.visible = obj.visible;\n                    handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                    handleContent.relativeMode = 'Object';\n                    handleContent.description = obj.name || 'User handle';\n                    handleContent.measure(new Size(obj.size, obj.size));\n                    handleContent.arrange(handleContent.desiredSize);\n                    this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n                }\n                else if (obj.source) {\n                    var element = new ImageElement();\n                    var options = this.getBaseAttributes(element, transform);\n                    options.width = obj.size;\n                    options.height = obj.size;\n                    options.x = newPoint.x - (obj.size / 2);\n                    options.y = newPoint.y - (obj.size / 2);\n                    options.sourceWidth = obj.size;\n                    options.sourceHeight = obj.size;\n                    options.alignment = element.imageAlign;\n                    options.source = obj.source;\n                    options.scale = element.imageScale;\n                    options.visible = obj.visible;\n                    options.description = obj.name || 'User handle';\n                    options.id = obj.name + '_';\n                    this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n                }\n                else {\n                    var templateContent = void 0;\n                    templateContent = new DiagramHtmlElement(obj.name, this.diagramId);\n                    templateContent.offsetX = newPoint.x;\n                    templateContent.offsetY = newPoint.y;\n                    templateContent.id = obj.name + '_shape';\n                    templateContent.visible = obj.visible;\n                    templateContent.relativeMode = 'Object';\n                    templateContent.template = obj.template;\n                    templateContent.measure(new Size(obj.size, obj.size));\n                    templateContent.arrange(templateContent.desiredSize);\n                    this.svgRenderer.drawHTMLContent(templateContent, diagramUserHandlelayer, undefined, true, undefined);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette, isPreviewNode) {\n        var options = this.getBaseAttributes(element, transform, isPreviewNode);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        var isLine = snapSettings.gridType === 'Lines';\n        var verticalLineIntervals = isLine ?\n            snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n        var horizontalLineIntervals = isLine ?\n            snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var i = 0; i < verticalLineIntervals.length; i = i + 1) {\n                hWidth += verticalLineIntervals[i];\n            }\n            for (var i = 0; i < horizontalLineIntervals.length; i = i + 1) {\n                hHeight += horizontalLineIntervals[i];\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight, isLine);\n            }\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                var spaceY = 0;\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                        'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(hLine, attr);\n                    pattern.appendChild(hLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, true);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderDotGrid = function (i, pattern, snapSettings, spacey, d, scale, isHorizontal) {\n        var intervals = !isHorizontal ?\n            snapSettings.horizontalGridlines.dotIntervals : snapSettings.verticalGridlines.dotIntervals;\n        intervals = getInterval(intervals, false);\n        var r;\n        var hLine;\n        var doubleRadius;\n        var dy;\n        var attr;\n        for (var j = 1; j < intervals.length; j = j + 2) {\n            r = j === intervals.length - 1 ? intervals[0] : intervals[j - 1];\n            hLine = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            dy = spacey;\n            dy = dy * scale;\n            attr = {\n                'cx': isHorizontal ? dy : d, 'cy': isHorizontal ? d : dy, 'fill': snapSettings.horizontalGridlines.lineColor, 'r': r\n            };\n            setAttributeSvg(hLine, attr);\n            pattern.appendChild(hLine);\n            spacey += intervals[j] + intervals[j - 1];\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth, isLine);\n            }\n            var spaceY = 0;\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                        'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(vLine, attr);\n                    pattern.appendChild(vLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, false);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            var isLine = snapSettings.gridType === 'Lines';\n            var verticalLineIntervals = isLine ?\n                snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n            var horizontalLineIntervals = isLine ?\n                snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (var j = 0; j < horizontalLineIntervals.length; j = j + 1) {\n                height += horizontalLineIntervals[j];\n            }\n            var width = 0;\n            for (var j = 0; j < verticalLineIntervals.length; j = j + 1) {\n                width += verticalLineIntervals[j];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth, isLine) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        var interval = isLine ? ruler.interval : ruler.interval + 1;\n        for (var i = 0; i < interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = isLine ? ((i === 0) ? 1.25 : 0.25) : 0;\n            }\n            else {\n                newInterval[i] = isLine ? (tickInterval - newInterval[i - 1]) : tickInterval;\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.isHorizontalLane = element.isLaneOrientation;\n        if (element.isLaneOrientation) {\n            options.parentOffsetX = this.groupElement.offsetX;\n            options.parentOffsetY = this.groupElement.offsetY;\n            options.parentWidth = this.groupElement.actualSize.width;\n            options.parentHeight = this.groupElement.actualSize.height;\n        }\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if ((element.style.textWrapping === 'Wrap' || element.style.textWrapping === 'WrapWithOverflow') &&\n            this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue, isPreviewNode);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    (getHTMLLayer(this.diagramId).children[0]);\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform =\n                        'scale(' + scaleX + ',' + scaleY + ')' + 'rotate(' + (element.rotateAngle + element.parentTransform) + 'deg)';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg, isPreviewNode) {\n        var options = this.getBaseAttributes(element, transform, isPreviewNode);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform, isPreviewNode) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (isPreviewNode) {\n            options.x = options.x - .5;\n            options.y = options.y - .5;\n        }\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        var domTable = 'domTable';\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                if (!window[domTable][this.diagramId + '_diagramLayer']) {\n                    window[domTable][this.diagramId + '_diagramLayer'] =\n                        this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                }\n                var diagramLayer = window[domTable][this.diagramId + '_diagramLayer'];\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            if (!window[domTable][this.diagramId + '_diagramPorts']) {\n                window[domTable][this.diagramId + '_diagramPorts'] = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            }\n            var portsLayer = window[domTable][this.diagramId + '_diagramPorts'];\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            if (!window[domTable][this.diagramId + '_diagramExpander']) {\n                window[domTable][this.diagramId + '_diagramExpander'] =\n                    this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            }\n            var expandLayer = window[domTable][this.diagramId + '_diagramExpander'];\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            if (!window[domTable][this.diagramId + '_nativeLayer']) {\n                window[domTable][this.diagramId + '_nativeLayer'] = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            }\n            var nativeLayer = window[domTable][this.diagramId + '_nativeLayer'];\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\nvar FitOptions = /** @class */ (function (_super) {\n    __extends(FitOptions, _super);\n    function FitOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Page')\n    ], FitOptions.prototype, \"mode\", void 0);\n    __decorate([\n        Property('PageSettings')\n    ], FitOptions.prototype, \"region\", void 0);\n    __decorate([\n        Complex({ top: 25, bottom: 25, left: 25, right: 25 }, Margin)\n    ], FitOptions.prototype, \"margin\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canZoomIn\", void 0);\n    __decorate([\n        Property(undefined)\n    ], FitOptions.prototype, \"customBounds\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canFit\", void 0);\n    return FitOptions;\n}(ChildProperty));\nexport { FitOptions };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    __decorate([\n        Complex({}, FitOptions)\n    ], PageSettings.prototype, \"fitOptions\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([1, 19, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5])\n    ], Gridlines.prototype, \"dotIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property('Lines')\n    ], SnapSettings.prototype, \"gridType\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","import { TextElement } from '../core/elements/text-element';\nimport { Node } from '../objects/node';\nimport { getIndex, cloneObject } from './base-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of commands\n */\n/* tslint:disable */\nvar DeepDiffMapper = /** @class */ (function () {\n    function DeepDiffMapper() {\n        this.valueCreated = 'created';\n        this.valueUpdated = \"updated\";\n        this.valueDeleted = \"deleted\";\n        this.valueUnchanged = \"unchanged\";\n        /** @private */\n        this.newNodeObject = [];\n        /** @private */\n        this.newConnectorObject = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /* tslint:enable */\n    }\n    /** @private */\n    DeepDiffMapper.prototype.updateObjectCollection = function (layers, diagram) {\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i]['objects']) {\n                layers[i]['objects'] = (diagram.layers[i].objects);\n            }\n            else {\n                layers[i]['objects'] = [];\n                layers[i]['objects'] = diagram.layers[i].objects;\n            }\n        }\n    };\n    /**   @private  */\n    DeepDiffMapper.prototype.getOldObject = function (id, isNode, diagram) {\n        var oldObject = isNode ? diagram.oldNodeObjects : diagram.oldConnectorObjects;\n        for (var i = 0; i < oldObject.length; i++) {\n            if (oldObject[i].id === id) {\n                return oldObject[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.changeSegments = function (diff, newObject) {\n        for (var _i = 0, _a = Object.keys(diff); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop === 'segments') {\n                var seg = this.removeNullValues(newObject[prop]);\n                diff[prop] = seg;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.removeNullValues = function (segments) {\n        var newSegments = [];\n        var seg = {};\n        for (var i = 0; i < segments.length; i++) {\n            seg = this.removeNullObjectValues(segments[i]);\n            newSegments.push(seg);\n        }\n        return newSegments;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.removeNullObjectValues = function (segment) {\n        var newSegObject = {};\n        for (var _i = 0, _a = Object.keys(segment); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (segment[prop] !== undefined) {\n                newSegObject[prop] = (segment[prop] instanceof Object) ? this.removeNullObjectValues(segment[prop]) : segment[prop];\n            }\n        }\n        return newSegObject;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.getDifferenceValues = function (selectedObject, args, labelDrag, diagram) {\n        var diffValue;\n        var diff;\n        var result;\n        var isNode = selectedObject instanceof Node;\n        var oldObject;\n        if (selectedObject) {\n            oldObject = isNode ? this.getOldObject(selectedObject.id, true, diagram) : this.getOldObject(selectedObject.id, false, diagram);\n            if (oldObject) {\n                var newObject = cloneObject(selectedObject);\n                result = this.map(newObject, oldObject);\n                diffValue = this.frameObject({}, result);\n                diff = this.removeEmptyValues(diffValue);\n                diff = this.changeSegments(diff, newObject);\n                if (diff.children) {\n                    diff.children = cloneObject(selectedObject).children;\n                }\n                return this.getDiagramObjects(diff, selectedObject.id, isNode, args, labelDrag, diagram);\n            }\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getLayerObject = function (oldDiagram, temp, diagram) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers['layers'] = [];\n            var newDiagram = {};\n            newDiagram['layers'] = [];\n            for (var i = 0; i < diagram.layers.length; i++) {\n                newDiagram['layers'].push(cloneObject(diagram.layers[i]));\n            }\n            var result = void 0;\n            for (var i = 0; i < newDiagram['layers'].length; i++) {\n                if (!temp) {\n                    result = this.map(cloneObject(newDiagram['layers'][i]), oldDiagram['layers'][i]);\n                }\n                else {\n                    result = this.map(oldDiagram['layers'][i], cloneObject(newDiagram['layers'][i]));\n                }\n                var diffValue = this.frameObject({}, result);\n                var diff = this.removeEmptyValues(diffValue);\n                diffLayers['layers'][i] = diff;\n            }\n            this.updateObjectCollection(diffLayers['layers'], diagram);\n            return diffLayers;\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getDiagramObjects = function (diffValue, object, isNode, args, labelDrag, diagram) {\n        var index = 0;\n        index = getIndex(diagram, object);\n        diffValue.sfIndex = index;\n        if (isNode) {\n            this.newNodeObject.push(diffValue);\n        }\n        else {\n            this.newConnectorObject.push(diffValue);\n        }\n        if (args && (((args.sourceWrapper instanceof TextElement) && labelDrag) || args.portId)) {\n            var tempObject = void 0;\n            var objectValue = void 0;\n            if (isNode) {\n                objectValue = args.portId ? this.newNodeObject[0].ports : this.newNodeObject[0].annotations;\n            }\n            else {\n                objectValue = this.newConnectorObject[0].annotations || [];\n            }\n            for (var i = 0; i < objectValue.length; i++) {\n                if (Object.keys(objectValue[i]).length > 0) {\n                    var selectedObject = diagram.nameTable[object];\n                    tempObject = objectValue[i];\n                    if (args.portId) {\n                        this.newNodeObject[0].ports = [tempObject];\n                    }\n                    else {\n                        for (var j = 0; j < selectedObject.annotations.length; j++) {\n                            if (args.sourceWrapper.id === selectedObject.id + \"_\" + selectedObject.annotations[j].id) {\n                                tempObject.sfIndex = j;\n                            }\n                        }\n                        if (isNode) {\n                            this.newNodeObject[0].annotations = [tempObject];\n                        }\n                        else {\n                            this.newConnectorObject[0].annotations = [tempObject];\n                        }\n                    }\n                }\n            }\n        }\n        this.diagramObject = { nodes: this.newNodeObject, connectors: this.newConnectorObject };\n        //return returnValue;\n    };\n    DeepDiffMapper.prototype.removeArrayValues = function (obj) {\n        var newObj = [];\n        var value = JSON.stringify(obj);\n        if (!(value === JSON.stringify({ 'data': [] }))) {\n            for (var i = 0; i < obj.length; i++) {\n                if (obj[i] instanceof Object) {\n                    var newValue = this.removeEmptyValues(obj[i]);\n                    newObj.push(newValue);\n                }\n                else {\n                    newObj.push(obj[i]);\n                }\n            }\n        }\n        return newObj;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.removeEmptyValues = function (frame) {\n        var newObj = {};\n        for (var _i = 0, _a = Object.keys(frame); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop !== 'wrapper' && prop !== 'data') {\n                var obj = frame[prop];\n                var value = JSON.stringify(obj);\n                if (obj instanceof Array) {\n                    var newValue = this.removeArrayValues(obj);\n                    if (JSON.stringify(newValue) !== '[]') {\n                        newObj[prop] = newValue;\n                    }\n                }\n                else {\n                    if (obj instanceof Object) {\n                        if (!(value === JSON.stringify({ 'data': [] }))) {\n                            var newValue = this.removeEmptyValues(obj);\n                            if (JSON.stringify(newValue) !== '{}') {\n                                newObj[prop] = newValue;\n                            }\n                        }\n                    }\n                    else {\n                        if (!(value === JSON.stringify(['data']) || value === JSON.stringify('data')\n                            || value === JSON.stringify({ 'data': [] }))) {\n                            if (prop !== 'version' && prop !== 'ejsAction') {\n                                newObj[prop] = frame[prop];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return newObj;\n    };\n    DeepDiffMapper.prototype.map = function (obj1, obj2, arrayName) {\n        if (this.isFunction(obj1) || this.isFunction(obj2)) {\n            throw 'Invalid argument. Function given, object expected.';\n        }\n        if (this.isValue(obj1) || this.isValue(obj2)) {\n            return {\n                type: this.compareValues(obj1, obj2),\n                data: obj1 === undefined ? obj2 : obj1\n            };\n        }\n        var diff = {};\n        if (this.isArray(obj1)) {\n            for (var i = 0; i < obj1.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                var ss = this.map(obj1[i], obj2[i]);\n                diff[arrayName].push(ss);\n            }\n        }\n        else {\n            for (var key in obj1) {\n                if (this.isFunction(obj1[key])) {\n                    continue;\n                }\n                var value2 = undefined;\n                if (obj2[key] !== undefined) {\n                    value2 = obj2[key];\n                }\n                var kk = this.map(obj1[key], value2, this.isArray(value2) ? key : undefined);\n                if (this.isArray(value2)) {\n                    diff[key] = kk[key];\n                }\n                else {\n                    diff[key] = kk;\n                }\n            }\n        }\n        if (this.isArray(obj2)) {\n            for (var i = 0; i < obj2.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                if (this.isFunction(obj2[i]) || diff[arrayName][i] !== undefined) {\n                    if (diff[arrayName][i].type && diff[arrayName][i].type !== this.valueUpdated) {\n                        delete diff[arrayName];\n                    }\n                    continue;\n                }\n                var ss = this.map(undefined, obj2[i]);\n                diff[arrayName][i] = ss;\n            }\n        }\n        else {\n            for (var key in obj2) {\n                if (this.isFunction(obj2[key]) || diff[key] !== undefined) {\n                    if (diff[key].type && ((diff[key].type !== this.valueUpdated) && (diff[key].type !== this.valueDeleted))) {\n                        delete diff[key];\n                    }\n                    continue;\n                }\n                var kk = this.map(undefined, obj2[key]);\n                diff[key] = kk;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.compareValues = function (value1, value2) {\n        if (value1 === value2) {\n            return this.valueUnchanged;\n        }\n        if (this.isDate(value1) && this.isDate(value2) && value1.getTime() === value2.getTime()) {\n            return this.valueUnchanged;\n        }\n        if (value1 === undefined) {\n            return this.valueCreated;\n        }\n        if (value2 === undefined) {\n            return this.valueDeleted;\n        }\n        return this.valueUpdated;\n    };\n    DeepDiffMapper.prototype.isFunction = function (x) {\n        return Object.prototype.toString.call(x) === '[object Function]';\n    };\n    DeepDiffMapper.prototype.isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n    };\n    DeepDiffMapper.prototype.isDate = function (x) {\n        return Object.prototype.toString.call(x) === '[object Date]';\n    };\n    DeepDiffMapper.prototype.isObject = function (x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n    DeepDiffMapper.prototype.isValue = function (x) {\n        return !this.isObject(x) && !this.isArray(x);\n    };\n    DeepDiffMapper.prototype.frameObject = function (final, obj) {\n        for (var key in obj) {\n            if (this.isArray(obj[key])) {\n                if (!final[key]) {\n                    final[key] = [];\n                }\n                for (var i = 0; i < obj[key].length; i++) {\n                    var kk = this.frameObject({}, obj[key][i]);\n                    final[key].push(kk);\n                }\n            }\n            else {\n                if ((key != 'type') || (key == 'type' && (obj[key] !== this.valueUpdated && obj[key] !== this.valueUnchanged && obj[key] !== this.valueDeleted && obj[key] !== this.valueCreated))) {\n                    if (this.isFunction(obj[key])) {\n                        continue;\n                    }\n                    if (this.isValue(obj[key])) {\n                        return obj['data'];\n                    }\n                    else {\n                        var kk = this.frameObject({}, obj[key]);\n                        if (this.isValue(kk) || Object.keys(kk).length > 0) {\n                            final[key] = kk;\n                        }\n                    }\n                }\n            }\n        }\n        return final;\n    };\n    return DeepDiffMapper;\n}());\nexport { DeepDiffMapper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType, checkPort } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param {CommandHandler} command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        this.deepDiffer = new DeepDiffMapper();\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(true);\n            this.commandHandler.ismouseEvents(true);\n        }\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(false);\n            this.commandHandler.ismouseEvents(false);\n            this.commandHandler.getBlazorOldValues(args, this instanceof LabelDragTool);\n        }\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (!this.commandHandler.isUserHandle(this.currentPosition)) {\n            if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n                var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n                this.commandHandler.doRubberBandSelection(region);\n            }\n            else {\n                //single selection\n                var arrayNodes = this.commandHandler.getSelectedObject();\n                if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                    this.commandHandler.clearSelection(args.source === null ? true : false);\n                    if (this.action === 'LabelSelect') {\n                        this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                    }\n                    else if (args.source) {\n                        this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                    }\n                }\n                else {\n                    //handling multiple selection\n                    if (args && args.source) {\n                        if (!this.commandHandler.isSelected(args.source)) {\n                            this.commandHandler.selectObjects([args.source], true);\n                        }\n                        else {\n                            if (args.clickCount === 1) {\n                                this.commandHandler.unSelect(args.source);\n                                this.commandHandler.updateBlazorSelector();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.isConnected = false;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectorModel, connector, arg, trigger, temparg, oldValue, connectors, i, segment, segmentpoint1, segmentpoint2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && args && args.source)) return [3 /*break*/, 2];\n                        selectorModel = args.source;\n                        if (!selectorModel.connectors) return [3 /*break*/, 2];\n                        connector = selectorModel.connectors[0];\n                        this.oldConnector = cloneObject(connector);\n                        arg = {\n                            connector: cloneBlazorObject(connector),\n                            oldValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            newValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            cancel: false, state: 'Changing', connectorEnd: this.endPoint\n                        };\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, arg)];\n                    case 1:\n                        temparg = (_a.sent()) || arg;\n                        this.tempArgs = temparg;\n                        if (arg.cancel || (temparg && temparg.cancel)) {\n                            this.canCancel = true;\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.inAction = true;\n                        this.undoElement = undefined;\n                        if (!(this instanceof ConnectorDrawingTool)) {\n                            this.undoElement = cloneObject(args.source);\n                        }\n                        _super.prototype.mouseDown.call(this, args);\n                        if (args.source && args.source.connectors) {\n                            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                            connectors = args.source.connectors[0];\n                            this.oldConnector = cloneObject(connectors);\n                        }\n                        // Sets the selected segment \n                        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n                            for (i = 0; i < connectors.segments.length; i++) {\n                                segment = connectors.segments[i];\n                                segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                                segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                                    this.selectedSegment = segment;\n                                }\n                            }\n                        }\n                        this.currentPosition = args.position;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var trigger, temparg, nodeEndId, portEndId, connector, nodeEndId, portEndId, arg, oldValues, connector, targetPortName, targetNodeNode, target, arg, trigger, obj, entry, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        if (!(this.tempArgs && this.oldConnector)) return [3 /*break*/, 2];\n                        this.tempArgs.state = 'Changed';\n                        nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                        portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                        this.tempArgs.oldValue = this.endPoint === 'ConnectorSourceEnd' ?\n                            { connectorSourceValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] } } :\n                            { connectorTargetValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] } };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, this.tempArgs)];\n                    case 1:\n                        temparg = (_a.sent());\n                        if (temparg) {\n                            this.commandHandler.updateConnectorValue(temparg);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        if (!isBlazor() && this.isConnected && args.source.connectors) {\n                            connector = args.source.connectors[0];\n                            nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                            portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                            arg = {\n                                connector: cloneBlazorObject(connector),\n                                oldValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] },\n                                newValue: { nodeId: connector[nodeEndId], portId: connector[portEndId] }, cancel: false,\n                                state: 'Changed', connectorEnd: this.endPoint\n                            };\n                            if (connector[nodeEndId] !== this.oldConnector[nodeEndId]) {\n                                this.commandHandler.triggerEvent(DiagramEvent.connectionChange, arg);\n                                this.isConnected = false;\n                            }\n                        }\n                        this.checkPropertyValue();\n                        this.commandHandler.updateSelector();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.changeAnnotationDrag(args);\n                        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n                            args.source.connectors.length &&\n                            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n                            (this.endPoint === 'ConnectorTargetEnd' &&\n                                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n                            oldValues = void 0;\n                            connector = void 0;\n                            if (args.source && args.source.connectors) {\n                                oldValues = {\n                                    x: this.prevPosition.x, y: this.prevPosition.y\n                                };\n                                connector = args.source.connectors[0];\n                            }\n                            targetPortName = void 0;\n                            targetNodeNode = void 0;\n                            if (args.target) {\n                                target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n                            }\n                            arg = {\n                                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n                            };\n                            if (isBlazor()) {\n                                arg = {\n                                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                                };\n                            }\n                            trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                            this.commandHandler.triggerEvent(trigger, arg);\n                            this.commandHandler.removeTerminalSegment(connector, true);\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                                    category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        else if (!(this instanceof ConnectorDrawingTool) &&\n                            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:disable */\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var tempArgs;\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                        this.isConnected = true;\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                            this.isConnected = true;\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.isConnected = true;\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.isConnected = true;\n                    tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n            if (tempArgs) {\n                this.tempArgs = tempArgs;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.canCancel = false;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.initialOffset = { x: 0, y: 0 };\n            if (args.source) {\n                oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n            }\n            var arg = {\n                source: cloneObject(args.source), state: 'Start', oldValue: oldValues, newValue: {},\n                target: cloneObject(args.target), targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldValues, newValues, arg, blazorArgs, tx, ty, obj, historyAdded, object, redoObject, wrapper, arg, entry, entry_1, snappedPoint, arg, nodes, isEndGroup, i, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && this.objectType !== 'Port')) return [3 /*break*/, 2];\n                        if (args.source) {\n                            newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        }\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed',\n                            oldValue: cloneBlazorObject(this.tempArgs.oldValue), newValue: cloneBlazorObject(newValues),\n                            target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                            allowDrop: true, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg)];\n                    case 1:\n                        blazorArgs = _a.sent();\n                        if (blazorArgs && blazorArgs.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            tx = this.tempArgs.oldValue.offsetX - args.source.wrapper.offsetX;\n                            ty = this.tempArgs.oldValue.offsetY - args.source.wrapper.offsetY;\n                            this.commandHandler.dragSelectedObjects(tx, ty);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.checkPropertyValue();\n                        historyAdded = false;\n                        redoObject = { nodes: [], connectors: [] };\n                        if (!(this.objectType !== 'Port')) return [3 /*break*/, 7];\n                        if (args.source instanceof Node || args.source instanceof Connector) {\n                            if (args.source instanceof Node) {\n                                redoObject.nodes.push(cloneObject(args.source));\n                            }\n                            else {\n                                redoObject.connectors.push(cloneObject(args.source));\n                            }\n                            obj = cloneObject(redoObject);\n                            wrapper = args.source.wrapper;\n                            obj.offsetX = wrapper.offsetX;\n                            obj.offsetY = wrapper.offsetY;\n                        }\n                        else {\n                            obj = cloneObject(args.source);\n                        }\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source || this.commandHandler.renderContainerHelper(args.source);\n                        if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                            || (object.id !== 'helper')) {\n                            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY ||\n                                object.sourcePoint !== this.undoElement.sourcePoint\n                                || object.targetPoint !== this.undoElement.targetPoint) {\n                                if (args.source) {\n                                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                }\n                                arg = {\n                                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                                    target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                                    allowDrop: arg.allowDrop, cancel: arg.cancel\n                                };\n                                if (isBlazor()) {\n                                    arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                                }\n                                if (!isBlazor()) {\n                                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                                }\n                                if (!isPreventHistory) {\n                                    this.commandHandler.startGroupAction();\n                                    historyAdded = true;\n                                    entry = {\n                                        type: 'PositionChanged',\n                                        redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                                    };\n                                    if (obj.nodes[0] && obj.nodes[0].processId) {\n                                        entry_1 = {\n                                            type: 'SizeChanged', category: 'Internal',\n                                            undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                                        };\n                                        this.commandHandler.addHistoryEntry(entry_1);\n                                    }\n                                    this.commandHandler.addHistoryEntry(entry);\n                                }\n                            }\n                        }\n                        snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.removeHighlighter();\n                        if (!(args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                            this.commandHandler.isDroppable(args.source, this.currentTarget))) return [3 /*break*/, 6];\n                        this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                        arg = {\n                            element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 4];\n                        arg = getDropEventArguements(args, arg);\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.drop, arg)];\n                    case 3:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 5;\n                    case 5:\n                        if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                            nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                            isEndGroup = false;\n                            for (i = 0; i < nodes.length; i++) {\n                                if (!nodes[i].container) {\n                                    isEndGroup = true;\n                                    this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                                    this.commandHandler.renderContainerHelper(nodes[i]);\n                                }\n                            }\n                            if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        _a.label = 6;\n                    case 6:\n                        if (args.source && this.currentTarget) {\n                            this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n                        }\n                        this.commandHandler.updateSelector();\n                        if (historyAdded && !this.commandHandler.isContainer) {\n                            this.commandHandler.endGroupAction();\n                        }\n                        return [3 /*break*/, 8];\n                    case 7:\n                        redoObject.nodes.push(cloneObject(args.source));\n                        args.portId = this.portId;\n                        obj = cloneObject(redoObject);\n                        entry = {\n                            type: 'PortPositionChanged', objectId: this.portId,\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        this.commandHandler.addHistoryEntry(entry);\n                        _a.label = 8;\n                    case 8:\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isSame && !isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            }\n            if (!arg_1.cancel && !this.canCancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            var object = void 0;\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValue, newValue: undefined, cancel: false\n            };\n            var temparg = arg;\n            this.tempArgs = temparg;\n            if (this.tempArgs && this.tempArgs.cancel) {\n                this.canCancel = true;\n            }\n        }\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var object_2, oldValue, newValue, arg, args1, object, oldValue, arg, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.checkPropertyValue();\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        object_2 = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        oldValue = { rotateAngle: this.tempArgs.oldValue.rotateAngle };\n                        newValue = { rotateAngle: object_2.wrapper.rotateAngle };\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed', oldValue: oldValue, newValue: newValue, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg)];\n                    case 1:\n                        args1 = _a.sent();\n                        if (args1 && args1.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            this.commandHandler.rotatePropertyChnage(this.tempArgs.oldValue.rotateAngle);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n                            oldValue = { rotateAngle: object.wrapper.rotateAngle };\n                            arg = {\n                                source: args.source, state: 'Completed', oldValue: oldValue,\n                                newValue: oldValue, cancel: false\n                            };\n                            if (!isBlazor())\n                                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n                            obj = void 0;\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            this.commandHandler.addHistoryEntry(entry);\n                            this.commandHandler.updateSelector();\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n            }\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        }\n        if ((!isBlazor() && !arg1.cancel) || (isBlazor() && !this.canCancel)) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.canCancel = false;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.currentElement = args.source;\n            this.initialBounds.x = args.source.wrapper.offsetX;\n            this.initialBounds.y = args.source.wrapper.offsetY;\n            this.initialBounds.height = args.source.wrapper.actualSize.height;\n            this.initialBounds.width = args.source.wrapper.actualSize.width;\n            if (args.source) {\n                oldValues = {\n                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                };\n            }\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValues, newValue: cloneBlazorObject(this.currentElement), cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var obj, oldValues, arg, blazarArgs, scaleWidth, scaleHeight, object, deltaValues, oldValue, arg, obj, entry, entry_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 3];\n                        obj = cloneObject(args.source);\n                        oldValues = {\n                            width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height,\n                            offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY\n                        };\n                        arg = {\n                            oldValue: this.tempArgs.oldValue, newValue: oldValues, cancel: false,\n                            source: cloneBlazorObject(args.source), state: 'Completed'\n                        };\n                        if (!!this.canCancel) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg)];\n                    case 1:\n                        blazarArgs = _a.sent();\n                        if (blazarArgs && blazarArgs.cancel) {\n                            scaleWidth = this.tempArgs.oldValue.width / obj.wrapper.actualSize.width;\n                            scaleHeight = this.tempArgs.oldValue.height / obj.wrapper.actualSize.height;\n                            this.commandHandler.scaleSelectedItems(scaleWidth, scaleHeight, this.getPivot(this.corner));\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.tempArgs = undefined;\n                        this.canCancel = undefined;\n                        _a.label = 3;\n                    case 3:\n                        this.checkPropertyValue();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.updateSelector();\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if ((this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY ||\n                            this.undoElement.width !== object.wrapper.bounds.width || this.undoElement.height !== object.wrapper.bounds.height)) {\n                            if (!isBlazor()) {\n                                deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n                                this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n                                oldValue = {\n                                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: oldValue, newValue: oldValue, cancel: false\n                                };\n                                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n                            }\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            if (!isPreventHistory) {\n                                this.commandHandler.startGroupAction();\n                                this.commandHandler.addHistoryEntry(entry);\n                                if (obj.nodes[0] && obj.nodes[0].processId) {\n                                    entry_2 = {\n                                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                                        undoObject: this.undoParentElement, category: 'Internal'\n                                    };\n                                    this.commandHandler.addHistoryEntry(entry_2);\n                                }\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/, !this.blocked];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            }\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        }\n        if (arg1.cancel || this.canCancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        this.commandHandler.setFocus();\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.commandHandler.updateBlazorSelector();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /** @private */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                _super.prototype.mouseDown.call(this, args);\n                this.inAction = true;\n                this.commandHandler.setFocus();\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        this.commandHandler.enableServerDataBinding(false);\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if ((args.target || (args.actualObject && args.sourceWrapper && checkPort(args.actualObject, args.sourceWrapper)))\n                && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        this.commandHandler.enableServerDataBinding(true);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.commandHandler.enableServerDataBinding(false);\n                this.checkPropertyValue();\n                if (this.drawingObject && this.drawingObject instanceof Connector) {\n                    this.commandHandler.addObjectToDiagram(this.drawingObject);\n                    this.drawingObject = null;\n                }\n                this.commandHandler.updateBlazorSelector();\n                this.inAction = false;\n                this.commandHandler.enableServerDataBinding(true);\n                _super.prototype.mouseUp.call(this, args);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        this.commandHandler.dataBinding();\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updatePanState(false);\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            if (isBlazor() && node.shape.type === 'Basic') {\n                node.shape.basicShape = 'Polygon';\n            }\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                var drawObject = this.drawingObject;\n                drawObject.segments[drawObject.segments.length - 1].point = { x: 0, y: 0 };\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            this.commandHandler.enableServerDataBinding(false);\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n            this.commandHandler.enableServerDataBinding(true);\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction, DiagramConstraints } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject, checkPort } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints, RealAction } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.keyArgs = {};\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if ((currentAction === this.diagram.selectedItems.userHandles[i].name) ||\n                    (eventName === DiagramEvent.onUserHandleMouseUp && currentAction === 'Select')) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    if (eventName === DiagramEvent.onUserHandleMouseDown) {\n                        this.userHandleObject = this.diagram.selectedItems.userHandles[i].name;\n                    }\n                    var element = document.getElementById(this.diagram.selectedItems.userHandles[i].name + '_userhandle');\n                    if (eventName === DiagramEvent.onUserHandleMouseUp) {\n                        if (this.commandHandler.isUserHandle(this.currentPosition)\n                            && element && element.id === this.userHandleObject + '_userhandle') {\n                            this.diagram.triggerEvent(eventName, arg);\n                        }\n                    }\n                    else {\n                        this.diagram.triggerEvent(eventName, arg);\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.diagram.selectedItems);\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject),\n                    button: (evt.button === 0) ? 'Left' : (evt.button === 1) ? 'Middle' : 'Right'\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, this.currentPosition);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                            }\n                            this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            if (canResetElement) {\n                                this.elementEnter(this.currentPosition, false);\n                            }\n                            else {\n                                this.hoverElement = obj;\n                            }\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    var padding = this.getConnectorPadding(this.eventArgs);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source, padding);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    var padding = this.getConnectorPadding(this.eventArgs);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source, padding);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                        if (this.diagram.checkMenu && (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.diagram.contextMenuModule.contextMenu.open(evt.pageY, evt.pageX, this.diagram.element);\n                            this.diagram.checkMenu = false;\n                        }\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.eventArgs.clickCount !== 2) {\n                    this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                }\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            var disbleRenderSelector = false;\n            if (this.commandHandler.isUserHandle(this.currentPosition)) {\n                if (this.isForeignObject(evt.target)) {\n                    disbleRenderSelector = true;\n                }\n            }\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0 && !disbleRenderSelector) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject),\n                    button: (evt.button === 0) ? 'Left' : (evt.button === 1) ? 'Middle' : 'Right'\n                };\n                if (isBlazor() && this.diagram.click) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getConnectorPadding = function (eventArgs) {\n        var padding;\n        var targetObject = eventArgs.source;\n        if (targetObject && (targetObject instanceof Selector) && targetObject.connectors.length) {\n            var selectedConnector = targetObject.connectors[0];\n            padding = (selectedConnector.constraints & ConnectorConstraints.ConnectToNearByPort) ? selectedConnector.connectionPadding : 0;\n        }\n        return padding || 0;\n    };\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            button: arg.button\n        };\n        if (this.eventArgs.source instanceof Node) {\n            arg.element.selector.nodes = [];\n            arg.element.selector.nodes.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        else if (this.eventArgs.source instanceof Connector) {\n            arg.element.selector.connectors = [];\n            arg.element.selector.connectors.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height, addInfo: selectedNode.addInfo,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.elementLeave();\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        this.diagram.blazorActions = BlazorAction.interaction;\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n        this.diagram.blazorActions = this.diagram.blazorActions & ~BlazorAction.interaction;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var inAction = 'inAction';\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (isBlazor() || (canExecute &&\n                                canExecute({\n                                    'keyDownEventArgs': KeyboardEvent,\n                                    parameter: command.parameter\n                                }))) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                    else if (this.inAction && this.diagram.drawingObject && this.tool && this.tool[inAction]) {\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.tool = null;\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    if (this.diagram.tool !== DiagramTools.ZoomPan) {\n                                        // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                        //     command.execute()\n                                        // } else {\n                                        var execute = getFunction(command.execute);\n                                        execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    }\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        var selectedObject = (this.diagram.selectedItems.nodes.length) ?\n            this.diagram.selectedItems.nodes : this.diagram.selectedItems.connectors;\n        this.keyArgs = {\n            element: cloneBlazorObject(this.diagram.selectedItems),\n            key: evt.key, keyCode: evt.keyCode ? evt.keyCode : evt.which,\n        };\n        this.getKeyModifier(this.keyArgs, evt);\n        if ((this.diagram.diagramActions & DiagramAction.TextEdit)) {\n            this.getlabel(this.keyArgs, evt);\n        }\n        this.diagram.triggerEvent(DiagramEvent.keyDown, this.keyArgs);\n    };\n    DiagramEventHandler.prototype.getlabel = function (args, evt) {\n        var label = this.diagram.activeLabel;\n        args.target = this.diagram.element.id + '_editBox';\n        var node = this.diagram.nameTable[label.parentId];\n        if (document.getElementById(this.diagram.element.id + '_editBox')) {\n            args.text = document.getElementById(this.diagram.element.id + '_editBox').value;\n            for (var i = 0; i < node.annotations.length; i++) {\n                if (node.annotations[i].id === label.id) {\n                    args.label = node.annotations[i];\n                    break;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getKeyModifier = function (args, evt) {\n        args.keyModifiers = KeyModifiers.None;\n        if (evt.ctrlKey) {\n            args.keyModifiers |= KeyModifiers.Control;\n        }\n        if (evt.shiftKey) {\n            args.keyModifiers |= KeyModifiers.Shift;\n        }\n        if (evt.altKey) {\n            args.keyModifiers |= KeyModifiers.Alt;\n        }\n        if (this.isMetaKey(evt)) {\n            args.keyModifiers |= KeyModifiers.Meta;\n        }\n    };\n    DiagramEventHandler.prototype.keyUp = function (evt) {\n        this.keyArgs = {\n            element: cloneBlazorObject(this.diagram.selectedItems), key: evt.key, keyCode: evt.keyCode ? evt.keyCode : evt.which,\n        };\n        var selectedObject = (this.diagram.selectedItems.nodes.length) ?\n            this.diagram.selectedItems.nodes : this.diagram.selectedItems.connectors;\n        this.getKeyModifier(this.keyArgs, evt);\n        if ((this.diagram.diagramActions & DiagramAction.TextEdit)) {\n            this.getlabel(this.keyArgs, evt);\n        }\n        this.diagram.triggerEvent(DiagramEvent.keyUp, this.keyArgs);\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: {}\n        };\n        if (!isBlazor()) {\n            arg = {\n                targets: cloneBlazorObject(target),\n                element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n                actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n            };\n        }\n        if (isBlazor() && (this.diagram.mouseEnter || this.diagram.mouseOver)) {\n            arg.actualObject = getObjectType(this.eventArgs.actualObject) === Connector ? {\n                connector: cloneBlazorObject(this.eventArgs.actualObject)\n            }\n                : {\n                    node: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && this.diagram.mouseLeave\n            && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            if (this.eventArgs.actualObject !== undefined) {\n                this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n            }\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.wrapper.children[1].id.split('_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                var selector = void 0;\n                if (obj instanceof Node) {\n                    selector = { nodes: [cloneBlazorObject(obj)] };\n                }\n                else if (obj instanceof Connector) {\n                    selector = { connectors: [cloneBlazorObject(obj)] };\n                }\n                else {\n                    selector = cloneBlazorObject(obj);\n                }\n                arg = {\n                    source: obj ? { selector: selector } : { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || (node && node.shape.type === 'SwimLane')) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source, padding) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition, padding);\n            var currentConnector = void 0;\n            var nearNode = void 0;\n            var i = void 0;\n            if ((wrapper && obj.ports && obj.ports.length && !checkPort(obj, wrapper) || !wrapper ||\n                !obj) && objects && objects.length && (source instanceof Selector)) {\n                currentConnector = source.connectors[0];\n                for (i = objects.length - 1; i >= 0; i--) {\n                    nearNode = objects[i];\n                    if ((nearNode instanceof Node) && currentConnector && currentConnector.connectionPadding) {\n                        obj = nearNode;\n                        wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition, padding);\n                        if (((currentConnector.constraints & ConnectorConstraints.ConnectToNearByPort) && obj &&\n                            obj.ports && obj.ports.length && checkPort(obj, wrapper))) {\n                            break;\n                        }\n                        if ((nearNode instanceof Node) && currentConnector && currentConnector.connectionPadding\n                            && nearNode.wrapper.outerBounds.containsPoint(this.currentPosition) &&\n                            (currentConnector.constraints & ConnectorConstraints.ConnectToNearByNode) &&\n                            !(currentConnector.constraints & ConnectorConstraints.ConnectToNearByPort)) {\n                            obj = nearNode;\n                            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition, 0);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var basicShape = 'basicShape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && (this.diagram.drawingObject.shape[shape] === 'Polygon' ||\n                    (isBlazor() && this.diagram.drawingObject.shape[basicShape] === 'Polygon')) &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position, padding);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        if (parentNode && parentNode.isLane && (obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                            var swimlane = this.diagram.getObject(parentNode.parentId);\n                            var laneId = swimlane.id + swimlane.shape.lanes[0].id + '0';\n                            var firstlane = this.diagram.getObject(laneId);\n                            var x = firstlane.wrapper.bounds.x;\n                            var y = firstlane.wrapper.bounds.y;\n                            var width = swimlane.wrapper.bounds.bottomRight.x - x;\n                            var height = swimlane.wrapper.bounds.bottomRight.y - y;\n                            var swimlaneBounds = new Rect(x, y, width, height);\n                            if (swimlaneBounds.containsPoint(this.currentPosition)) {\n                                obj.offsetX = helperObject.offsetX;\n                                obj.offsetY = helperObject.offsetY;\n                                obj.width = helperObject.width;\n                                obj.height = helperObject.height;\n                                obj.rotateAngle = helperObject.rotateAngle;\n                            }\n                        }\n                        else {\n                            obj.offsetX = helperObject.offsetX;\n                            obj.offsetY = helperObject.offsetY;\n                            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                                if (obj.shape.type !== 'Bpmn' ||\n                                    (obj.shape.type === 'Bpmn' && obj.shape.shape !== 'TextAnnotation')) {\n                                    obj.width = helperObject.width;\n                                    obj.height = helperObject.height;\n                                }\n                            }\n                            obj.rotateAngle = helperObject.rotateAngle;\n                        }\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if ((this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting))\n                        && (!checkParentAsContainer(this.diagram, obj, true))) {\n                        if (obj.children) {\n                            this.diagram.realActions |= RealAction.EnableGroupAction;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: obj.width, height: obj.height,\n                            offsetX: obj.offsetX, offsetY: obj.offsetY\n                        });\n                        if (obj.children) {\n                            this.diagram.realActions &= ~RealAction.EnableGroupAction;\n                        }\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                this.diagram.enableServerDataBinding(false);\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: {\n                        fill: node.style.fill,\n                        strokeColor: (node.style.strokeColor === 'black') ? '#ffffff00' : node.style.strokeColor\n                    },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.enableServerDataBinding(true);\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var endPadding = (source && (source instanceof Connector) &&\n            ((source.constraints & ConnectorConstraints.ConnectToNearByNode) ||\n                (source.constraints & ConnectorConstraints.ConnectToNearByPort)) && source.connectionPadding) || 0;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50 - endPadding, pt.y - 50 - endPadding, 100 + endPadding, 100 + endPadding));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point, endPadding);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point, endPadding)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, endPadding || padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var endPoint = 'endPoint';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    var tool = diagram[eventHandler].tool;\n                    var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                    if (action === 'Draw' && portElement && (objects[i] instanceof Node) && !checkPort(objects[i], portElement)) {\n                        if (((tool && tool[endPoint] === 'ConnectorSourceEnd') && !canOutConnect(objects[i])) ||\n                            ((tool && tool[endPoint] === 'ConnectorTargetEnd') && !canInConnect(objects[i]))) {\n                            return actualTarget;\n                        }\n                    }\n                    if (objects[i] instanceof Node && ((canOutConnect(objects[i]) || (canPortOutConnect(outPort)) || canInConnect(objects[i]) || (canPortInConnect(inPort))) ||\n                        (action === 'PortDraw' && (tool instanceof ConnectTool) && tool[endPoint] == 'ConnectorTargetEnd' &&\n                            (canInConnect(objects[i]) || (canPortInConnect(inPort)))))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if ((action === 'Select' || action === 'Pan') && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        var objj1 = objects[i - 1];\n                        if (objects[i - 1] instanceof Node && objj1.ports) {\n                            var portElement_1 = this.findTargetElement(objj1.wrapper, position, undefined);\n                            if ((portElement_1 && (portElement_1.id.match('_icon_content_shape$') || portElement_1.id.match('_icon_content_rect$')))) {\n                                return objj1;\n                            }\n                            for (var j = 0; j < objj1.ports.length; j++) {\n                                if (portElement_1 && portElement_1.id.match('_' + objj1.ports[j].id + '$')) {\n                                    if (canDraw(objj1.ports[j], diagram)) {\n                                        return objj1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node || objects[i] instanceof Connector) {\n                        var portElement_2 = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'Pan') || ((portElement_2 && (portElement_2.id.match('_icon_content_shape$') || portElement_2.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position, padding) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position, padding);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position, padding || 0)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position, padding || 0)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { Diagram } from '../../diagram/diagram';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction, getIndex } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject, getUserHandlePosition, cloneSelectedObjects } from './../utility/diagram-util';\nimport { updateDefaultValues } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection, contains } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction, RealAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector, canShowCorner } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, canLaneInterchange, findLane } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        // private newNodeObject: Object[] = [];\n        // private newConnectorObject: Object[] = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /**   @private  */\n        this.newSelectedObjects = {};\n        /**   @private  */\n        this.oldSelectedObjects = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /**   @private  */\n        this.deepDiffer = new DeepDiffMapper();\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /** @private */\n    CommandHandler.prototype.setFocus = function () {\n        document.getElementById(this.diagram.element.id).focus();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorValue = function (args) {\n        if (args.cancel) {\n            var newChanges = {};\n            var oldChanges = {};\n            var connector = this.diagram.nameTable[args.connector.id];\n            var nodeEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n            var portEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n            var connectionEnd = args.connectorEnd === 'ConnectorTargetEnd';\n            var newValue = connectionEnd ? args.newValue.connectorTargetValue : args.newValue.connectorSourceValue;\n            var oldValue = connectionEnd ? args.oldValue.connectorTargetValue : args.oldValue.connectorSourceValue;\n            oldChanges[nodeEndId] = newValue.nodeId;\n            oldChanges[portEndId] = newValue.portId;\n            newChanges[nodeEndId] = oldValue.nodeId;\n            newChanges[portEndId] = oldValue.portId;\n            if (args.cancel && args.connectorEnd !== 'ConnectorTargetEnd') {\n                connector.sourceID = oldValue.nodeId;\n                if (args.connector.sourcePortID) {\n                    connector.sourcePortID = oldValue.portId;\n                }\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n            if (args.cancel && args.connectorEnd === 'ConnectorTargetEnd') {\n                if (args.connector.targetPortID) {\n                    connector.targetPortID = oldValue.portId;\n                }\n                connector.targetID = oldValue.nodeId;\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var temparg;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n                            event === DiagramEvent.connectionChange) {\n                            if (this.diagram.currentSymbol) {\n                                return [2 /*return*/];\n                            }\n                            if (event === DiagramEvent.drop) {\n                                args.source = cloneBlazorObject(this.diagram);\n                            }\n                            if (this.diagram.currentDrawingObject && event !== DiagramEvent.positionChange) {\n                                return [2 /*return*/];\n                            }\n                        }\n                        return [4 /*yield*/, this.diagram.triggerEvent(event, args)];\n                    case 1:\n                        temparg = _a.sent();\n                        return [2 /*return*/, temparg];\n                }\n            });\n        });\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var oldChanges = {};\n        var newChanges = {};\n        var returnargs;\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (isBlazor()) {\n                this.diagram.insertValue(cloneObject(connector), false);\n            }\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    returnargs = arg;\n                }\n                if (!checkBlazor) {\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                        returnargs = arg;\n                    }\n                    if (!checkBlazor) {\n                        this.triggerEvent(DiagramEvent.connectionChange, arg);\n                    }\n                }\n            }\n        }\n        return returnargs;\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var connectedNode;\n        if (this.enableCloneObject) {\n            connectedNode = this.diagram.nameTable[newChanges[nodeEndId]];\n            var nodeObject = cloneObject(connectedNode);\n            this.diagram.insertValue(nodeObject, true);\n        }\n        var returnargs;\n        var arg = {\n            cancel: false, state: 'Changing', connectorEnd: endPoint,\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: undefined, newValue: undefined\n            };\n            if (endPoint === 'ConnectorSourceEnd') {\n                arg.oldValue = {\n                    connectorSourceValue: {\n                        portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId]\n                    }\n                };\n                arg.newValue = {\n                    connectorSourceValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId], }\n                };\n            }\n            else {\n                arg.oldValue = {\n                    connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] }\n                };\n                arg.newValue = {\n                    connectorTargetValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n                };\n            }\n            returnargs = arg;\n        }\n        if (!checkBlazor) {\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n        if (arg.cancel || (isBlazor() && canCancel)) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.oldValue = {\n                        connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId], }\n                    };\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n        }\n        if (this.enableCloneObject) {\n            if (connectedNode === undefined) {\n                connectedNode = this.diagram.nameTable[oldChanges[nodeEndId]];\n                var nodeObject = cloneObject(connectedNode);\n                this.diagram.insertValue(nodeObject, true);\n            }\n        }\n        return returnargs;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && ((!isBlazor() && argsTarget.shape.shape === 'Activity') ||\n                (isBlazor() && argsTarget.shape.bpmnShape === 'Activity'))) {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                ((!isBlazor() && args.target.shape.shape !== 'TextAnnotation') ||\n                    (isBlazor() && args.target.shape.bpmnShape !== 'TextAnnotation'))) {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args, canCancel) {\n        var checkBlazor;\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        var returnargs;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget((args.targetWrapper || args.sourceWrapper), (args.target || args.actualObject), endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = (args.target && args.target.id || args.actualObject.id);\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n            if (!checkBlazor) {\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n            if (arg.cancel || (isBlazor() && canCancel)) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: undefined,\n                        connector: cloneBlazorObject(connector),\n                        oldValue: undefined,\n                        cancel: false, state: 'Changing', connectorEnd: endPoint,\n                    };\n                    if (endPoint === 'ConnectorSourceEnd') {\n                        arg.oldValue = {\n                            connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                    else {\n                        arg.oldValue = {\n                            connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                }\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n        return returnargs;\n    };\n    /* tslint:enable */\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    CommandHandler.prototype.UpdateBlazorDiagramModelLayers = function (layer, isRemove) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(layer);\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = {\n                'methodName': 'UpdateBlazorDiagramModelLayers',\n                'diagramobj': JSON.stringify(updatedModel), 'isRemove': isRemove\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects, isServerUpdate) {\n        if (isServerUpdate === void 0) { isServerUpdate = true; }\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        this.diagram.enableServerDataBinding(false);\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        this.diagram.enableServerDataBinding(true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        if (isServerUpdate) {\n            this.UpdateBlazorDiagramModelLayers(layer, false);\n        }\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId, isServerUpdate) {\n        if (isServerUpdate === void 0) { isServerUpdate = true; }\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            if (isServerUpdate) {\n                this.UpdateBlazorDiagramModelLayers(this.diagram.layers[index], true);\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer, null, true);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                if (!selectedItems[j].isPhase) {\n                    var node = clone(this.diagram.selectedItems.nodes[j]);\n                    if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                        node.offsetX = node.wrapper.offsetX;\n                    }\n                    if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                        node.offsetY = node.wrapper.offsetY;\n                    }\n                    var processTable = {};\n                    this.copyProcesses(node);\n                    obj.push(clone(node));\n                    var matrix = identityMatrix();\n                    rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                    if (node.children) {\n                        var childTable = this.clipboardData.childTable;\n                        var tempNode = void 0;\n                        var elements = [];\n                        var nodes = this.getAllDescendants(node, elements, true);\n                        for (var i = 0; i < nodes.length; i++) {\n                            tempNode = this.diagram.nameTable[nodes[i].id];\n                            var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                            var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                            if (tempNode instanceof Node) {\n                                clonedObject.offsetX = newOffset.x;\n                                clonedObject.offsetY = newOffset.y;\n                                clonedObject.rotateAngle -= node.rotateAngle;\n                            }\n                        }\n                        this.clipboardData.childTable = childTable;\n                    }\n                    if (node.shape.type === 'SwimLane') {\n                        var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                        var childTable = this.clipboardData.childTable;\n                        var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                        for (var i = 0; i < connectorsList.length; i++) {\n                            var connector = this.diagram.getObject(connectorsList[i]);\n                            childTable[connector.id] = clone(connector);\n                        }\n                    }\n                    if (node && node.isLane) {\n                        var childTable = this.clipboardData.childTable;\n                        var swimlane = this.diagram.getObject(node.parentId);\n                        var lane = findLane(node, this.diagram);\n                        childTable[node.id] = cloneObject(lane);\n                        childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                    }\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        this.oldSelectedObjects = cloneSelectedObjects(this.diagram);\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n        this.updateBlazorSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0\n                    && (!isBlazor() || isBlazor() && node.annotations[0].content !== '')) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                var copiedObject = [];\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = true;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        copiedObject.push(newObj);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        copiedObject.push(newNode);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = false;\n                    this.diagram.UpdateBlazorDiagramModelCollection(copiedItems[0], copiedObject);\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n            (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var oldProtectPropertyChangeValue;\n        if (isBlazor()) {\n            oldProtectPropertyChangeValue = this.diagram.getProtectPropertyChangeValue();\n            this.diagram.protectPropertyChange(true);\n        }\n        var newObj;\n        var cloneObject;\n        if (obj && obj.shape) {\n            if (obj.shape.type === 'Text') {\n                obj.width = this.diagram.drawingObject.width ? this.diagram.drawingObject.width : 50;\n                obj.height = this.diagram.drawingObject.height ? this.diagram.drawingObject.height : 20;\n            }\n        }\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n        }\n        if (isBlazor()) {\n            updateDefaultValues(newObj, cloneObject, (getObjectType(this.diagram.drawingObject) === Node) ? this.diagram.nodeDefaults : this.diagram.connectorDefaults);\n        }\n        this.diagram.initObject(newObj);\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        if (isBlazor()) {\n            this.diagram.protectPropertyChange(oldProtectPropertyChangeValue);\n        }\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.enableServerDataBinding = function (enable) {\n        this.diagram.enableServerDataBinding(enable);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: arg.state, type: arg.type, cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(this.getSelectedObject(), arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.isUserHandle = function (position) {\n        var handle = this.diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj, this.diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj.size / (2 * this.diagram.scroller.transform.scale))) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        return __awaiter(this, void 0, void 0, function () {\n            var arg, select, canDoMultipleSelection, canDoSingleSelection, i, newObj, i_1, parentNode, blazorArgs, selectedObjects;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        arg = {\n                            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n                            newValue: obj, cause: this.diagram.diagramActions,\n                            state: 'Changing', type: 'Addition', cancel: false\n                        };\n                        this.diagram.enableServerDataBinding(false);\n                        select = true;\n                        if (!isBlazor()) {\n                            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        }\n                        else {\n                            this.oldSelectedObjects = cloneSelectedObjects(this.diagram);\n                        }\n                        canDoMultipleSelection = canMultiSelect(this.diagram);\n                        canDoSingleSelection = canSingleSelect(this.diagram);\n                        if (canDoSingleSelection || canDoMultipleSelection) {\n                            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                                if (obj.length === 1) {\n                                    this.clearSelection();\n                                }\n                                else {\n                                    return [2 /*return*/];\n                                }\n                            }\n                            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                                this.clearSelection();\n                                return [2 /*return*/];\n                            }\n                        }\n                        if (!!arg.cancel) return [3 /*break*/, 4];\n                        for (i = 0; i < obj.length; i++) {\n                            newObj = obj[i];\n                            if (newObj) {\n                                select = true;\n                                if (!hasSelection(this.diagram)) {\n                                    this.select(newObj, i > 0 || multipleSelection, true);\n                                }\n                                else {\n                                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                                        for (i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                                            parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                                            if (parentNode) {\n                                                parentNode = this.findParent(parentNode);\n                                                if (parentNode) {\n                                                    if (newObj.id === parentNode.id) {\n                                                        this.selectGroup(newObj);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    this.selectProcesses(newObj);\n                                    select = this.selectBpmnSubProcesses(newObj);\n                                    if (select) {\n                                        this.select(newObj, i > 0 || multipleSelection, true);\n                                    }\n                                }\n                            }\n                        }\n                        arg = {\n                            oldValue: oldValue ? oldValue : [],\n                            newValue: this.getSelectedObject(),\n                            cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n                        };\n                        this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n                        this.updateBlazorSelectorModel(oldValue);\n                        if (isBlazor() && this.diagram.selectionChange) {\n                            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n                            this.updateBlazorSelector();\n                        }\n                        if (!!isBlazor()) return [3 /*break*/, 1];\n                        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.diagram.triggerEvent(DiagramEvent.selectionChange, arg)];\n                    case 2:\n                        blazorArgs = _a.sent();\n                        if (blazorArgs && blazorArgs.cancel) {\n                            selectedObjects = [];\n                            if (blazorArgs.oldValue.nodes.length > 0) {\n                                selectedObjects = blazorArgs.oldValue.nodes;\n                            }\n                            if (blazorArgs.oldValue.connectors.length > 0) {\n                                selectedObjects = selectedObjects.concat(blazorArgs.oldValue.connectors);\n                            }\n                            if (selectedObjects) {\n                                if (selectedObjects.length > 0) {\n                                    this.diagram.select(selectedObjects);\n                                }\n                                else {\n                                    this.clearSelection(true, true);\n                                }\n                            }\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this.diagram.enableServerDataBinding(true);\n                        this.updateBlazorSelector();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /** @private */\n    CommandHandler.prototype.updateBlazorSelector = function () {\n        if (isBlazor()) {\n            this.newSelectedObjects = cloneSelectedObjects(this.diagram);\n            var result = this.deepDiffer.map(cloneObject(this.newSelectedObjects), this.oldSelectedObjects);\n            var diffValue = this.deepDiffer.frameObject({}, result);\n            var diff = this.deepDiffer.removeEmptyValues(diffValue);\n            diff.nodes = [];\n            for (var i = 0; i < this.diagram.selectedItems.nodes.length; i++) {\n                diff.nodes.push(this.diagram.selectedItems.nodes[i].id);\n            }\n            diff.connectors = [];\n            for (var i = 0; i < this.diagram.selectedItems.connectors.length; i++) {\n                diff.connectors.push(this.diagram.selectedItems.connectors[i].id);\n            }\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': { selectedItems: diff } };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            this.diagram.enableServerDataBinding(false);\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n            this.diagram.enableServerDataBinding(true);\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var blazorInterop = 'sfBlazor';\n        if (window && window[blazorInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[blazorInterop].updateDiagramCollection) {\n                window[blazorInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        this.oldSelectedObjects = cloneSelectedObjects(this.diagram);\n        var selectorModel = (this.diagram.selectedItems);\n        var isEnableServerDatabind = this.diagram.allowServerDataBinding;\n        this.diagram.allowServerDataBinding = false;\n        selectorModel.nodes = selectorModel.connectors = [];\n        this.diagram.allowServerDataBinding = isEnableServerDatabind;\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n        this.updateBlazorSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (!isBlazor()) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    if (isBlazor()) {\n                        arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                        this.updateBlazorSelector();\n                    }\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function (object) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || object) {\n            var objectId = (object && object.id);\n            objectId = objectId || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var undoObject = cloneObject(this.diagram.selectedItems);\n            //Checks whether the selected node is the only node in the node array.\n            //Checks whether it is not a group and the nodes behind it are not it’s children.\n            if (this.diagram.nodes.length !== 1 && (this.diagram.nameTable[objectId].children === undefined ||\n                this.checkObjectBehind(objectId, zIndexTable, index))) {\n                for (var i = index; i > 0; i--) {\n                    if (zIndexTable[i]) {\n                        //When there are empty records in the zindex table\n                        if (!zIndexTable[i - 1]) {\n                            zIndexTable[i - 1] = zIndexTable[i];\n                            this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                            delete zIndexTable[i];\n                        }\n                        else {\n                            //bringing the objects forward\n                            zIndexTable[i] = zIndexTable[i - 1];\n                            this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                        }\n                    }\n                }\n                zIndexTable[0] = this.diagram.nameTable[objectId].id;\n                this.diagram.nameTable[objectId].zIndex = 0;\n                if (this.diagram.mode === 'SVG') {\n                    var i = 1;\n                    var target = zIndexTable[i];\n                    while (!target && i < index) {\n                        target = zIndexTable[++i];\n                    }\n                    this.moveSvgNode(objectId, target);\n                    this.updateNativeNodeIndex(objectId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n                var redoObject = cloneObject(this.diagram.selectedItems);\n                var entry = { type: 'SendToBack', category: 'Internal', undoObject: undoObject, redoObject: redoObject };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.addHistoryEntry(entry);\n                }\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    //Checks whether the selected node is not a parent of another node.\n    CommandHandler.prototype.checkObjectBehind = function (objectId, zIndexTable, index) {\n        for (var i = 0; i < index; i++) {\n            var z = zIndexTable[i];\n            if (objectId !== this.diagram.nameTable[z].parentId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function (obj) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || obj) {\n            var objectName = (obj && obj.id);\n            objectName = objectName || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var undoObject = cloneObject(this.diagram.selectedItems);\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if ((layer.objects[i] !== objectName) && (this.diagram.nameTable[layer.objects[i]].parentId) !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n            var redoObject = cloneObject(this.diagram.selectedItems);\n            var entry = { type: 'BringToFront', category: 'Internal', undoObject: undoObject, redoObject: redoObject };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.orderCommands = function (isRedo, selector, action) {\n        var selectedObject = selector.nodes;\n        selectedObject = selectedObject.concat(selector.connectors);\n        if (isRedo) {\n            if (action === 'SendBackward') {\n                this.sendBackward(selectedObject[0]);\n            }\n            else if (action === 'SendForward') {\n                this.sendForward(selectedObject[0]);\n            }\n            else if (action === 'BringToFront') {\n                this.bringToFront(selectedObject[0]);\n            }\n            else if (action === 'SendToBack') {\n                this.sendToBack(selectedObject[0]);\n            }\n        }\n        else {\n            var startZIndex = selectedObject[0].zIndex;\n            var endZIndex = this.diagram.nameTable[selectedObject[0].id].zIndex;\n            var undoObject = selectedObject[0];\n            var layer = this.getObjectLayer(undoObject.id);\n            var layerIndex = layer.zIndex;\n            var zIndexTable = layer.zIndexTable;\n            if (action === 'SendBackward' || action === 'SendForward') {\n                for (var i = 0; i < selectedObject.length; i++) {\n                    var undoObject_1 = selectedObject[i];\n                    var layer_2 = this.diagram.layers.indexOf(this.getObjectLayer(undoObject_1.id));\n                    var node = this.diagram.nameTable[selectedObject[i].id];\n                    node.zIndex = undoObject_1.zIndex;\n                    this.diagram.layers[layer_2].zIndexTable[undoObject_1.zIndex] = undoObject_1.id;\n                }\n            }\n            else if (action === 'BringToFront') {\n                var k = 1;\n                for (var j = endZIndex; j > startZIndex; j--) {\n                    if (zIndexTable[j]) {\n                        if (!zIndexTable[j - k]) {\n                            zIndexTable[j - k] = zIndexTable[j];\n                            this.diagram.nameTable[zIndexTable[j - k]].zIndex = j;\n                            delete zIndexTable[j];\n                        }\n                        else {\n                            zIndexTable[j] = zIndexTable[j - k];\n                            this.diagram.nameTable[zIndexTable[j]].zIndex = j;\n                        }\n                    }\n                }\n            }\n            else if (action === 'SendToBack') {\n                for (var j = endZIndex; j < startZIndex; j++) {\n                    if (zIndexTable[j]) {\n                        if (!zIndexTable[j + 1]) {\n                            zIndexTable[j + 1] = zIndexTable[j];\n                            this.diagram.nameTable[zIndexTable[j + 1]].zIndex = j;\n                            delete zIndexTable[j];\n                        }\n                        else {\n                            zIndexTable[j] = zIndexTable[j + 1];\n                            this.diagram.nameTable[zIndexTable[j]].zIndex = j;\n                        }\n                    }\n                }\n            }\n            if (action === 'BringToFront' || action === 'SendToBack') {\n                var node = this.diagram.nameTable[selectedObject[0].id];\n                node.zIndex = undoObject.zIndex;\n                this.diagram.layers[layerIndex].zIndexTable[undoObject.zIndex] = undoObject.id;\n            }\n            if (this.diagram.mode === 'SVG') {\n                if (action === 'SendBackward') {\n                    this.moveObject(selectedObject[1].id, selectedObject[0].id);\n                }\n                else if (action === 'SendForward') {\n                    this.moveObject(selectedObject[0].id, selectedObject[1].id);\n                }\n                else if (action === 'BringToFront') {\n                    this.moveObject(selectedObject[0].id, zIndexTable[selectedObject[0].zIndex + 1]);\n                }\n                else if (action === 'SendToBack') {\n                    var layer_3 = this.getObjectLayer(selectedObject[0].id);\n                    for (var i = 0; i <= selectedObject[0].zIndex; i++) {\n                        if (layer_3.objects[i] !== selectedObject[0].id) {\n                            this.moveSvgNode(layer_3.objects[i], selectedObject[0].id);\n                            this.updateNativeNodeIndex(selectedObject[0].id);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    CommandHandler.prototype.moveObject = function (sourceId, targetId) {\n        if (targetId) {\n            this.moveSvgNode(sourceId, targetId);\n            this.updateNativeNodeIndex(sourceId, targetId);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function (obj) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || obj) {\n            var nodeId = (obj && obj.id);\n            nodeId = nodeId || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                var undoObject = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_2] instanceof Node) ? undoObject.nodes.push(cloneObject(this.diagram.nameTable[temp_2])) :\n                    undoObject.connectors.push(cloneObject(this.diagram.nameTable[temp_2]));\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n                var redo = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_2] instanceof Node) ? redo.nodes.push(cloneObject(this.diagram.nameTable[temp_2])) :\n                    redo.connectors.push(cloneObject(this.diagram.nameTable[temp_2]));\n                var historyEntry = {\n                    type: 'SendForward', category: 'Internal',\n                    undoObject: undoObject, redoObject: redo\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.addHistoryEntry(historyEntry);\n                }\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function (obj) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || obj) {\n            var objectId = (obj && obj.id);\n            objectId = objectId || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                var undoObject = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_4] instanceof Node) ? undoObject.nodes.push(cloneObject(this.diagram.nameTable[temp_4])) :\n                    undoObject.connectors.push(cloneObject(this.diagram.nameTable[temp_4]));\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    if (!(node.children && node.children.length > 0)) {\n                        this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                        this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    }\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n                var redoObject = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_4] instanceof Node) ? redoObject.nodes.push(cloneObject(this.diagram.nameTable[temp_4])) :\n                    redoObject.connectors.push(cloneObject(this.diagram.nameTable[temp_4]));\n                var entry = { type: 'SendBackward', category: 'Internal', undoObject: undoObject, redoObject: redoObject };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.addHistoryEntry(entry);\n                }\n                //swap the nodes\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateBlazorProperties = function (isObjectInteraction) {\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (!isObjectInteraction) {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        else {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.deepDiffer.diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        this.diagram.enableServerDataBinding(true);\n        this.deepDiffer.newNodeObject = [];\n        this.deepDiffer.newConnectorObject = [];\n        this.diagramObject = [];\n        this.diagram.oldNodeObjects = [];\n        this.diagram.oldConnectorObjects = [];\n    };\n    /**   @private  */\n    CommandHandler.prototype.enableCloneObject = function (value) {\n        this.diagram.canEnableBlazorObject = value;\n    };\n    /**   @private  */\n    CommandHandler.prototype.ismouseEvents = function (value) {\n        if (value) {\n            this.diagram.blazorActions = BlazorAction.interaction;\n        }\n        else {\n            this.diagram.blazorActions = ~BlazorAction.interaction;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateLayerObject = function (oldDiagram, temp) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers = this.deepDiffer.getLayerObject(oldDiagram, temp, this.diagram);\n            this.diagramObject = diffLayers;\n            this.updateBlazorProperties();\n        }\n    };\n    /* tslint:enable:no-string-literal */\n    /** @private */\n    CommandHandler.prototype.getDiagramOldValues = function (oldDiagram, attribute) {\n        var newDiagram = {};\n        for (var i = 0; i < attribute.length; i++) {\n            newDiagram[attribute[i]] = cloneObject(this.diagram[attribute[i]]);\n        }\n        var newObject = cloneObject(newDiagram);\n        var result = this.deepDiffer.map(newObject, oldDiagram);\n        var diffValue = this.deepDiffer.frameObject({}, result);\n        var diff = this.deepDiffer.removeEmptyValues(diffValue);\n        diff = this.deepDiffer.changeSegments(diff, newObject);\n        this.diagramObject = diff;\n        this.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    /** @private */\n    CommandHandler.prototype.getBlazorOldValues = function (args, labelDrag) {\n        if (isBlazor()) {\n            var oldNodeObject = this.diagram.oldNodeObjects;\n            for (var i = 0; i < oldNodeObject.length; i++) {\n                if (oldNodeObject[i].id) {\n                    if (this.diagram.oldNodeObjects[i] instanceof Node) {\n                        this.diagram.oldNodeObjects[i] = cloneBlazorObject(this.diagram.oldNodeObjects[i]);\n                    }\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldNodeObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            var oldConnectorObject = this.diagram.oldConnectorObjects;\n            for (var i = 0; i < oldConnectorObject.length; i++) {\n                if (oldConnectorObject[i].id) {\n                    if (this.diagram.oldConnectorObjects[i] instanceof Connector) {\n                        this.diagram.oldConnectorObjects[i] = cloneBlazorObject(this.diagram.oldConnectorObjects[i]);\n                    }\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldConnectorObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            if (oldNodeObject.length > 0 || oldConnectorObject.length > 0) {\n                this.updateBlazorProperties(true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectChanges = function (previousObject, currentObject, changedNodes) {\n        for (var i = 0; i < previousObject.length; i++) {\n            var value = this.deepDiffer.map(currentObject[i], previousObject[i]);\n            var result = this.deepDiffer.frameObject({}, value);\n            var change = this.deepDiffer.removeEmptyValues(result);\n            if (change.children) {\n                change.children = cloneObject(currentObject[i]).children;\n            }\n            change = this.deepDiffer.changeSegments(change, currentObject[i]);\n            change.sfIndex = getIndex(this.diagram, currentObject[i].id);\n            changedNodes.push(change);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction, isTriggered) {\n        return __awaiter(this, void 0, void 0, function () {\n            var enableServerDataBinding, selectormodel, arrayNodes, arg, blazarArgs, selectNodes;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        enableServerDataBinding = this.diagram.allowServerDataBinding;\n                        this.diagram.enableServerDataBinding(false);\n                        if (!hasSelection(this.diagram)) return [3 /*break*/, 4];\n                        selectormodel = this.diagram.selectedItems;\n                        arrayNodes = this.getSelectedObject();\n                        if (this.diagram.currentSymbol) {\n                            this.diagram.previousSelectedObject = arrayNodes;\n                        }\n                        arg = {\n                            oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                            state: 'Changing', type: 'Removal', cancel: false\n                        };\n                        this.updateBlazorSelectorModel(arrayNodes, true);\n                        if (triggerAction) {\n                            if (!isBlazor()) {\n                                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                            }\n                            else {\n                                this.oldSelectedObjects = cloneObject(selectormodel);\n                            }\n                        }\n                        if (!!arg.cancel) return [3 /*break*/, 3];\n                        selectormodel.offsetX = 0;\n                        selectormodel.offsetY = 0;\n                        selectormodel.width = 0;\n                        selectormodel.height = 0;\n                        selectormodel.rotateAngle = 0;\n                        selectormodel.nodes = [];\n                        selectormodel.connectors = [];\n                        selectormodel.wrapper = null;\n                        selectormodel.annotation = undefined;\n                        this.diagram.clearSelectorLayer();\n                        if (!triggerAction) return [3 /*break*/, 3];\n                        arg = {\n                            oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (isBlazor()) {\n                            arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                            this.updateBlazorSelector();\n                        }\n                        if (!!isBlazor()) return [3 /*break*/, 1];\n                        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.diagram.triggerEvent(DiagramEvent.selectionChange, arg)];\n                    case 2:\n                        blazarArgs = _a.sent();\n                        if (blazarArgs && blazarArgs.cancel && !isTriggered) {\n                            selectNodes = [];\n                            if (blazarArgs.oldValue.nodes.length > 0) {\n                                selectNodes = blazarArgs.oldValue.nodes;\n                            }\n                            if (blazarArgs.oldValue.connectors.length > 0) {\n                                selectNodes = selectNodes.concat(blazarArgs.oldValue.connectors);\n                            }\n                            if (selectNodes) {\n                                this.diagram.select(selectNodes);\n                            }\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this.updateBlazorSelector();\n                        this.diagram.enableServerDataBinding(enableServerDataBinding);\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                        this.diagram.parentObject = target;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                if ((source.isLane && canLaneInterchange(source, this.diagram)) || !source.isLane) {\n                    canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n                }\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    if (!(checkParentAsContainer(this.diagram, obj, true))) {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.isGroupDragging;\n                    }\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.isGroupDragging;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, (actualObject.parentId &&\n                                    (this.diagram.diagramActions & DiagramAction.isGroupDragging)) ? false : true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        if (!(this.diagram.realActions & RealAction.AnimationClick)) {\n            this.diagram.refreshCanvasLayers();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        if (!(this.diagram.realActions & RealAction.AnimationClick)) {\n            this.diagram.refreshCanvasLayers();\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotatePropertyChnage = function (angle) {\n        var selectedItems = this.diagram.selectedItems;\n        var objects = [];\n        objects = objects.concat(selectedItems.nodes);\n        objects = objects.concat(selectedItems.connectors);\n        var pivotValue = { x: selectedItems.offsetX, y: selectedItems.offsetY };\n        this.rotateObjects(selectedItems, objects, angle - selectedItems.rotateAngle, pivotValue);\n        selectedItems.wrapper.rotateAngle = selectedItems.rotateAngle = angle;\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject, isOutsideBoundary) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints && isOutsideBoundary) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot, undefined, true);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.diagramActions = this.diagram.diagramActions | (DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            var actualObject = this.diagram.selectedObject.actualObject;\n            if ((actualObject && actualObject instanceof Node && actualObject.isLane &&\n                canLaneInterchange(actualObject, this.diagram)) || (!actualObject || !actualObject.isLane)) {\n                this.diagram.drag(obj, tx, ty);\n            }\n            this.diagram.diagramActions = this.diagram.diagramActions & ~(DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        for (var _i = 0, _a = this.diagram.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.diagram.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.diagram.refreshCanvasDiagramLayer(view);\n            }\n        }\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.blazorActions = BlazorAction.expandNode;\n        objects = this.diagram.doLayout();\n        this.diagram.blazorActions = BlazorAction.Default;\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.diagram.allowServerDataBinding = false;\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n            this.diagram.allowServerDataBinding = true;\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n            if (this.diagram.lineRoutingModule && this.diagram.constraints & DiagramConstraints.LineRouting) {\n                this.diagram.resetSegments();\n            }\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var previousNodeObject = [];\n            var previousConnectorObject = [];\n            var updateNodeObject = [];\n            var updateConnectorObject = [];\n            var changeNodes = [];\n            var changeConnectors = [];\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                if (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length > 0) {\n                    this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                }\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    if (actualObject.offsetX !== actualObject.wrapper.offsetX || actualObject.offsetY !== actualObject.wrapper.offsetY ||\n                        actualObject.width !== actualObject.wrapper.width || actualObject.height !== actualObject.wrapper.height ||\n                        actualObject.rotateAngle !== actualObject.wrapper.rotateAngle) {\n                        if (isBlazor()) {\n                            previousNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                        }\n                        actualObject.offsetX += offsetX;\n                        actualObject.offsetY += offsetY;\n                        actualObject.width += width;\n                        actualObject.height += height;\n                        actualObject.rotateAngle += rotateAngle;\n                        this.diagram.nodePropertyChange(actualObject, {}, {\n                            offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                            width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                        });\n                        if (isBlazor()) {\n                            updateNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                        }\n                    }\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector && connector.type === 'Orthogonal') {\n                    if (isBlazor()) {\n                        previousConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                    if (isBlazor()) {\n                        updateConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                }\n            }\n            this.updateSelector();\n            if (isBlazor()) {\n                this.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n                this.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var blazorInterop = 'sfBlazor';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n                if (window && window[blazor] && (changeConnectors.length + changeNodes.length)) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n                }\n            }\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation'))) {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /**\n * @private\n */\n    CommandHandler.prototype.updatePanState = function (eventCheck) {\n        if (eventCheck) {\n            this.diagram.realActions = this.diagram.realActions | RealAction.PanInProgress;\n        }\n        else {\n            this.diagram.dataBind();\n            var diagramScrollSettings = this.diagram.scrollSettings;\n            this.diagram.realActions = this.diagram.realActions & ~RealAction.PanInProgress;\n            var Values = {\n                VerticalOffset: diagramScrollSettings.verticalOffset, HorizontalOffset: diagramScrollSettings.horizontalOffset,\n                ViewportHeight: diagramScrollSettings.viewPortHeight, ViewportWidth: diagramScrollSettings.viewPortWidth,\n                CurrentZoom: diagramScrollSettings.currentZoom\n            };\n            var arg = {\n                oldValue: Values,\n                newValue: Values, source: this.diagram, panState: 'Completed'\n            };\n            this.triggerEvent(DiagramEvent.scrollChange, arg);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dataBinding = function () {\n        this.diagram.dataBind();\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && (((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight)) {\n                scale.x = Math.min(this.currentZoom, scale.x);\n                scale.y = Math.min(this.currentZoom, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                var scrollableBounds = this.diagram.scrollSettings.scrollableArea;\n                bounds = new Rect(scrollableBounds.x, scrollableBounds.y, scrollableBounds.width, scrollableBounds.height);\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Represents the diagram settings\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * diagramSettings: { inversedAlignment: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar DiagramSettings = /** @class */ (function (_super) {\n    __extends(DiagramSettings, _super);\n    function DiagramSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], DiagramSettings.prototype, \"inversedAlignment\", void 0);\n    return DiagramSettings;\n}(ChildProperty));\nexport { DiagramSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, cloneSelectedObjects, findObjectIndex } from './utility/diagram-util';\nimport { checkBrowserInfo } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints } from './enum/enum';\nimport { RendererAction } from './enum/enum';\nimport { BlazorAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector, Text } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer, createUserHandleTemplates } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg, getUserHandleLayer } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg, applyStyleAgainstCsp } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit, canMultiSelect } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes, canMeasureDecoratorPath } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\nimport { DiagramSettings } from '../diagram/diagram-settings';\nimport { StackPanel } from './core/containers/stack-panel';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.checkMenu = false;\n        /** @private */\n        _this.isServerUpdate = false;\n        /** @private */\n        _this.oldNodeObjects = [];\n        /** @private */\n        _this.oldDiagramObject = {};\n        /** @private */\n        _this.oldConnectorObjects = [];\n        /** @private */\n        _this.canEnableBlazorObject = false;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.callBlazorModel = true;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.changedConnectorCollection = [];\n        _this.changedNodesCollection = [];\n        _this.previousNodeCollection = [];\n        _this.previousConnectorCollection = [];\n        _this.crudDeleteNodes = [];\n        _this.diagramid = 88123;\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        var blazor = 'Blazor';\n        var canCloneObject = isBlazor() && window && window[blazor] && !_this.dataSourceSettings.dataSource;\n        _this.ignoreCollectionWatch = true;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                if (canCloneObject) {\n                    _this.previousNodeCollection.push(cloneObject(node, undefined, undefined, true));\n                }\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n            _this.updateAnnotationText(node.annotations);\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                if (canCloneObject) {\n                    _this.previousConnectorCollection.push(cloneObject(node, undefined, undefined, true));\n                }\n                updateDefaultValues(node, child, _this.connectorDefaults);\n                _this.updateAnnotationText(node.annotations);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n            if (isBlazor()) {\n                var defaultPropChanges = cloneObject(_this.bulkChanges);\n                _this.enableServerDataBinding(true);\n                _this.protectPropertyChange(true);\n                var keys = Object.keys(defaultPropChanges);\n                for (var i_1 = 0; i_1 < keys.length; i_1++) {\n                    var key = keys[i_1];\n                    var split = key.split('-');\n                    if (split && split[0]) {\n                        if (split[0] === 'nodes') {\n                            defaultPropChanges[key].sfIndex = Number(split[1]);\n                            _this.changedNodesCollection.push(defaultPropChanges[key]);\n                        }\n                        if (split[0] === 'connectors') {\n                            defaultPropChanges[key].sfIndex = Number(split[1]);\n                            _this.changedConnectorCollection.push(defaultPropChanges[key]);\n                        }\n                    }\n                }\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.updateAnnotationText = function (annotations) {\n        if (isBlazor() && annotations.length > 0) {\n            for (var i = 0; annotations && i < annotations.length; i++) {\n                var label = annotations[i];\n                label.content = label.content.split('\\\\n').join('\\n');\n            }\n        }\n    };\n    Diagram.prototype.callFromServer = function (arg) {\n        var methodName = 'methodName';\n        var mId = 'id';\n        if (arg[methodName] === 'getParentID') {\n            var id = arg[mId];\n            return this.nameTable[id].parentId;\n        }\n        else if (arg[methodName] === 'getEdges') {\n            var outEdge = 'outEdge';\n            var isOutEdge = arg[outEdge];\n            var id = arg[mId];\n            if (isOutEdge) {\n                return this.nameTable[id].outEdges;\n            }\n            else {\n                return this.nameTable[id].inEdges;\n            }\n        }\n        else if (arg[methodName] === 'updateDiagramObjects') {\n            var obj = 'obj';\n            var isAdding = 'IsAdding';\n            var args = arg[obj];\n            this.isServerUpdate = true;\n            if (arg[isAdding]) {\n                var add = 'add';\n                this[add].apply(this, args);\n            }\n            else {\n                var remove_1 = 'remove';\n                this[remove_1].apply(this, args);\n            }\n            this.isServerUpdate = false;\n        }\n        else if (arg[methodName] === 'invokeLoadDiagramMethod') {\n            var data = 'data';\n            this.loadDiagram(arg[data]);\n        }\n    };\n    ;\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param {DiagramModel} newProp - Lists the new values of the changed properties\n     * @param {DiagramModel} oldProp - Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        if (this.diagramActions & DiagramAction.Render) {\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'width':\n                    case 'height':\n                        this.element.style.width = this.getSizeValue(this.width);\n                        this.element.style.height = this.getSizeValue(this.height);\n                        this.eventHandler.updateViewPortSize(this.element);\n                        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                            var view = _c[_b];\n                            var temp = this.views[view];\n                            if (!(temp instanceof Diagram)) {\n                                temp.updateView(temp);\n                            }\n                        }\n                        break;\n                    case 'nodes':\n                        if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                            this.clearCollection();\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                                var key = _e[_d];\n                                var index = Number(key);\n                                var actualObject = this.nodes[index];\n                                var changedProp = newProp.nodes[index];\n                                refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                                this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                    newValue: cloneBlazorObject(newProp.nodes[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { node: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                    args.newValue = { node: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'connectors':\n                        var oldObject = void 0;\n                        if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                            this.clearCollection(true);\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                                var key = _g[_f];\n                                var index = Number(key);\n                                var actualObject = this.connectors[index];\n                                var changedProp = newProp.connectors[index];\n                                if (changedProp && (changedProp.sourceDecorator || changedProp.targetDecorator)) {\n                                    this.diagramActions |= DiagramAction.DecoratorPropertyChange;\n                                }\n                                this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                                if (changedProp && (changedProp.sourceDecorator || changedProp.targetDecorator)) {\n                                    this.diagramActions = this.diagramActions & ~DiagramAction.DecoratorPropertyChange;\n                                }\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                    newValue: cloneBlazorObject(newProp.connectors[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { connector: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                    args.newValue = { connector: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                    this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                                }\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            this.updateBridging();\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'bridgeDirection':\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                        break;\n                    case 'backgroundColor':\n                        this.intOffPageBackground();\n                        break;\n                    case 'pageSettings':\n                        this.validatePageSize();\n                        this.updatePage();\n                        break;\n                    case 'selectedItems':\n                        if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                            if (this.selectedItems.userHandles.length > 0) {\n                                this.renderSelector(true);\n                                break;\n                            }\n                        }\n                        if (newProp.selectedItems.constraints) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                        break;\n                    case 'snapSettings':\n                        this.updateSnapSettings(newProp);\n                        break;\n                    case 'commandManager':\n                        this.initCommands();\n                        break;\n                    case 'layout':\n                        refreshLayout = true;\n                        break;\n                    case 'dataSourceSettings':\n                        this.clear();\n                        this.initObjects();\n                        if (this.layout.type === 'None') {\n                            refereshColelction = true;\n                        }\n                        else {\n                            refreshLayout = true;\n                        }\n                        break;\n                    case 'tooltip':\n                        initTooltip(this);\n                        break;\n                    case 'rulerSettings':\n                        this.updateRulerSettings(newProp);\n                        break;\n                    case 'layers':\n                        this.updateLayer(newProp);\n                        break;\n                    case 'scrollSettings':\n                        this.updateScrollSettings(newProp);\n                        break;\n                    case 'locale':\n                        if (newProp.locale !== oldProp.locale) {\n                            this.realActions |= RealAction.PreventDataInit;\n                            _super.prototype.refresh.call(this);\n                            this.realActions &= ~RealAction.PreventDataInit;\n                        }\n                        break;\n                    case 'contextMenuSettings':\n                        if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                            this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                        }\n                        if (newProp.contextMenuSettings.show !== undefined) {\n                            this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                        }\n                        if (newProp.contextMenuSettings.items) {\n                            var items = newProp.contextMenuSettings.items;\n                            for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                                var key = _j[_h];\n                                var index = Number(key);\n                                this.contextMenuSettings.items[index] = items[index];\n                            }\n                        }\n                        break;\n                    case 'serializationSettings':\n                        if (newProp.serializationSettings.preventDefaults !== undefined) {\n                            this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                        }\n                        break;\n                }\n            }\n            if (refreshLayout && !refereshColelction) {\n                this.doLayout();\n            }\n            if (isPropertyChanged && this.propertyChange) {\n                var args = {\n                    element: cloneBlazorObject(this), cause: this.diagramActions,\n                    oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n                };\n                if (isBlazor()) {\n                    args.element = { diagram: cloneBlazorObject(this) };\n                    args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                    args.newValue = { diagram: cloneBlazorObject(newValue) };\n                }\n                this.triggerEvent(DiagramEvent.propertyChange, args);\n            }\n            if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n                var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n                this.addHistoryEntry(entry);\n            }\n            this.resetDiagramActions();\n            if (refereshColelction) {\n                this.initObjects(true);\n                this.refreshDiagramLayer();\n                if (refreshLayout) {\n                    this.doLayout();\n                }\n            }\n            var scrollAlone = ((Object.keys(newProp).length === 1) && newProp.scrollSettings !== undefined);\n            if (!refereshColelction) {\n                for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                    var temp = _l[_k];\n                    var view = this.views[temp];\n                    if (!(view instanceof Diagram)) {\n                        if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                            view.updateHtmlLayer(view);\n                        }\n                        if (!scrollAlone) {\n                            this.refreshCanvasDiagramLayer(view);\n                        }\n                    }\n                }\n            }\n            this.resetTemplate();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines || newProp.snapSettings.gridType) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureWindowElement = 'measureElement';\n        if (window[measureWindowElement]) {\n            window[measureWindowElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-diagram').length;\n            this.element.id = 'diagram_' + this.diagramid + '_' + collection;\n        }\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /* tslint:disable */\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.ignoreCollectionWatch = true;\n        var domTable = 'domTable';\n        window[domTable] = {};\n        var collapsedNode = [];\n        if (isBlazor()) {\n            var changedNodes = [];\n            var changedConnectors = [];\n            for (var i = 0; i < this.changedNodesCollection.length; i++) {\n                changedNodes.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedNodesCollection[i]));\n            }\n            for (var i = 0; i < this.changedConnectorCollection.length; i++) {\n                changedConnectors.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedConnectorCollection[i]));\n            }\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: changedNodes, connectors: changedConnectors };\n            if (window && window[blazor] && !this.dataSourceSettings.dataSource && (changedNodes.length > 0 || changedConnectors.length > 0)) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this);\n            }\n        }\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        var isLayout = false;\n        if (isBlazor() && !this.dataSourceSettings.dataSource && this.layout.type !== \"None\") {\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                this.insertValue(cloneObject(obj), true);\n            }\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                this.insertValue(cloneObject(obj), false);\n            }\n            isLayout = true;\n        }\n        this.doLayout();\n        if (isLayout) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        if (this.lineRoutingModule) {\n            var previousConnectorObject = [];\n            var updateConnectorObject = [];\n            var changeConnectors = [];\n            if (isBlazor()) {\n                for (var _d = 0, _e = this.connectors; _d < _e.length; _d++) {\n                    var obj = _e[_d];\n                    previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n            }\n            this.lineRoutingModule.lineRouting(this);\n            if (isBlazor()) {\n                for (var _f = 0, _g = this.connectors; _f < _g.length; _f++) {\n                    var obj = _g[_f];\n                    updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n                this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var blazorInterop = 'sfBlazor';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: [], connectors: changeConnectors };\n                if (window && window[blazor]) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[blazorInterop].updateBlazorProperties(obj, this);\n                }\n            }\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        var hiddenUserHandleTemplate = document.getElementsByClassName(this.element.id + '_hiddenUserHandleTemplate');\n        createUserHandleTemplates(this.userHandleTemplate, hiddenUserHandleTemplate, this.selectedItems);\n        this.updateTemplate();\n        this.isLoading = false;\n        this.renderComplete();\n        this.updateFitToPage();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateFitToPage = function () {\n        if (this.pageSettings && this.pageSettings.fitOptions && this.pageSettings.fitOptions.canFit) {\n            this.fitToPage(this.pageSettings.fitOptions);\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate('diagramsf_node_template', 'NodeTemplate', this, false);\n            }\n            else if (annotation && annotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n        for (var i = 0; i < this.selectedItems.userHandles.length; i++) {\n            {\n                if (this.selectedItems.userHandles[i].template) {\n                    updateBlazorTemplate('diagramsf_userHandle_template', 'UserHandleTemplate', this, false);\n                }\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate('diagramsf_node_template', 'NodeTemplate');\n            }\n            else if (templateAnnotation && templateAnnotation.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n        for (var i = 0; i < this.selectedItems.userHandles.length; i++) {\n            {\n                if (this.selectedItems.userHandles[i].template) {\n                    updateBlazorTemplate('diagramsf_userHandle_template', 'UserHandleTemplate', this, false);\n                }\n            }\n        }\n    };\n    //Call back function to the node template\n    // private measureNode(node: NodeModel): void {\n    //     if (node.shape.type === 'Native' && isBlazor()) {\n    //         node.wrapper.measure(new Size(node.width, node.height));\n    //         node.wrapper.arrange(node.wrapper.desiredSize);\n    //     }\n    // }\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: [this]\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-diagram-tooltip');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureWindowElement = 'measureElement';\n            if (window[measureWindowElement]) {\n                window[measureWindowElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureWindowElement].parentNode.removeChild(window[measureWindowElement]);\n                    window[measureWindowElement] = null;\n                }\n            }\n        }\n        var domTable = 'domTable';\n        window[domTable] = {};\n        for (var i = 0; i < this.layers.length; i++) {\n            var currentLayer = this.layers[i];\n            currentLayer.zIndexTable = {};\n        }\n        this.diagramActions = undefined;\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keyup', this.eventHandler.keyUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'keyup', this.eventHandler.keyUp);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param {NodeModel | ConnectorModel} objects - Defines the collection of nodes and connectors to be selected\n     * @param {boolean} multipleSelection - Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param {NodeModel | ConnectorModel} obj - Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.selectedItems);\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n            this.commandHandler.updateBlazorSelector();\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.eventHandler.updateViewPortSize(this.element);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     * @blazorArgsType process|DiagramNode\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param {NodeModel[] | ConnectorModel[]} obj - Defines the objects to be added to diagram\n     * @deprecated\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.fitToPage(options);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringIntoView(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringToCenter(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.group();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.unGroup();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendToBack();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * set the active layer\n     *  @param {string} layerName - defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param {LayerModel} layer - defines the layer model which is to be added\n     * @param {Object[]} layerObject - defines the object of the layer\n     * @blazorArgsType layer|DiagramLayer\n     * @deprecated\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     *  @private\n     */\n    Diagram.prototype.addDiagramLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject, false);\n    };\n    /**\n     * remove the layer from diagram\n     * @param {string} layerId - define the id of the layer\n     * @deprecated\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     *  @private\n     */\n    Diagram.prototype.removeDiagramLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId, false);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param {string[]} objects - define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        var oldValues = cloneObject(this.layers);\n        this.enableServerDataBinding(false);\n        this.commandHandler.moveObjects(objects, targetLayer);\n        var result = this.commandHandler.deepDiffer.map(oldValues, cloneObject(this.layers));\n        var diffValue = this.commandHandler.deepDiffer.frameObject({}, result);\n        this.oldDiagramObject = { layers: diffValue };\n        this.commandHandler.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    Diagram.prototype.layerObjectUpdate = function () {\n        if (isBlazor()) {\n            this.enableServerDataBinding(false);\n            this.oldDiagramObject['layers'] = [];\n            for (var i = 0; i < this.layers.length; i++) {\n                var leyerObject = cloneObject(this.layers[i]);\n                leyerObject.sfIndex = this.layers[i].zIndex;\n                this.oldDiagramObject['layers'].push(leyerObject);\n            }\n        }\n    };\n    /* tslint:enable */\n    /**\n     * move the layer backward\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.sendLayerBackward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject, true);\n    };\n    /**\n     * move the layer forward\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.bringLayerForward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject);\n    };\n    /**\n     * clone a layer with its object\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.bringToFront();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendForward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendBackward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object' && (this.selectedItems.nodes.length || this.selectedItems.connectors.length) > 0) {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param {NudgeDirection} direction -  Defines the direction by which the objects have to be moved\n     * @param {number} x - Defines the distance by which the selected objects have to be horizontally moved\n     * @param {number} y -  Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            var undoObject = cloneObject(this.selectedItems);\n            this.protectPropertyChange(true);\n            this.drag(obj, tx, ty);\n            this.protectPropertyChange(false);\n            var entry = {\n                type: 'PositionChanged',\n                redoObject: cloneObject(this.selectedItems), undoObject: undoObject, category: 'Internal'\n            };\n            this.addHistoryEntry(entry);\n        }\n        this.refreshCanvasLayers();\n    };\n    Diagram.prototype.insertBlazorDiagramObjects = function (actualObject) {\n        if (isBlazor() && !(this.blazorActions & BlazorAction.interaction)) {\n            this.enableServerDataBinding(false);\n            if (actualObject instanceof Selector) {\n                for (var i = 0; i < actualObject.nodes.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.nodes[i]);\n                }\n                for (var i = 0; i < actualObject.connectors.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.connectors[i]);\n                }\n            }\n            if (!(actualObject instanceof Selector)) {\n                var object = void 0;\n                if (actualObject && actualObject.children && actualObject.children.length > 0) {\n                    for (var i = 0; i < actualObject.children.length; i++) {\n                        this.insertBlazorDiagramObjects(this.nameTable[actualObject.children[i]]);\n                    }\n                }\n                object = cloneObject(this.nameTable[actualObject.id]);\n                this.insertValue(object, !(getObjectType(actualObject) === Connector));\n            }\n        }\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param {NodeModel | ConnectorMode | SelectorModel} obj - Defines the nodes/connectors to be dragged\n     * @param {number} tx - Defines the distance by which the given objects have to be horizontally moved\n     * @param {number} ty - Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.callBlazorModel = false;\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            if ((this.diagramActions & DiagramAction.DragUsingMouse)) {\n                this.updatePage();\n            }\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction) && !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    Diagram.prototype.disableStackContainerPadding = function (wrapper, disable) {\n        if (wrapper instanceof StackPanel) {\n            wrapper.considerPadding = disable;\n        }\n        if (wrapper.children) {\n            for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                this.disableStackContainerPadding(child, false);\n            }\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param {NodeModel | ConnectorModel | SelectorModel} obj - Defines the objects to be resized\n     * @param {number} sx - Defines the ratio by which the objects have to be horizontally scaled\n     * @param {number} sy - Defines the ratio by which the objects have to be vertically scaled\n     * @param {PointModel} pivot - Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        this.disableStackContainerPadding(obj.wrapper, false);\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                this.callBlazorModel = false;\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                    if (!this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds)) {\n                        this.commandHandler.scale(node, 1 / sx, 1 / sy, pivot, obj);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                    if (!this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds)) {\n                        this.commandHandler.scale(conn, 1 / sx, 1 / sy, pivot, obj);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        this.disableStackContainerPadding(obj.wrapper, true);\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param {NodeModel | ConnectorModel | SelectorModel} obj - Defines the objects to be rotated\n     * @param {number} angle - Defines the angle by which the objects have to be rotated\n     * @param {PointModel} pivot - Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                this.callBlazorModel = false;\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n                this.callBlazorModel = true;\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param {ConnectorModel} obj - Defines the connector, the end points of which has to be moved\n     * @param {number} tx - Defines the distance by which the end point has to be horizontally moved\n     * @param {number} ty - Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param {ConnectorModel} obj - Defines the connector, the end points of which has to be moved\n     * @param {number} tx - Defines the distance by which the end point has to be horizontally moved\n     * @param {number} ty - Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param {PointModel} position - Defines the position, the objects under which has to be found\n     * @param {IElement} source - Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param {NodeModel[] | ConnectorModel[]}objects - Defines the collection of objects, from which the object has to be found.\n     * @param {Actions} action - Defines the action, using which the relevant object has to be found.\n     * @param {boolean} inAction - Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param {NodeModel[] | ConnectorModel[]} objects - Defines the collection of objects, from which the object has to be found.\n     * @param {Actions} action - Defines the action, using which the relevant object has to be found.\n     * @param {boolean} inAction - Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param {IElement} obj - Defines the object, the child element of which has to be found\n     * @param {PointModel} position - Defines the position, the child element under which has to be found\n     * @param {number} padding - Defines the padding, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.eventHandler.findElementUnderMouse(obj, position, padding);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object under mouse\n     * @param {DiagramElement} wrapper - Defines the target element of the object under mouse\n     * @param {PointModel} position - Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param {string} action - Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param {string} action - Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param {HistoryEntry} entry - Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry, 'CustomAction');\n            }\n        }\n    };\n    /**\n     * Adds the given custom change in the diagram control to the track\n     * @param {HistoryEntry} entry - Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addCustomHistoryEntry = function (entry) {\n        if (isBlazor() && this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            entry.type = undefined;\n            entry.category = 'External';\n            this.undoRedoModule.addHistoryEntry(entry, this);\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry, action) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change),\n                action: action\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }, action: action\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    Diagram.prototype.getBlazorDiagramObjects = function (objects) {\n        if (objects) {\n            for (var j = 0; j < objects.length; j++) {\n                this.insertBlazorDiagramObjects(objects[j]);\n            }\n        }\n        else {\n            this.insertBlazorDiagramObjects(this.selectedItems);\n        }\n        this.callBlazorModel = false;\n        this.canEnableBlazorObject = true;\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param {NodeModel[] | ConnectorModel[]} objects - Defines the objects that have to be aligned\n     * @param {AlignmentOptions}option - Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param {DistributeOptions} objects - Defines the objects that have to be equally spaced\n     * @param {NodeModel[] | ConnectorModel[]} option - Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param {NodeModel[] | ConnectorModel[]}objects - Defines the collection of objects that have to be scaled\n     * @param {SizingOptions} option - Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    Diagram.prototype.updateBlazorDiagramProperties = function (attribute, canCall) {\n        if (isBlazor() && !canCall) {\n            this.enableServerDataBinding(false);\n            for (var i = 0; i < attribute.length; i++) {\n                this.oldDiagramObject[attribute[i]] = cloneObject(this[attribute[i]]);\n            }\n        }\n        if (canCall) {\n            this.commandHandler.getDiagramOldValues(this.oldDiagramObject, attribute);\n        }\n    };\n    Diagram.prototype.getZoomingAttribute = function () {\n        var attribute = [];\n        attribute.push('scrollSettings');\n        attribute.push('snapSettings');\n        return attribute;\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param {number} factor - Defines the factor by which the diagram is zoomed\n     * @param {PointModel} focusedPoint - Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n        if (!(this.blazorActions & BlazorAction.interaction)) {\n            this.updateBlazorDiagramProperties(attribute, true);\n        }\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param {ZoomOptions} options - used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param {number} horizontalOffset - Defines the horizontal distance to which the diagram has to be scrolled\n     * @param {number} verticalOffset - Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.setCursor('grabbing');\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Resets the segments of the connectors\n     */\n    Diagram.prototype.resetSegments = function () {\n        var previousConnectorObject = [];\n        var updateConnectorObject = [];\n        var changeConnectors = [];\n        if (isBlazor()) {\n            for (var _i = 0, _a = this.connectors; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n        }\n        if (this.constraints & DiagramConstraints.LineRouting && this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        else {\n            this.protectPropertyChange(true);\n            var connector = void 0;\n            for (var i = 0; i < this.connectors.length; i++) {\n                connector = this.connectors[i];\n                connector.segments = [];\n                this.connectorPropertyChange(connector, {}, { segments: connector.segments });\n            }\n            this.protectPropertyChange(false);\n        }\n        if (isBlazor()) {\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: [], connectors: changeConnectors };\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var eventArgs;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (args) {\n                            this.updateEventValue(args);\n                        }\n                        return [4 /*yield*/, this.trigger(DiagramEvent[eventName], args)];\n                    case 1:\n                        eventArgs = _a.sent();\n                        if (isBlazor() && typeof eventArgs === 'string') {\n                            eventArgs = JSON.parse(eventArgs);\n                        }\n                        return [2 /*return*/, eventArgs];\n                }\n            });\n        });\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given node to the lane\n     * @deprecated\n     */\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n            }\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.undoRedoModule) {\n                this.historyManager.endGroupAction();\n            }\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param {NodeModel} obj - Defines the node that has to be added to diagram\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given diagram object to the group.\n     * @param {NodeModel} Group - defines where the diagram object to be added.\n     * @param {string | NodeModel | ConnectorModel} Child - defines the diagram object to be added to the group\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addChildToGroup = function (group, child) {\n        this.addChild(group, child);\n    };\n    /**\n     * Will return the history stack values\n     * @param {boolean} isUndoStack - returns the history stack values\n     */\n    Diagram.prototype.getHistoryStack = function (isUndoStack) {\n        var temp;\n        var historyEntry = [];\n        temp = isUndoStack ? this.historyManager.undoStack : this.historyManager.redoStack;\n        if (this.historyManager.stackLimit !== undefined) {\n            for (var i = temp.length - 1; i >= 0; i--) {\n                historyEntry.push(temp[i]);\n                if (historyEntry.length > this.historyManager.stackLimit) {\n                    return historyEntry;\n                }\n            }\n        }\n        else {\n            historyEntry = temp;\n        }\n        return historyEntry;\n    };\n    /* tslint:disable */\n    /**\n     * Return the edges for the given node\n     * @deprecated\n     * @param {Object} args - return the edge of the given node\n     */\n    Diagram.prototype.getEdges = function (args) {\n        return args['outEdge'] ? this.nameTable[args['id']].outEdges : this.nameTable[args['id']].inEdges;\n    };\n    /* tslint:enable */\n    /**\n     * Returns the parent id for the node\n     * @deprecated\n     * @param {string} id - returns the parent id\n     */\n    Diagram.prototype.getParentId = function (id) {\n        return this.nameTable[id].parentId;\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param {ConnectorModel} obj - Defines the connector that has to be added to diagram\n     * @blazorArgsType obj|DiagramConnector\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /** @private */\n    Diagram.prototype.UpdateBlazorDiagramModelCollection = function (obj, copiedObject, multiSelectDelete) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && (!this.isServerUpdate || multiSelectDelete)) {\n            this.isServerUpdate = true;\n            var removalIndexCollection = [];\n            var updatedModelCollection = [];\n            var connectorModelCollection = [];\n            var elements = [];\n            var removalIndex = void 0;\n            var tempNode = [];\n            var objectTypeCollection = [];\n            if (!copiedObject) {\n                if (!multiSelectDelete) {\n                    tempNode = this.commandHandler.getChildren(obj, elements);\n                }\n                else {\n                    tempNode = multiSelectDelete;\n                }\n                for (var i = 0; i < tempNode.length; i++) {\n                    updatedModel = cloneBlazorObject(tempNode[i]);\n                    updatedModelCollection.push(updatedModel);\n                    if (getObjectType(tempNode[i]) === Connector) {\n                        removalIndex = this.connectors.indexOf(tempNode[i]);\n                    }\n                    else {\n                        removalIndex = this.nodes.indexOf(tempNode[i]);\n                    }\n                    removalIndexCollection.push(removalIndex);\n                    objectTypeCollection.push(getObjectType(tempNode[i]) === Connector ? 'Connector' : 'Node');\n                }\n                if (!multiSelectDelete) {\n                    updatedModelCollection.push(cloneBlazorObject(obj));\n                    removalIndexCollection.push(this.nodes.indexOf(obj));\n                    objectTypeCollection.push(getObjectType(obj) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            if (copiedObject && copiedObject.length > 0) {\n                for (var i = 0; i < copiedObject.length; i++) {\n                    updatedModel = cloneBlazorObject(copiedObject[i]);\n                    var isNode = (copiedObject[i] instanceof Node) ? true : false;\n                    isNode ? updatedModelCollection.push(updatedModel) : connectorModelCollection.push(updatedModel);\n                    objectTypeCollection.push(getObjectType(copiedObject[i]) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModelCollection),\n                    'ObjectType': objectTypeCollection,\n                    'removalIndex': copiedObject ? undefined : removalIndexCollection,\n                    'isMultipleObjects': true, 'annotationIndex': undefined,\n                    'connectorObj': JSON.stringify(connectorModelCollection)\n                }\n            };\n            window[blazorInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.UpdateBlazorDiagramModel = function (obj, objectType, removalIndex, annotationNodeIndex) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && !this.isServerUpdate && !(this.diagramActions & DiagramAction.Clear)) {\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModel),\n                    'ObjectType': objectType, 'removalIndex': removalIndex,\n                    'isMultipleObjects': false,\n                    'annotationIndex': annotationNodeIndex, 'connectorObj': undefined\n                }\n            };\n            window[blazorInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.addBlazorDiagramObjects = function () {\n        var nodesCollection = [];\n        var connectorCollection = [];\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                nodesCollection.push(cloneObject(this.nodes[i], undefined, undefined, true));\n            }\n            for (var i = 0; i < this.connectors.length; i++) {\n                connectorCollection.push(cloneObject(this.connectors[i], undefined, undefined, true));\n            }\n        }\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(nodesCollection), 'isConnector': false }\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n            obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(connectorCollection), 'isConnector': true }\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    Diagram.prototype.removeNodeEdges = function (elementId, id, isOutEdges) {\n        var node = this.nameTable[elementId];\n        var edges = isOutEdges ? node.outEdges : node.inEdges;\n        if (edges.length > 0) {\n            for (var i = 0; i < edges.length; i++) {\n                if (edges[i] === id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Adds the given object to diagram control\n     * @param {NodeModel | ConnectorModel} obj - Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (this.parentObject) {\n                args.parentId = this.parentObject.id;\n            }\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            if (args.cancel && this.drawingObject) {\n                this.removeElements(args.element);\n                this.tooltipObject.close();\n                if (getObjectType(args.element) === Connector) {\n                    if (args.element.sourceID) {\n                        this.removeNodeEdges(args.element.sourceID, args.element.id, true);\n                    }\n                    if (args.element.targetID) {\n                        this.removeNodeEdges(args.element.targetID, args.element.id, false);\n                    }\n                }\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    this.UpdateBlazorDiagramModel(newObj, \"Connector\");\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    this.UpdateBlazorDiagramModel(newObj, \"Node\");\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (this.parentObject) {\n                    args.parentId = this.parentObject.id;\n                }\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.parentObject = undefined;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateTextElementValue(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var blazorInterop = 'sfBlazor';\n        if (window && window[blazorInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[blazorInterop].updateDiagramCollection) {\n                window[blazorInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param {BpmnAnnotationModel} annotation - Defines the annotation to be added\n     * @param {NodeModel} node - Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                    if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                        element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                        if (element) {\n                            element.parentNode.removeChild(element);\n                        }\n                        element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                        if (element) {\n                            element.parentNode.removeChild(element);\n                        }\n                    }\n                    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                        var elementId = _a[_i];\n                        removeElement(children[i].id + '_groupElement', elementId);\n                        var nodeIndex = this.scroller.removeCollection.indexOf(currentObj.id);\n                        this.scroller.removeCollection.splice(nodeIndex, 1);\n                    }\n                }\n                else if (children[i] instanceof DiagramHtmlElement) {\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var elementId = _c[_b];\n                        removeElement(currentObj.id + '_html_element', elementId);\n                        removeElement(children[i].id + '_html_element', elementId);\n                    }\n                }\n                removeGradient(children[i].id);\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param {NodeModel | ConnectorModel} obj - Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (isBlazor() && (obj.id !== 'helper')) {\n                            this.UpdateBlazorDiagramModel(obj, \"Node\", index);\n                        }\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        this.UpdateBlazorDiagramModel(obj, \"Connector\", index);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    if (isBlazor()) {\n                        if (!this.isServerUpdate && selectedItems && selectedItems.length > 1) {\n                            this.isServerUpdate = true;\n                            this.UpdateBlazorDiagramModelCollection(selectedItems[0], undefined, selectedItems);\n                        }\n                        if (selectedItems[i].parentId) {\n                            this.insertBlazorDiagramObjects(this.nameTable[selectedItems[i].parentId]);\n                        }\n                    }\n                    this.remove(selectedItems[i]);\n                    if (isBlazor() && selectedItems[i].parentId) {\n                        this.commandHandler.getBlazorOldValues();\n                        this.isServerUpdate = false;\n                    }\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n        if (isBlazor() && selectedItems && selectedItems.length > 0) {\n            var check = true;\n            for (var k = 0; k < selectedItems.length; k++) {\n                if (this.nameTable[selectedItems[k].id]) {\n                    check = false;\n                }\n            }\n            if (check) {\n                this.isServerUpdate = false;\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     * @deprecated\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /* tslint:disable */\n    /**\n     * Specified annotation to edit mode\n     * @param {NodeModel | ConnectorModel} node - Defines node/connector that contains the annotation to be edited\n     * @param {string} id - Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if ((!canZoomPan(this) && !canMultiSelect(this)) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(node);\n                    if (selectedNode.annotations.length > 0) {\n                        this.insertValue(selectedNode, (node instanceof Node) ? true : false);\n                    }\n                    node = this.nameTable[node.id] || node;\n                }\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.layout.type !== 'None') {\n            if (this.organizationalChartModule) {\n                layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n                update = true;\n                if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                    this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n                }\n            }\n            else if (this.mindMapChartModule) {\n                if (nodes && nodes.length > 0) {\n                    this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n                }\n                update = true;\n            }\n            else if (this.radialTreeModule) {\n                this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.symmetricalLayoutModule) {\n                this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n                this.symmetricalLayoutModule.springLength = this.layout.springLength;\n                this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n                this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.complexHierarchicalTreeModule) {\n                var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n                if (nodes_1.length > 0) {\n                    this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n                }\n                update = true;\n            }\n            if (update) {\n                this.preventDiagramUpdate = true;\n                var connectors = {};\n                var updatedNodes = nodes;\n                if (isBlazor()) {\n                    this.updateTemplate();\n                }\n                for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                    var obj = updatedNodes_1[_i];\n                    var node = obj;\n                    if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                        this.updateIcon(node);\n                        this.updateDefaultLayoutIcons(node);\n                    }\n                    this.preventNodesUpdate = true;\n                    this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                    this.preventNodesUpdate = false;\n                    node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                    node.wrapper.arrange(node.wrapper.desiredSize);\n                    this.updateDiagramObject(node, true);\n                    if (node.inEdges.length > 0) {\n                        for (var j = 0; j < node.inEdges.length; j++) {\n                            var connector = this.nameTable[node.inEdges[j]];\n                            connectors[connector.id] = connector;\n                        }\n                    }\n                    if (node.outEdges.length > 0) {\n                        for (var k = 0; k < node.outEdges.length; k++) {\n                            var connection = this.nameTable[node.outEdges[k]];\n                            connectors[connection.id] = connection;\n                        }\n                    }\n                }\n                for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                    var conn = _b[_a];\n                    var connector = connectors[conn];\n                    var points = this.getPoints(connector);\n                    updateConnector(connector, points);\n                    if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                        this.commandHandler.updatePathElementOffset(connector);\n                    }\n                    connector.wrapper.measure(new Size(undefined, undefined));\n                    connector.wrapper.arrange(connector.wrapper.desiredSize);\n                    this.updateConnectorAnnotation(connector);\n                    this.updateQuad(connector);\n                    this.updateDiagramObject(connector, true);\n                }\n                this.preventDiagramUpdate = false;\n                this.updatePage();\n                if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                    this.refreshDiagramLayer();\n                }\n            }\n            if (!propChange) {\n                this.protectPropertyChange(propChange);\n            }\n        }\n        if (update) {\n            this.updateDiagramElementQuad();\n        }\n        return ((this.blazorActions & BlazorAction.expandNode) ? layout : true);\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param {string} data - Defines the behavior of the diagram to be loaded\n     * @deprecated\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param {StyleSheetList} styleSheets - defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param {string} image - defines image content to be exported.\n     * @param {IExportOptions} options - defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param {string} image - defines image content.\n     * @param {IExportOptions} options - defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param {number} stackLimit - defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param {IExportOptions} options - defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param {IPrintOptions} optons - defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                this.UpdateBlazorDiagramModel(newObj, 'NodeAnnotation', undefined, this.nodes.indexOf(obj));\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_2 = 0; i_2 < node.wrapper.children.length; i_2++) {\n                        if (node.wrapper.children[i_2].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_2];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                this.UpdateBlazorDiagramModel(newObj, 'ConnectorAnnotation', undefined, this.connectors.indexOf(obj));\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param {string | number} real - real value\n     * @param {number} rulerSize - ruler size\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            applyStyleAgainstCsp(this.diagramCanvas, style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderHiddenUserHandleTemplateLayer = function (bounds) {\n        var element;\n        var attributes = {\n            'class': this.element.id + '_hiddenUserHandleTemplate',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + 'visibility:hidden ;  overflow: hidden;'\n        };\n        element = createHtmlElement('div', attributes);\n        this.element.appendChild(element);\n    };\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        applyStyleAgainstCsp(bgLayer, commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%'\n        });\n        if (checkBrowserInfo()) {\n            rect.setAttribute('fill', 'url(' + location.protocol + '//' + location.host + location.pathname +\n                '#' + this.element.id + '_pattern)');\n        }\n        else {\n            rect.setAttribute('fill', 'url(#' + this.element.id + '_pattern)');\n        }\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.style['pointer-events'] = 'none';\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramSvg.style['pointer-events'] = 'all';\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            applyStyleAgainstCsp(this.diagramLayer, 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureWindowElement = 'measureElement';\n        if (window[measureWindowElement]) {\n            window[measureWindowElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n        this.renderHiddenUserHandleTemplateLayer(bounds);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var element = createHtmlElement('div', {\n            'id': this.element.id + '_diagramUserHandleLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        element.setAttribute('class', 'e-userHandle-layer');\n        divElement.appendChild(element);\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.style['pointer-events'] = 'none';\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.style[' pointer-events'] = 'all';\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.updateBazorShape = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            switch (node.shape.type) {\n                case 'Bpmn':\n                    node.shape.bpmnShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.bpmnShape;\n                    break;\n                case 'UmlActivity':\n                    node.shape.umlActivityShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.umlActivityShape;\n                    break;\n                case 'Flow':\n                    node.shape.flowShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.flowShape;\n                    break;\n                case 'Basic':\n                    node.shape.basicShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.basicShape;\n                    break;\n                case 'Text':\n                    node.shape.textContent =\n                        node.shape.content ? node.shape.content\n                            : node.shape.textContent;\n                    break;\n            }\n        }\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        this.updateBazorShape();\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var blazor = 'Blazor';\n        var canCloneObject = window && window[blazor] && !this.dataSourceSettings.dataSource;\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        var previousNodeObject = [];\n        var previousConnectorObject = [];\n        var updateNodeObject = [];\n        var updateConnectorObject = [];\n        var changeNodes = [];\n        var changeConnectors = [];\n        if (isBlazor() && canCloneObject) {\n            previousNodeObject = this.previousNodeCollection;\n            previousConnectorObject = this.previousConnectorCollection;\n        }\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        var alignedGroups = this.alignGroup(groups, tempTabel);\n        for (var _m = 0, alignedGroups_1 = alignedGroups; _m < alignedGroups_1.length; _m++) {\n            var obj = alignedGroups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n        if (isBlazor() && canCloneObject) {\n            for (var _p = 0, _q = this.nodes; _p < _q.length; _p++) {\n                var obj_2 = _q[_p];\n                updateNodeObject.push(cloneObject(obj_2, undefined, undefined, true));\n            }\n            for (var _r = 0, _s = this.connectors; _r < _s.length; _r++) {\n                var obj_3 = _s[_r];\n                updateConnectorObject.push(cloneObject(obj_3, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var blazorInterop = 'sfBlazor';\n            var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n            var obj = {\n                'methodName': 'UpdateBlazorProperties',\n                'diagramobj': diagramObject\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    Diagram.prototype.alignGroup = function (parents, tempTabel) {\n        var newList = [];\n        var parentist = [];\n        var child;\n        var childNode;\n        var i;\n        var j;\n        for (i = 0; i < parents.length; i++) {\n            child = parents[i];\n            childNode = tempTabel[child];\n            var node = void 0;\n            if (childNode && childNode.children.length) {\n                for (j = 0; j < childNode.children.length; j++) {\n                    node = childNode.children[j];\n                    if (parents.indexOf(node) > -1 && (newList.indexOf(node) === -1) &&\n                        (parentist.indexOf(node) === -1)) {\n                        newList.splice(0, 0, node);\n                    }\n                }\n            }\n            if (newList.indexOf(child) === -1) {\n                parentist.push(child);\n            }\n        }\n        newList = newList.concat(parentist);\n        return newList;\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var panStatus = 'Start';\n        if (this.realActions & RealAction.PanInProgress) {\n            panStatus = 'Progress';\n        }\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this,\n            panState: panStatus\n        };\n        if (isBlazor() && this.scrollChange) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                sourceId: this.element.id,\n                panState: panStatus\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        this.commandHandler.updatePanState(true);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventDiagramUpdate = true;\n        this.initObject(obj, layer);\n        this.preventDiagramUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventDiagramUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventDiagramUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer, null, true);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults.ports) {\n                                for (var i = 0; i < defaults.ports.length; i++) {\n                                    defaults.ports[i].inEdges = [];\n                                    defaults.ports[i].outEdges = [];\n                                }\n                            }\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj, true);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== ''\n                    && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== ''\n                    && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None) && (targetPort.constraints & PortConstraints.InConnect)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                this.preventNodesUpdate = true;\n                this.preventConnectorsUpdate = true;\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n                this.preventNodesUpdate = false;\n                this.preventConnectorsUpdate = false;\n            }\n            if (this['enterObject'] === undefined) {\n                this.updateQuad(obj);\n            }\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.getConnectedPort = function (node, connector, isSource) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID && isSource) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID && !isSource) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && ((this.realActions & RealAction.EnableGroupAction) ||\n                    (!(this.diagramActions & DiagramAction.ToolAction)\n                        && !(this.diagramActions & DiagramAction.PublicMethod)))) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && ((this.realActions & RealAction.EnableGroupAction) ||\n                    (!(this.diagramActions & DiagramAction.ToolAction)))) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!this.diagramSettings.inversedAlignment) {\n            canvas.inversedAlignment = false;\n        }\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false, this.annotationTemplate);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height), obj.id, this.onLoadImageSize.bind(this));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            if (this.nodes[i].wrapper && (this.nodes[i].wrapper instanceof Container)) {\n                this.updateQuad(this.nodes[i]);\n            }\n        }\n    };\n    Diagram.prototype.onLoadImageSize = function (id, size) {\n        var obj = this.getObject(id);\n        var image = document.getElementById(id + 'sf-imageNode');\n        if (image) {\n            image.parentNode.removeChild(image);\n        }\n        this.nodePropertyChange(obj, {}, { width: size.width, height: size.height });\n        var args = { element: cloneObject(obj), size: size };\n        this.triggerEvent(DiagramEvent.onImageLoad, args);\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, false);\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, true);\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortEdges = function (node, obj, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                var portId = (isInEdges) ? obj.targetPortID : obj.sourcePortID;\n                if (port.id === portId) {\n                    var portEdges = (isInEdges) ? port.inEdges : port.outEdges;\n                    if (portEdges.indexOf(obj.id) === -1) {\n                        portEdges.push(obj.id);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n        this.addBlazorDiagramObjects();\n        if (isBlazor() && this.layout && this.layout.layoutInfo && this.layout.layoutInfo.isRootInverse && this.nodes.length > 2) {\n            var rootNode = this.nodes[0];\n            if (rootNode.outEdges.length > 1) {\n                var isProtectedChange = this.isProtectedOnChange;\n                var connector = this.nameTable[rootNode.outEdges[1]];\n                this.protectPropertyChange(false);\n                this.preventDiagramUpdate = true;\n                connector.sourcePortID = rootNode.ports[1].id;\n                this.preventDiagramUpdate = false;\n                this.dataBind();\n                this.protectPropertyChange(isProtectedChange);\n            }\n        }\n        if (isBlazor()) {\n            var view = void 0;\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                view = this.views[temp];\n                if (view.renderDocument) {\n                    view.renderDocument(view);\n                    view.diagramRenderer.setLayers();\n                    view.updateView(view);\n                    this.renderNodes(view);\n                }\n            }\n        }\n        this.updateFitToPage();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex, isUpdateObject) {\n        var view;\n        var domTable = 'domTable';\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if ((layer === undefined || (layer && layer.visible)) || isUpdateObject) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        if (!window[domTable][view.element.id + '_diagramLayer']) {\n                            window[domTable][view.element.id + '_diagramLayer'] =\n                                document.getElementById(view.element.id + '_diagramLayer');\n                        }\n                        var diagramElementsLayer = window[domTable][view.element.id + '_diagramLayer'];\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var domTable = 'domTable';\n        if (!window[domTable][this.element.id + 'content']) {\n            window[domTable][this.element.id + 'content'] = document.getElementById(this.element.id + 'content');\n        }\n        var container = window[domTable][this.element.id + 'content'];\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventDiagramUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var hiddenUserHandleTemplate = document.getElementById(this.element.id + '_diagramUserHandleLayer');\n            if (hiddenUserHandleTemplate) {\n                hiddenUserHandleTemplate.style.width = width + 'px';\n                hiddenUserHandleTemplate.style.height = height + 'px';\n            }\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        if (!(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var isProtectedOnChangeValue = this.isProtectedOnChange;\n        if (isBlazor()) {\n            this.isProtectedOnChange = true;\n        }\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            var diagramUserHandlelayer = void 0;\n            diagramUserHandlelayer = getUserHandleLayer(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform, diagramUserHandlelayer);\n            }\n        }\n        this.isProtectedOnChange = isProtectedOnChangeValue;\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var diagramUserHandlelayer = void 0;\n                diagramUserHandlelayer = getUserHandleLayer(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform, diagramUserHandlelayer);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i_3 = childNodes.length; i_3 > 0; i_3--) {\n                child = childNodes[i_3 - 1];\n                child.parentNode.removeChild(child);\n            }\n            var templates = getUserHandleLayer(this.element.id).childNodes;\n            var i = void 0;\n            for (i = templates.length; i > 0; i--) {\n                templates[i - 1].parentNode.removeChild(templates[i - 1]);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if ((!isBlazor() && node.shape.shape === 'Activity') ||\n                (isBlazor() && node.shadow.bpmnShape === 'Activity')) {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    /* tslint:disable */\n    Diagram.prototype.endEdit = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldValues, changedvalues, annotations, textArea, text, element, node, annotation, args, bpmnAnnotation, textWrapper, annotation_1, index, deleteNode, index, changesAnnotation, nodeIndex, oldnodes, newnodes, clonedObject, selectedNode, swimLaneNode, laneHeader, phaseHeader, collection, j;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.diagramActions & DiagramAction.TextEdit)) return [3 /*break*/, 9];\n                        oldValues = void 0;\n                        changedvalues = void 0;\n                        annotations = {};\n                        this.enableServerDataBinding(false);\n                        if (isBlazor()) {\n                            this.canEnableBlazorObject = true;\n                        }\n                        textArea = document.getElementById(this.element.id + '_editBox');\n                        if (!((isBlazor() && textArea) || !isBlazor())) return [3 /*break*/, 9];\n                        text = textArea.value;\n                        EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n                        EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n                        element = document.getElementById(this.element.id + '_editTextBoxDiv');\n                        node = void 0;\n                        node = this.nameTable[this.activeLabel.parentId];\n                        annotation = findAnnotation(node, this.activeLabel.id);\n                        args = { oldValue: this.activeLabel.text, newValue: text, cancel: false, element: node, annotation: annotation };\n                        if (isBlazor() && this.textEdit) {\n                            args = this.getBlazorTextEditArgs(args);\n                        }\n                        bpmnAnnotation = false;\n                        element.parentNode.removeChild(element);\n                        textWrapper = void 0;\n                        if (!this.bpmnModule) return [3 /*break*/, 4];\n                        node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                        textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                        bpmnAnnotation = node ? true : false;\n                        if (!bpmnAnnotation) return [3 /*break*/, 4];\n                        if (!(element.textContent !== text || text !== this.activeLabel.text)) return [3 /*break*/, 4];\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 1:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 3;\n                    case 3:\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                        _a.label = 4;\n                    case 4:\n                        if (!!bpmnAnnotation) return [3 /*break*/, 8];\n                        node = this.nameTable[this.activeLabel.parentId];\n                        annotation_1 = findAnnotation(node, this.activeLabel.id);\n                        if (annotation_1 && !(annotation_1 instanceof Text)) {\n                            index = findObjectIndex(node, annotation_1.id, true);\n                            annotations[index] = { content: annotation_1.content };\n                            oldValues = { annotations: annotations };\n                        }\n                        else {\n                            if (isBlazor() && (node.shape).type === \"Text\") {\n                                oldValues = { shape: { textContent: node.shape.content } };\n                            }\n                            else {\n                                oldValues = { shape: { content: node.shape.content } };\n                            }\n                        }\n                        deleteNode = this.eventHandler.isAddTextNode(node, true);\n                        if (!(!deleteNode && (element.textContent !== text || text !== this.activeLabel.text))) return [3 /*break*/, 7];\n                        if (!isBlazor()) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 5:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 7];\n                    case 6:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 7;\n                    case 7:\n                        if (!textWrapper) {\n                            textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                        }\n                        if (annotation_1.content !== text && !args.cancel) {\n                            if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                                && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                                && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                                text = ' + ' + text;\n                            }\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(true);\n                            }\n                            if (!(annotation_1 instanceof Text)) {\n                                index = findObjectIndex(node, annotation_1.id, true);\n                                changesAnnotation = {};\n                                changesAnnotation[index] = { content: text };\n                                changedvalues = { annotations: changesAnnotation };\n                            }\n                            else {\n                                if (isBlazor() && (node.shape).type === \"Text\") {\n                                    changedvalues = { shape: { textContent: text } };\n                                }\n                                else {\n                                    changedvalues = { shape: { content: text } };\n                                }\n                            }\n                            nodeIndex = this.getIndex(node, node.id);\n                            if (nodeIndex) {\n                                oldnodes = {};\n                                oldnodes[nodeIndex] = oldValues;\n                                newnodes = {};\n                                newnodes[nodeIndex] = changedvalues;\n                                if (getObjectType(node) === Node) {\n                                    this.onPropertyChanged({ nodes: newnodes }, { nodes: oldnodes });\n                                }\n                                else {\n                                    this.onPropertyChanged({ connectors: newnodes }, { connectors: oldnodes });\n                                }\n                            }\n                            this.protectPropertyChange(true);\n                            if (isBlazor() && (node.shape).type === \"Text\") {\n                                node.shape.textContent = text;\n                            }\n                            else {\n                                annotation_1.content = text;\n                            }\n                            this.protectPropertyChange(false);\n                            this.updateSelector();\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(false);\n                            }\n                        }\n                        if (deleteNode) {\n                            this.removeObjectsFromLayer(node);\n                            this.removeFromAQuad(node);\n                            delete this.nameTable[this.activeLabel.parentId];\n                            if (text !== '') {\n                                this.clearSelection();\n                                clonedObject = cloneObject(node);\n                                node = this.add(clonedObject);\n                                this.updateDiagramObject(node);\n                                this.commandHandler.oldSelectedObjects = cloneSelectedObjects(this);\n                                this.commandHandler.select(this.nameTable[node.id]);\n                                this.commandHandler.updateBlazorSelector();\n                            }\n                        }\n                        _a.label = 8;\n                    case 8:\n                        if (this.selectedItems.nodes.length) {\n                            selectedNode = this.nameTable[this.activeLabel.parentId];\n                            swimLaneNode = this.nameTable[selectedNode.parentId];\n                            if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                                laneHeader = 'LaneHeaderParent';\n                                phaseHeader = 'PhaseHeaderParent';\n                                if ((selectedNode.shape.type === 'SwimLane')) {\n                                    swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                                    selectedNode = node;\n                                }\n                                if ((selectedNode.isLane || selectedNode.isPhase)) {\n                                    collection = selectedNode.isLane ?\n                                        swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                                    for (j = 0; j < collection.length; j++) {\n                                        if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                            collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                                        }\n                                    }\n                                }\n                                else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                                    swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                                }\n                            }\n                            this.dataBind();\n                        }\n                        textWrapper.visible = true;\n                        this.updateDiagramObject(node);\n                        this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n                        if (this.activeLabel.isGroup) {\n                            this.endGroupAction();\n                        }\n                        this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n                        this.commandHandler.getBlazorOldValues();\n                        if (isBlazor()) {\n                            this.canEnableBlazorObject = false;\n                        }\n                        this.enableServerDataBinding(true);\n                        _a.label = 9;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Diagram.prototype.getIndex = function (node, id) {\n        var index;\n        var collection = (getObjectType(node) === Node) ? this.nodes : this.connectors;\n        for (var i = 0; i < collection.length; i++) {\n            if (collection[i].id.toString() === id.toString()) {\n                return i.toString();\n            }\n        }\n        return null;\n    };\n    ;\n    /* tslint:enable */\n    Diagram.prototype.getBlazorTextEditArgs = function (args) {\n        var element = getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n            : { node: cloneBlazorObject(args.element) };\n        var annotation = {};\n        if (element.node) {\n            if (element.node.shape.type === 'Text') {\n                annotation.textNode = args.element.shape;\n            }\n            else {\n                annotation.nodeAnnotation = args.element.annotations[0];\n            }\n        }\n        else {\n            annotation.connectorAnnotation = args.element.annotations[0];\n        }\n        args = {\n            oldValue: args.oldValue,\n            newValue: args.newValue,\n            cancel: args.cancel,\n            element: element,\n            annotation: annotation\n        };\n        return args;\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        if (isBlazor()) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                if (node.id === this.nodes[i].id) {\n                    this.UpdateBlazorDiagramModel(node, 'Node', i);\n                }\n            }\n        }\n        this.UpdateBlazorDiagramModel(node, 'Node', (this.nodes.indexOf(node)));\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        this.UpdateBlazorDiagramModelCollection(node);\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            else if (oldObject.constraints) {\n                var oldSelectConstraints = (oldObject.constraints & NodeConstraints.Select);\n                var newSelectConstraints = (node.constraints & NodeConstraints.Select);\n                if (oldSelectConstraints !== newSelectConstraints) {\n                    var shape = actualObject.shape;\n                    // Header - constraints\n                    var headerNode = this.nameTable[actualObject.id + shape.header.id];\n                    headerNode.constraints = (!newSelectConstraints) ? headerNode.constraints & ~NodeConstraints.Select :\n                        headerNode.constraints | NodeConstraints.Select;\n                    // Phase - Constraints\n                    var phaseNode = void 0;\n                    if (shape.phaseSize > 0) {\n                        for (var i = 0; i < shape.phases.length; i++) {\n                            phaseNode = this.nameTable[actualObject.id + shape.phases[i].id + '_header'];\n                            phaseNode.constraints = (!newSelectConstraints) ? phaseNode.constraints & ~NodeConstraints.Select :\n                                phaseNode.constraints | NodeConstraints.Select;\n                        }\n                    }\n                    // Header - Constraints\n                    var laneNode = void 0;\n                    var laneHeader = void 0;\n                    var value = shape.phases.length || 1;\n                    for (var i = 0; i < shape.lanes.length; i++) {\n                        for (var l = 0; l < value; l++) {\n                            laneNode = this.nameTable[actualObject.id + shape.lanes[i].id + l];\n                            laneNode.constraints = (!newSelectConstraints) ? laneNode.constraints & ~NodeConstraints.Select :\n                                laneNode.constraints | NodeConstraints.Select;\n                            if (l === 0) {\n                                laneHeader = this.nameTable[actualObject.id + shape.lanes[i].id + '_' + l + '_header'];\n                                laneHeader.constraints = (!newSelectConstraints) ? laneHeader.constraints & ~NodeConstraints.Select :\n                                    laneHeader.constraints | NodeConstraints.Select;\n                            }\n                        }\n                    }\n                }\n            }\n            update = true;\n        }\n        return update;\n    };\n    /** @private */\n    Diagram.prototype.insertValue = function (oldNodeObject, isNode) {\n        var value;\n        var oldObjects = isNode ? this.oldNodeObjects : this.oldConnectorObjects;\n        for (var i = 0; i < oldObjects.length; i++) {\n            if (oldObjects[i].id === oldNodeObject.id) {\n                value = true;\n            }\n        }\n        if (!value) {\n            isNode ? (this.oldNodeObjects.push(oldNodeObject)) : this.oldConnectorObjects.push(oldNodeObject);\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node_2 = cloneObject(actualObject);\n            this.insertValue(node_2, true);\n        }\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n            (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode'))) {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                    var swimLaneNode = this.nameTable[actualObject.parentId];\n                    if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane')) {\n                        var laneHeader = 'LaneHeaderParent';\n                        var phaseHeader = 'PhaseHeaderParent';\n                        if ((actualObject.isLane || actualObject.isPhase)) {\n                            var collection = actualObject.isLane ?\n                                swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                            for (var j_2 = 0; j_2 < collection.length; j_2++) {\n                                if (collection[j_2].id === (actualObject[laneHeader] || actualObject[phaseHeader])) {\n                                    collection[j_2].header.annotation.content = actualObject.annotations[0].content;\n                                    collection[j_2].header.annotation.style = actualObject.annotations[0].style;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            if (this.checkSelectedItem(actualObject) && actualObject.wrapper.children[0] instanceof TextElement) {\n                actualObject.wrapper.children[0].refreshTextElement();\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), actualObject.id, this.onLoadImageSize.bind(this));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                        this.updateDiagramObject(actualObject, true);\n                    }\n                    else {\n                        this.updateDiagramObject(actualObject);\n                    }\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_4 = 0; i_4 < objects_2.length; i_4++) {\n                            var object = objects_2[i_4];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_4], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: element, cause: this.diagramActions,\n                oldValue: oldObject, newValue: node\n            };\n            if (isBlazor() && this.propertyChange) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node = cloneObject(actualObject);\n            this.insertValue(node, false);\n        }\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.sourceID] || sourceNode, oldProp.sourcePortID || actualObject.sourcePortID, actualObject.id, false);\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.targetID] || targetNode, oldProp.targetPortID || actualObject.targetPortID, actualObject.id, true);\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (actualObject.type === 'Orthogonal' && this.lineRoutingModule && this.diagramActions &&\n                (this.constraints & DiagramConstraints.LineRouting) && !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && (canMeasureDecoratorPath(Object.keys(newProp.targetDecorator)))) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints, this.diagramActions);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                    this.updateDiagramObject(actualObject, true);\n                }\n                else {\n                    this.updateDiagramObject(actualObject);\n                }\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.removePortEdges = function (node, portId, item, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                if (port.id === portId) {\n                    var portEdge = (isInEdges) ? port.inEdges : port.outEdges;\n                    removeItem(portEdge, item);\n                }\n            }\n        }\n    };\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id], undefined, true);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    //updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if (actualObject.shape.type === 'UmlActivity' &&\n                    ((isBlazor && actualObject.shape.umlActivityShape === 'StructuredNode') ||\n                        (!isBlazor && actualObject.shape.shape === 'StructuredNode'))) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                    portWrapper.canMeasurePath = true;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventDiagramUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventDiagramUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if ((this.diagramActions & DiagramAction.Render) &&\n            !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n        if (this.diagramActions & DiagramAction.DragUsingMouse) {\n            this.renderPageBreaks();\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.getProtectPropertyChangeValue = function () {\n        return this.isProtectedOnChange;\n    };\n    /** @private */\n    Diagram.prototype.enableServerDataBinding = function (enable) {\n        if (isBlazor()) {\n            this.allowServerDataBinding = enable;\n            if (enable) {\n                this.bulkChanges = {};\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                var dragDataHelper = null;\n                if (!args.dragData && args.name === 'drag') {\n                    var helper = document.getElementsByClassName('e-dragclone')[0];\n                    if (helper) {\n                        dragDataHelper = helper;\n                    }\n                }\n                if (args.dragData || dragDataHelper) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = dragDataHelper || args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    var nodeDragSize = void 0;\n                    var nodePreviewSize = void 0;\n                    var paletteDragSize = void 0;\n                    if (paletteId) {\n                        // tslint:disable-next-line:no-any\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            _this.allowServerDataBinding = false;\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                if (obj.shape.shape === 'TextAnnotation') {\n                                    clonedObject.offsetX = position.x + 11 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                    clonedObject.offsetY = position.y + 11 + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                }\n                                else {\n                                    clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                    clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                }\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                nodeDragSize = newNode.dragSize;\n                                nodePreviewSize = newNode.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                var palettePreview = sourceElement['symbolPreview'];\n                                newNode.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || palettePreview.width || newNode.width;\n                                newNode.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || palettePreview.height || newNode.height;\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        _this.diagramActions |= DiagramAction.PreventCollectionChangeOnDragOver;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        group.previewSize = newNode.previewSize;\n                                        group.dragSize = newNode.dragSize;\n                                        group.addInfo = newNode.addInfo;\n                                        newNode = _this.add(group);\n                                        _this.diagramActions &= ~DiagramAction.PreventCollectionChangeOnDragOver;\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                nodeDragSize = newObj.dragSize;\n                                nodePreviewSize = newObj.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                laneObj.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || laneObj.width;\n                                laneObj.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || laneObj.height;\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventDiagramUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventDiagramUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.oldSelectedObjects = cloneSelectedObjects(_this);\n                                _this.commandHandler.select(newObj);\n                                _this.commandHandler.updateBlazorSelector();\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventDiagramUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                        _this.allowServerDataBinding = true;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var source, value, isPhase, orientation_2, isConnector, newObj, node, conn, arg, clonedObject, id, nodeId, arg, clonedObject, id, selectedSymbols;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.allowServerDataBinding = false;\n                        source = 'sourceElement';\n                        if (!this.currentSymbol) return [3 /*break*/, 4];\n                        isPhase = false;\n                        isConnector = void 0;\n                        isConnector = (this.currentSymbol instanceof Connector) ? true : false;\n                        if (args.event.touches) {\n                            this.eventHandler.mouseUp(args.event);\n                        }\n                        newObj = void 0;\n                        node = void 0;\n                        conn = void 0;\n                        arg = void 0;\n                        arg = {\n                            source: this.droppable[source],\n                            element: this.currentSymbol,\n                            target: this.eventHandler['hoverNode'] || this.eventHandler['lastObjectUnderMouse'] || this, cancel: false,\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        arg = {\n                            source: cloneBlazorObject(this.droppable[source]),\n                            element: getObjectType(this.currentSymbol) === Connector ? { connector: cloneBlazorObject(this.currentSymbol) } : { node: cloneBlazorObject(this.currentSymbol) },\n                            cancel: false, target: {},\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        this.getDropEventArgs(arg);\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.drop, arg)];\n                    case 1:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 3;\n                    case 3:\n                        clonedObject = void 0;\n                        id = 'id';\n                        clonedObject = cloneObject(this.currentSymbol);\n                        clonedObject['hasTarget'] = this.currentSymbol['hasTarget'];\n                        this.removeFromAQuad(this.currentSymbol);\n                        this.removeObjectsFromLayer(this.nameTable[this.currentSymbol.id]);\n                        this.removeElements(this.currentSymbol);\n                        if (this.currentSymbol.shape.isLane ||\n                            this.currentSymbol.shape.isPhase) {\n                            this.removeChildInNodes(this.currentSymbol);\n                        }\n                        if (arg.cancel) {\n                            removeChildNodes(this.currentSymbol, this);\n                        }\n                        if (this.currentSymbol.shape.isPhase) {\n                            isPhase = true;\n                            orientation_2 = this.currentSymbol.shape.orientation;\n                        }\n                        delete this.nameTable[this.currentSymbol.id];\n                        this.currentSymbol = null;\n                        this.protectPropertyChange(true);\n                        if (!arg.cancel) {\n                            this.startGroupAction();\n                            if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                                if (isPhase) {\n                                    clonedObject.shape.isPhase = isPhase;\n                                    clonedObject.shape.orientation = orientation_2;\n                                }\n                                this.eventHandler.addSwimLaneObject(clonedObject);\n                            }\n                            if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                                && clonedObject['hasTarget']) {\n                                nodeId = clonedObject.shape.annotation.nodeId;\n                                clonedObject.shape.annotation.id = clonedObject.id;\n                                this.addTextAnnotation(clonedObject.shape.annotation, this.nameTable[nodeId]);\n                                clonedObject.nodeId = '';\n                            }\n                            if (!clonedObject.shape.isLane && !isPhase) {\n                                if (clonedObject.children) {\n                                    this.addChildNodes(clonedObject);\n                                }\n                                if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(this, arg.target)\n                                    && canAllowDrop(arg.target)) {\n                                    addChildToContainer(this, arg.target, clonedObject);\n                                }\n                                else {\n                                    value = this.add(clonedObject, true);\n                                }\n                                if ((clonedObject || value) && canSingleSelect(this)) {\n                                    this.select([this.nameTable[clonedObject[id]]]);\n                                }\n                            }\n                        }\n                        else {\n                            this.clearSelectorLayer();\n                        }\n                        this.protectPropertyChange(false);\n                        newObj = this.nameTable[clonedObject[id]];\n                        if (clonedObject['hasTarget']) {\n                            clonedObject.nodeId = clonedObject['hasTarget'];\n                            this.remove(clonedObject);\n                        }\n                        if (this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                            newObj.processId = clonedObject.processId;\n                            this.bpmnModule.dropBPMNchild(this.nameTable[newObj.processId], newObj, this);\n                        }\n                        this.endGroupAction();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        delete this.droppable[source];\n                        return [3 /*break*/, 5];\n                    case 4:\n                        arg = {\n                            source: cloneBlazorObject(args.droppedElement),\n                            element: undefined,\n                            target: cloneBlazorObject(this.eventHandler['hoverNode'] || (this.eventHandler['lastObjectUnderMouse']) || this), cancel: false,\n                            position: undefined\n                        };\n                        if (isBlazor()) {\n                            arg = {\n                                source: cloneBlazorObject(args.droppedElement),\n                                element: undefined,\n                                cancel: false,\n                                position: undefined,\n                                target: {}\n                            };\n                            this.getDropEventArgs(arg);\n                        }\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        clonedObject = void 0;\n                        id = 'id';\n                        _a.label = 5;\n                    case 5:\n                        selectedSymbols = 'selectedSymbols';\n                        if (this.droppable[selectedSymbols]) {\n                            remove(this.droppable[selectedSymbols]);\n                        }\n                        this.allowServerDataBinding = true;\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                var args_1 = {\n                    element: cloneBlazorObject(_this.currentSymbol),\n                    diagram: _this\n                };\n                if (isBlazor()) {\n                    args_1 = _this.getBlazorDragLeaveEventArgs(args_1);\n                }\n                _this.triggerEvent(DiagramEvent.dragLeave, args_1);\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getBlazorDragLeaveEventArgs = function (args) {\n        args = {\n            diagramId: this.element.id,\n            element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) }\n        };\n        return args;\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagramId = this.element.id;\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagramId: this.element.id\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    /**\n     * moves the node or connector forward within given layer\n     */\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"annotationTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"userHandleTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, DiagramSettings)\n    ], Diagram.prototype, \"diagramSettings\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"keyUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"keyDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onImageLoad\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { checkBrowserInfo } from './utility/diagram-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        /* tslint:disable */\n        return checkBrowserInfo() ? htmlData.replace(\"url(\" + location.protocol + '//' + location.host + location.pathname + \"#diagram_pattern \", \"url(#diagram_pattern)\") : htmlData;\n        /* tslint:enable */\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = context.diagram.pageSettings.background.color;\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, 0, 0, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param {DataSourceModel} data\n     * @param {Diagram} diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n            diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param {DataSourceModel} data\n     * @param {Diagram} diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        var node;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    diagram.protectPropertyChange(true);\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.protectPropertyChange(false);\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var node;\n        var nodes;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param {Object} object\n     * @param {Object[]} rootnodes\n     * @param {DataSourceModel} mapper\n     * @param {Object[]} data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param {DataSourceModel} mapper\n     * @param {Object} item\n     * @param {Diagram} diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        var returnNode;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param {Node} node\n     * @param {Diagram} diagram\n     * @param {string} id\n     * @param {string} parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param {string} sNode\n     * @param {string} tNode\n     * @param {Diagram} diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && (event || this.parent.checkMenu) &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var diagramArgs, _i, _a, item, _b, _c, newItem, hidden, contextItems, i, item, i, item;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!this.parent.checkMenu &&\n                            (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.parent.checkMenu = args.cancel = true;\n                        }\n                        if (this.parent.checkMenu) {\n                            this.hiddenItems = [];\n                        }\n                        diagramArgs = args;\n                        diagramArgs.hiddenItems = [];\n                        for (_i = 0, _a = args.items; _i < _a.length; _i++) {\n                            item = _a[_i];\n                            this.ensureItems(item, args.event);\n                            if (item.items.length) {\n                                for (_b = 0, _c = item.items; _b < _c.length; _b++) {\n                                    newItem = _c[_b];\n                                    this.ensureItems(newItem, args.event);\n                                }\n                            }\n                        }\n                        this.eventArgs = args.event;\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.parent.trigger(contextMenuOpen, diagramArgs)];\n                    case 1:\n                        diagramArgs =\n                            (_d.sent()) || diagramArgs;\n                        if (typeof diagramArgs === 'string') {\n                            diagramArgs = JSON.parse(diagramArgs);\n                        }\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.parent.trigger(contextMenuOpen, diagramArgs);\n                        _d.label = 3;\n                    case 3:\n                        hidden = true;\n                        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n                        this.contextMenu.enableItems(this.disableItems, false, true);\n                        contextItems = this;\n                        for (i = 0; i < args.items.length; i++) {\n                            item = args.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                                contextItems.contextMenu.hideItems([item.id], true);\n                            }\n                        }\n                        for (i = 0; i < contextItems.contextMenu.items.length; i++) {\n                            item = contextItems.contextMenu.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                                hidden = false;\n                                contextItems.contextMenu.showItems([item.id], true);\n                            }\n                        }\n                        if (hidden) {\n                            diagramArgs.cancel = hidden;\n                            this.hiddenItems = [];\n                        }\n                        /* tslint:disable */\n                        if (this.parent.selectedItems.nodes.length && this.parent.selectedItems.nodes[0].isPhase) {\n                            args.cancel = true;\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale === 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = scale;\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.undo(entry);\n                }\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n            case 'SendToBack':\n            case 'SendForward':\n            case 'SendBackward':\n            case 'BringToFront':\n                this.recordOrderCommandChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry, 'Undo');\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, node instanceof Node ? true : false);\n        }\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, true);\n        }\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordOrderCommandChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        diagram.commandHandler.orderCommands(isRedo, (isRedo ? redoObject : undoObject), entry.type);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.sourceID], connector.sourcePortID, connector.id, false);\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.targetID], connector.targetPortID, connector.id, true);\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, false);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, true);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.redo(entry);\n                }\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'SendToBack':\n            case 'SendForward':\n            case 'SendBackward':\n            case 'BringToFront':\n                this.recordOrderCommandChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry, 'Redo');\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent, RealAction, DiagramConstraints } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        diagram.realActions = diagram.realActions | RealAction.AnimationClick;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    diagram.allowServerDataBinding = false;\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                    diagram.allowServerDataBinding = true;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.realActions = diagram.realActions & ~RealAction.AnimationClick;\n            diagram.refreshCanvasLayers();\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n            if (diagram.lineRoutingModule && diagram.constraints & DiagramConstraints.LineRouting) {\n                diagram.resetSegments();\n            }\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        this.considerWalkable = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal' && connector.visible) {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var extraBounds = this.size;\n        if (diagram.spatialSearch['pageTop'] < 0 || diagram.spatialSearch['pageLeft'] < 0) {\n            extraBounds = this.size + (this.size / 2);\n        }\n        var right = diagram.spatialSearch['pageRight'] + extraBounds;\n        var bottom = diagram.spatialSearch['pageBottom'] + extraBounds;\n        var left = diagram.spatialSearch['pageLeft'] - extraBounds;\n        var top = diagram.spatialSearch['pageTop'] - extraBounds;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader && node.visible) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    if (diagramNodes[k].wrapper.bounds) {\n                        isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.bounds);\n                    }\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                        if (diagramNodes[k].parentId !== '') {\n                            grid.parentNodeId = diagramNodes[k].parentId;\n                        }\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource, isPortBounds) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (isPortBounds) {\n                if (portDirection === 'Top') {\n                    endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n                }\n                else if (portDirection === 'Left') {\n                    endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n                }\n                else if (portDirection === 'Right') {\n                    endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n                }\n                else {\n                    endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n                }\n            }\n            else {\n                endPoint = { x: bounds.center.x, y: bounds.center.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.bounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.bounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            this.considerWalkable = [];\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    /* tslint:disable */\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false, true);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && connector.sourcePortID === '' && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    if (((targetPoint.x - points[j + 1].x) < 0) &&\n                        (Math.abs(targetPoint.x - points[j].x) < connector.targetDecorator.width + 1)) {\n                        points[j].x = points[j - 1].x -= this.size / 2;\n                    }\n                    if (((targetPoint.x - points[j + 1].x) > 0) &&\n                        (Math.abs(targetPoint.x - points[j].x) < connector.targetDecorator.width + 1)) {\n                        points[j].x = points[j - 1].x += this.size / 2;\n                    }\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    if (((targetPoint.y - points[j + 1].y) < 0) &&\n                        (Math.abs(targetPoint.y - points[j].y) < connector.targetDecorator.height + 1)) {\n                        points[j].y = points[j - 1].y -= this.size / 2;\n                    }\n                    if (((targetPoint.y - points[j + 1].y) > 0) &&\n                        (Math.abs(targetPoint.y - points[j].y) < connector.targetDecorator.width + 1)) {\n                        points[j].y = points[j - 1].y += this.size / 2;\n                    }\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    /* tslint:enable */\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    this.considerWalkable.push(grid_1);\n                }\n            }\n            if (x > 0 && y > 0) {\n                if (direction === 'top' || direction === 'left') {\n                    i--;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || ((grid.nodeId.length === 1 || (grid.nodeId.length === 2 && grid.parentNodeId)) &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1 ||\n                    this.considerWalkable.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            var check = void 0;\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1 ? shape1.tree.children && shape1.tree.children.length : 0;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var yValue = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                yValue = layout.graphNodes[fixedNode.id].y;\n                orientation === 'LeftToRight' ? layout.anchorX -= yValue : layout.anchorX += yValue;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                yValue = layout.graphNodes[fixedNode.id].y;\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                orientation === 'TopToBottom' ? layout.anchorY -= yValue : layout.anchorY += yValue;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            this.isNodeOverLap(this.nameTable[this.vertices[i].name], layoutProp);\n        }\n    };\n    HierarchicalLayoutUtil.prototype.calculateRectValue = function (dnode) {\n        var rect = { x: 0, y: 0, right: 0, bottom: 0, height: 0, width: 0 };\n        rect.x = dnode.offsetX - dnode.actualSize.width / 2;\n        rect.right = dnode.offsetX + dnode.actualSize.width / 2;\n        rect.y = dnode.offsetY - dnode.actualSize.height / 2;\n        rect.bottom = dnode.offsetY + dnode.actualSize.height / 2;\n        return rect;\n    };\n    HierarchicalLayoutUtil.prototype.isNodeOverLap = function (dnode, layoutProp) {\n        var nodeRect = { x: 0, y: 0, right: 0, bottom: 0, height: 0, width: 0 };\n        for (var i = 0; i < this.vertices.length; i++) {\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            var tempnode1 = void 0;\n            tempnode1 = this.nameTable[this.vertices[i].value];\n            if (dnode.id !== tempnode1.id && tempnode1.offsetX !== 0 && tempnode1.offsetY !== 0) {\n                nodeRect = this.calculateRectValue(dnode);\n                rect = this.calculateRectValue(tempnode1);\n                if (this.isIntersect(rect, nodeRect, layoutProp)) {\n                    if (layoutProp.orientation === 'TopToBottom' || layoutProp.orientation === 'BottomToTop') {\n                        dnode.offsetX += layoutProp.horizontalSpacing;\n                    }\n                    else {\n                        dnode.offsetY += layoutProp.verticalSpacing;\n                    }\n                    this.isNodeOverLap(dnode, layoutProp);\n                }\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.isIntersect = function (rect, nodeRect, layoutProp) {\n        if (!(rect.right + layoutProp.horizontalSpacing <= nodeRect.x || rect.x - layoutProp.horizontalSpacing >= nodeRect.right\n            || rect.y - layoutProp.verticalSpacing >= nodeRect.bottom\n            || rect.bottom + layoutProp.verticalSpacing <= nodeRect.y)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param {MultiParentModel} model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size } from '../diagram/index';\nimport { Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass, applyStyleAgainstCsp } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId, cloneObject } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    // tslint:disable-next-line:no-any\n    function Palette(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the drag size of the individual palette items.\n */\nvar SymbolDragSize = /** @class */ (function (_super) {\n    __extends(SymbolDragSize, _super);\n    function SymbolDragSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"height\", void 0);\n    return SymbolDragSize;\n}(ChildProperty));\nexport { SymbolDragSize };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.oldObject = null;\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        _this.paletteid = 88123;\n        _this.checkOnRender = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = (_this.selectedSymbol && _this.selectedSymbol.id) || e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param {SymbolPaletteModel} newProp - Defines the new values of the changed properties\n     * @param {SymbolPaletteModel} oldProp - Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                        if (isBlazor() && newProp.palettes[index].symbols === null) {\n                            this.updateBlazorProperties(newProp);\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * @private\n     */\n    SymbolPalette.prototype.updateBlazorProperties = function (newProp) {\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var palObj = { palette: newProp.palettes };\n            var obj = { 'methodName': 'UpdateBlazorProperties', 'paletteobj': palObj };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-symbolpalette').length;\n            this.element.id = 'symbolpalette_' + this.paletteid + '_' + collection;\n        }\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.created = function () {\n            _this.checkOnRender = true;\n        };\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            var isAllowDatabind = _this.allowServerDataBinding;\n            _this.allowServerDataBinding = false;\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n            _this.allowServerDataBinding = isAllowDatabind;\n        };\n        this.accordionElement.expanding = function (args) {\n            if (_this.checkOnRender) {\n                var diagramArgs = { element: args.element, content: args.content, index: args.index, cancel: false,\n                    isExpanded: args.isExpanded, palette: _this.palettes[args.index] };\n                var event_1 = 'paletteExpanding';\n                _this.trigger(event_1, diagramArgs);\n                args.cancel = diagramArgs.cancel;\n            }\n        };\n        this.element.appendChild(accordionDiv);\n        var measureWindowElement = 'measureElement';\n        if (window[measureWindowElement]) {\n            window[measureWindowElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    /**\n     * Add particular palettes to symbol palette at runtime.\n     * @param { PaletteModel } palettes - Defines the collection of palettes to be added\n     * @blazorArgsType palettes|System.Collections.ObjectModel.ObservableCollection<SymbolPalettePalette>\n     */\n    SymbolPalette.prototype.addPalettes = function (palettes) {\n        var palette;\n        for (var i = 0; i < palettes.length; i++) {\n            var isEnableServerDatabind = this.allowServerDataBinding;\n            this.isProtectedOnChange = true;\n            this.allowServerDataBinding = false;\n            palette = new Palette(this, 'palettes', palettes[i], true);\n            this.palettes.push(palette);\n            this.initSymbols(palette);\n            this.allowServerDataBinding = isEnableServerDatabind;\n            this.isProtectedOnChange = false;\n            this.renderPalette(palette);\n        }\n        this.bulkChanges = {};\n        this.accordionElement.refresh();\n    };\n    /**\n     * @private\n     */\n    SymbolPalette.prototype.removePalette = function (paletteId) {\n        for (var i = 0; i < this.palettes.length; i++) {\n            if (this.palettes[i].id === paletteId) {\n                this.palettes.splice(i, 1);\n                this.accordionElement.items.splice(i, 1);\n                break;\n            }\n        }\n    };\n    /**\n     * Remove particular palettes to symbol palette at runtime\n     * @param {string[]} palettes - Defines the collection of palettes to be remove\n     * @blazorArgsType palettes|string[]\n     */\n    SymbolPalette.prototype.removePalettes = function (palettes) {\n        var isEnableServerDatabind = this.allowServerDataBinding;\n        this.allowServerDataBinding = false;\n        for (var i = 0; i < palettes.length; i++) {\n            this.removePalette(palettes[i]);\n        }\n        this.accordionElement.refresh();\n        this.allowServerDataBinding = isEnableServerDatabind;\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol, isChild) {\n        paletteSymbol = cloneObject(paletteSymbol);\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    var isEnableServerDatabind_1 = this.allowServerDataBinding;\n                    this.allowServerDataBinding = false;\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                    this.allowServerDataBinding = isEnableServerDatabind_1;\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                var isEnableServerDatabind = this.allowServerDataBinding;\n                this.allowServerDataBinding = false;\n                this.prepareSymbol(obj);\n                this.allowServerDataBinding = isEnableServerDatabind;\n                this.symbolTable[obj.id] = obj;\n                if (isChild) {\n                    this.childTable[obj.id] = obj;\n                }\n                else {\n                    var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                    if (paletteDiv) {\n                        paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                    }\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            else if (isBlazor()) {\n                symbolInfo = this.getBlazorSymbolInfo(symbol, symbolInfo);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getBlazorSymbolInfo = function (symbol, symbolInfo) {\n        var node = symbol;\n        var shapeSymbolInfo = node.symbolInfo;\n        if (shapeSymbolInfo) {\n            symbolInfo.description = shapeSymbolInfo.description || this.symbolInfo.description;\n            symbolInfo.fit = shapeSymbolInfo.fit || this.symbolInfo.fit;\n            symbolInfo.height = shapeSymbolInfo.height || this.symbolInfo.height;\n            symbolInfo.width = shapeSymbolInfo.width || this.symbolInfo.width;\n            symbolInfo.tooltip = shapeSymbolInfo.tooltip || this.symbolInfo.tooltip;\n            symbolInfo.template = shapeSymbolInfo.template || this.symbolInfo.template;\n        }\n        return symbolInfo;\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.id = parent.id + '_text';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        this.allowServerDataBinding = false;\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        var symbolPreview = symbol.previewSize;\n        if ((symbol && (symbolPreview.width || symbolPreview.height)) ||\n            this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (symbolPreview.width || this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (symbolPreview.height || this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                // BLAZ-3223: translate applied only for Basic and Flow now and need to add for remaining shapes in future \n                if (symbol.shape.type === 'Basic' || symbol.shape.type === 'Flow') {\n                    style += 'transform: scale(0.5) translate(-' + canvas.width / 2 + 'px, -' + canvas.height / 2 + 'px);';\n                }\n                else {\n                    style += 'transform:scale(0.5);';\n                }\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        applyStyleAgainstCsp(((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas), style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        this.allowServerDataBinding = true;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            applyStyleAgainstCsp(((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas), style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.oldObject, newValue: id };\n                    var event_2 = 'paletteSelectionChange';\n                    this.trigger(event_2, args);\n                    this.oldObject = id;\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape.type === 'Bpmn' && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        applyStyleAgainstCsp(searchDiv, 'backgroundColor:white;height:30px');\n        //  searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        applyStyleAgainstCsp(textBox, 'width:100%;height:auto');\n        //textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property({ fit: true })\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Complex({}, SymbolDragSize)\n    ], SymbolPalette.prototype, \"symbolDragSize\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteExpanding\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.overviewid = 88123;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param {OverviewModel} newProp - Lists the new values of the changed properties\n     * @param {OverviewModel} oldProp - Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-overview').length;\n            this.element.id = 'overview_' + this.overviewid + '_' + collection;\n        }\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; margin-top:6px; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        if (!document.getElementById(this.element.id + '_nativeLayer_svg')) {\n            var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n            var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n            nativeLayerSvg.appendChild(nativeLayer);\n            view.diagramLayerDiv.appendChild(nativeLayerSvg);\n            setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n        }\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y + 1, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height + 3, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 11, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 11, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y + 3, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y + 3, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height + 3, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height + 3, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","id","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","AllowMovingOutsideLane","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","moveSwinLaneChild","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","enableServerDataBinding","nodes","isBlazor","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","isLane","canLaneInterchange","LineRouting","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","getDiagramElement","appendChild","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","columnDefinitions","rowDefinitions","canvas","laneHeader","Canvas","childNode","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","totalHeight","phaseHeight","phaseOffset","initGridRow","cols","k","totalWidth","createColumn","initGridColumns","setDefinitions","randomId","annotations","annotation","addObjectToGrid","addObject","headerDefine","phaseDefine","laneCollection","isPhase","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","ReadOnly","RowDefinition","ColumnDefinition","getConnectors","isRowUpdate","edges","conn","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","findStartLaneIndex","updateChildOuterBounds","checkLaneChildrenOffset","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","changeHeaderIndex","columnSpan","updateColumnIndex","updateSwimLaneChildPosition","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","headerNode","addLane","count","redoObj","orientation_1","Lane","cause","state","cancel","triggerEvent","DiagramEvent","collectionChange","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addLastPhase","phaseObj","Phase","fristRow","i_2","nextCell","prevCell","addSwimlanePhases","addHorizontalPhase","nextPhaseNode","prevRow","addVerticalPhase","desiredCellWidth","desiredCellHeight","changeCell","zIndex","arrangeChildInGrid","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","deleteNode","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","findPhaseIndex","phaseLength","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","removeHorizontalPhase","prevChild","phaseRowIndex","prevHeight","removeVerticalPhase","findLane","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","getSpaceValue","intervals","isLine","space","getInterval","newInterval","setUMLActivityDefaults","umlActivityShape","umlActivityFlow","flow","setConnectorDefaults","bpmnFlow","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","hasSubTree","canEnableSubTree","layoutInfo","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","serialize","removeNodes","getSwimLaneChildren","clonedObject","getCustomProperty","serializationSettings","preventDefaults","removeUnnecessaryNodes","JSON","stringify","defaultObject","isNodeShape","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","SwimLane","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","getConstructor","properties","properties_1","every","isSameArray","preventArrayDefaults","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateGradient","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","basicShape","flowShapeElement","flowShape","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","removeChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getCollectionChangeEventArguements","args1","cloneBlazorObject","getDropEventArguements","arg","getPoint","w","h","cornerPoint","trans","checkBrowserInfo","navigator","platform","Browser","info","canMeasureDecoratorPath","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","UpdateBlazorDiagramModel","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","getChildNode","childNodes","nodeType","measurePath","measureWindowElement","window","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","laneWidth","txtValue","bounds1","breakWord","bBoxText","dy","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","updatePath","bBox","newPathString","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","CSS","escape","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getUserHandleLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","nodeObject","sentNode","svgContent","div_1","innerHTML","getElementsByTagName","outerHTML","isTemplate","compiledString","getNodeTemplate","template","compile","cloneNode","svg","applyStyleAgainstCsp","trim","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","setAttributeNS","measureElementCount","setChildPosition","getTemplateContent","annotationcontent","annotationTemplate","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","getIndex","comp","templateCompiler","querySelectorAll","baseTemplateComplier","additionalProp","cloneBlazorProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","Decorator","Shape","IconShape","BpmnTask","BpmnSubProcess","Port","Annotation","Margin","TextStyle","ShapeStyle","updateCloneProp","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","connectorEditingToolModule","allowDrag","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","DiagramGradient","LinearGradient","RadialGradient","Thickness","Gradient","Collection","ComplexFactory","DiagramShapeStyle","BlazorAction","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","inversedAlignment","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","callback","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","absoluteBounds","pointTimer","setTimeout","sample","sampleLength","pathNode","pathLength","getTotalLength","getPointAtLength","findSegmentPoints","translatedPts","translatePoints","imageSource","stretch","contentSize","onload","event","loadedImage","currentTarget","measureImage","canReset","nativeSVG","measureNativeContent","templatePosition","getAvailableSize","measureNativeSvg","Complex","Connect","Hyperlink","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","DiagramTooltip","SymbolSize","SymbolPaletteInfo","NodeBase","nodeTemplate","templateFn","getConnectorType","DiagramConnectorShape","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","DiagramConnectorSegment","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","setPortID","targetPortID","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","annotationType","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","diagramAction","len","DecoratorPropertyChange","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","cloneSelectedObjects","isEnableServerDatabind","allowServerDataBinding","clonedSelectedItems","pathseqData","pathElement","checkPort","beginningpoint","transferpt","startpoint","endpoint","StackPanel","considerPadding","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","LayoutInfo","getShapeType","DiagramShape","BpmnTransactionSubProcess","trigger","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","bpmnShape","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","childNodesHeight","innerHtmlTextElement","svgLabelAlign","setText","isHorizontalLane","parentOffsetX","parentOffsetY","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","location","protocol","host","pathname","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","isPreviewNode","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","diagramUserHandlelayer","disableConnectors","disableNodes","pathSize","newData","pathColor","handleContent","sourceWidth","sourceHeight","templateContent","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","gridType","verticalLineIntervals","verticalGridlines","lineIntervals","dotIntervals","horizontalLineIntervals","horizontalGridlines","dynamicGrid","scaledIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","lineDashArray","updateLineIntervals","lineColor","renderDotGrid","spacey","vLine","updateGrid","svgGrid","snapIntervals","gridlines","parentWidth","parentHeight","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","domTable","expandCollapse","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","FitOptions","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","DeepDiffMapper","valueCreated","valueUpdated","valueDeleted","valueUnchanged","newNodeObject","newConnectorObject","diagramObject","updateObjectCollection","getOldObject","isNode","oldNodeObjects","oldConnectorObjects","changeSegments","removeNullValues","newSegments","removeNullObjectValues","newSegObject","getDifferenceValues","labelDrag","diffValue","frameObject","removeEmptyValues","getDiagramObjects","getLayerObject","oldDiagram","diffLayers","newDiagram","sfIndex","tempObject","objectValue","removeArrayValues","newValue","frame","obj1","obj2","arrayName","isFunction","isValue","compareValues","ss","value2","kk","value1","isDate","getTime","isObject","final","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","__generator","verb","op","f","TypeError","_","ops","pop","trys","sent","throw","return","Symbol","iterator","ToolBase","protectChange","deepDiffer","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","enableCloneObject","ismouseEvents","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","getBlazorOldValues","LabelDragTool","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","isUserHandle","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","updateBlazorSelector","selectObjects","labelSelect","ConnectTool","isConnected","temparg","segmentpoint1","segmentpoint2","oldConnector","oldValue","connectorTargetValue","connectorEnd","connectionChange","tempArgs","canCancel","ConnectorDrawingTool","selectedSegment","nodeEndId","portEndId","oldValues","targetPortName","targetNodeNode","connectorSourceValue","updateConnectorValue","updateSelector","removeSnap","changeAnnotationDrag","findTarget","sourcePointChange","targetPointChange","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","targetPosition","allowDrop","isPreventHistory","blazorArgs","historyAdded","entry_1","isEndGroup","positionChange","dragSelectedObjects","getBlazorPositionChangeEventArgs","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","object_2","rotateChange","rotatePropertyChnage","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","blazarArgs","scaleWidth","scaleHeight","deltaValues","entry_2","sizeChange","scaleSelectedItems","scaleObjects","changes","getChanges","change","AspectRatio","NodeDrawingTool","setFocus","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","dataBinding","updatePanState","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","keyArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseUp","onUserHandleMouseEnter","onUserHandleMouseDown","userHandleObject","isScrolling","preventDefault","oldSelectedObjects","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","hoverNode","checkAction","isSwimlaneElements","drawRulerMarkers","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","getConnectorPadding","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","checkMenu","userAgent","contextMenuModule","contextMenu","hasStack","updateSelectedNodeProperties","disbleRenderSelector","renderSelector","click","getBlazorClickEventArgs","targetObject","selectedConnector","ConnectToNearByPort","connectionPadding","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","marker","markers","removeRulerMarkers","blazorActions","interaction","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","getKeyModifier","getlabel","Control","Shift","Alt","Meta","keyUp","movingPosition","autoScrollBorder","delay","autoScroll","targets","mouseEnter","getBlazorCollectionObject","lastObjectUnderMouse","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","currentConnector","nearNode","ConnectToNearByNode","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","laneId","firstlane","updateContainerPropertiesExtend","realActions","EnableGroupAction","updateLaneChildNode","innerNode","actions","layerTarger","endPadding","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","eventHandler","findTargetElement","portElement_2","objj1","portElement_1","selected","Layer","objectZIndex","zIndexTable","CommandHandler","newSelectedObjects","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","newChanges","oldChanges","connectionEnd","dragOverArg","dragOver","returnargs","checkBlazor","insertValue","connectionEventChange","connectedNode","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","UpdateBlazorDiagramModelLayers","isRemove","updatedModel","methodName","diagramobj","updateBlazorProperties","addLayer","isServerUpdate","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","copiedObject","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","UpdateBlazorDiagramModelCollection","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","oldProtectPropertyChangeValue","getProtectPropertyChangeValue","enable","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","canDoMultipleSelection","canDoSingleSelection","selectionChange","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","checkObjectBehind","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","orderCommands","isRedo","sendBackward","sendForward","startZIndex","endZIndex","layerIndex","undoObject_1","layer_2","moveObject","layer_3","sourceId","targetId","intersectArray","temp_1","overlapObject","currentObject","temp_2","redo","historyEntry","temp_3","temp_4","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","isObjectInteraction","canEnableBlazorObject","updateLayerObject","getDiagramOldValues","oldNodeObject","oldConnectorObject","getObjectChanges","previousObject","changedNodes","triggerAction","isTriggered","selectNodes","selectedNodes","selectedConnectors","highlighter","symbolDrag","parentObject","isGroupDragging","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","AnimationClick","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","pivotValue","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","isOutsideBoundary","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","PreventZIndexOnDragging","DragUsingMouse","preventNodesUpdate","PreventIconsUpdate","view","refreshCanvasDiagramLayer","expandNode","expand","preventConnectorsUpdate","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","resetSegments","getparentexpand","boolean","previousNode","previousNodeObject","previousConnectorObject","updateNodeObject","updateConnectorObject","changeNodes","changeConnectors","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","eventCheck","PanInProgress","diagramScrollSettings","Values","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","panState","scrollChange","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableBounds","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","DiagramSettings","oldDiagramObject","groupTable","isGroup","callBlazorModel","selectionConnectorsList","changedConnectorCollection","changedNodesCollection","previousNodeCollection","previousConnectorCollection","crudDeleteNodes","diagramid","renderTimer","canCloneObject","dataSource","ignoreCollectionWatch","updateAnnotationText","defaultConnector","defaultPropChanges","bulkChanges","join","callFromServer","isOutEdge","loadDiagram","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","Render","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","locale","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","scrollAlone","_k","_l","updateHtmlLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","collapsedNode","changedConnectors","blazorInterop","blazor","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","isLayout","lineRouting","renderPageBreaks","isDevice","hiddenUserHandleTemplate","userHandleTemplate","userHandleFn","createUserHandleTemplates","updateTemplate","updateFitToPage","fitOptions","canFit","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","Ajax","onSuccess","dataManager","send","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","getZoomingAttribute","updateBlazorDiagramProperties","cutCommand","removeProcess","pasteCommand","copyCommand","insertBlazorDiagramObjects","addDiagramLayer","removeDiagramLayer","layerObjectUpdate","leyerObject","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","disableStackContainerPadding","disable","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","addCustomHistoryEntry","sourceValue","historyChange","undo","getBlazorDiagramObjects","PublicMethod","canCall","focusedPoint","zoomTo","updateEventValue","addNodeToLane","hideTooltip","addNode","addChildToGroup","getHistoryStack","isUndoStack","undoStack","redoStack","stackLimit","getEdges","getParentId","addConnector","multiSelectDelete","removalIndexCollection","updatedModelCollection","connectorModelCollection","removalIndex","objectTypeCollection","dgmObj","nodeObj","ObjectType","isMultipleObjects","annotationIndex","annotationNodeIndex","Clear","addBlazorDiagramObjects","nodesCollection","connectorCollection","dataBindingModule","removeNodeEdges","isOutEdges","PreventCollectionChangeOnDragOver","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","PreventHistory","updateSvgNodes","updateTextElementValue","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","nodeIndex","removeCommand","Delete","removeSwimLane","canDelete","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","check","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","preventDiagramUpdate","updatedNodes","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","element_1","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderHiddenUserHandleTemplateLayer","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","updateBazorShape","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","alignedGroups_1","alignGroup","_o","connectors_1","_p","_q","obj_2","_r","_s","obj_3","parents","newList","parentist","setZIndex","layerObject_1","hPan","vPan","panStatus","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","diagramSettings","childCollection","onLoadImageSize","bind","updateChildPosition","onImageLoad","newCommands","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","isInEdges","portEdges","refreshDiagram","isRootInverse","isProtectedChange","renderDocument","renderNodes","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","isUpdateObject","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","isProtectedOnChangeValue","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","templates","getPortContainer","containsMargin","annotation_1","changesAnnotation","oldnodes","newnodes","phaseHeader","textEdit","getBlazorTextEditArgs","isBpmnTextAnnotation","updateTextAnnotationContent","nodeAnnotation","connectorAnnotation","isAction","tempNode_1","updateObject","oldNode","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","oldSelectConstraints","newSelectConstraints","node_2","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","i_4","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","removePortEdges","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","nodeShadow","changedShadow","entryTable","Droppable","over","dragDataHelper","dragData","helper","selectedSymbol","paletteId","getAttribute","nodeDragSize","nodePreviewSize","paletteDragSize","ej2_instances","selectedSymbols","dragSize","previewSize","palettePreview","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","args_1","getBlazorDragLeaveEventArgs","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","replace","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","recordOrderCommandChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","ignoreProperty","getProperty","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","considerWalkable","isUpdate","extraBounds","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","isContains","intersectRect","findEndPoint","isPortBounds","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","InheritLineRouting","canEnableRouting","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","yValue","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","isNodeOverLap","calculateRectValue","nodeRect","tempnode1","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolDragSize","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","paletteid","checkOnRender","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","paletteobj","palette","accordionDiv","Accordion","created","isAllowDatabind","expanding","updatePalettes","measureElemnt","addPalettes","initSymbols","renderPalette","removePalette","removePalettes","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","isEnableServerDatabind_1","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","getBlazorSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","shapeSymbolInfo","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","elements","removeElementsByClass","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","overviewid","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}