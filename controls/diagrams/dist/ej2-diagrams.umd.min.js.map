{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/utility/uml-util.js","../src/diagram/interaction/container-interaction.js","../src/diagram/utility/swim-lane-util.js","../src/diagram/ruler/ruler.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/objects/annotation.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/diagram/interaction/selector.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/core/containers/grid.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/serialization-settings.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = void 0;\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n            }\n        }\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode) {\n    var laneIndex = findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane) {\n    var shape = swimLane.shape;\n    if (shape.lanes.length === 1) {\n        diagram.remove(swimLane);\n    }\n    else {\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        var row = void 0;\n        var i = void 0;\n        var cell = void 0;\n        var j = void 0;\n        var child = void 0;\n        var grid = swimLane.wrapper.children[0];\n        var laneIndex = findLaneIndex(swimLane, lane);\n        var undoObj = cloneObject(shape.lanes[laneIndex]);\n        removeLaneChildNode(diagram, swimLane, lane);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                redoObject: cloneObject(lane), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        shape.lanes.splice(laneIndex, 1);\n        if (shape.orientation === 'Horizontal') {\n            row = grid.rows[lane.rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeRow(lane.rowIndex);\n        }\n        else {\n            swimLane.width = (swimLane.width !== undefined) ?\n                swimLane.width - grid.rows[0].cells[lane.columnIndex].actualSize.width : swimLane.width;\n            for (i = 0; i < grid.rows.length; i++) {\n                cell = grid.rows[i].cells[lane.columnIndex];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeColumn(lane.columnIndex);\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        ChangeLaneIndex(diagram, swimLane, lane.rowIndex);\n        diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phase.columnIndex];\n            prevCell = (row.cells.length - 1 === phase.columnIndex) ? row.cells[phase.columnIndex - 1] :\n                row.cells[phase.columnIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phase.columnIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phase.columnIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    grid.removeColumn(phase.columnIndex);\n    if ((phase.columnIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phase.columnIndex].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phase.columnIndex - 1].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    row = grid.rows[phase.rowIndex];\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phase.rowIndex - 1] : grid.rows[phase.rowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    grid.removeRow(phase.rowIndex);\n    if ((phase.rowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phase.rowIndex].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phase.rowIndex - 1].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n            actualObject.wrapper.children[0].canMeasurePath = true;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)));\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj.shape.type === 'SwimLane') {\n                connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n            }\n            if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                    this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                    target = this.diagram.getObject(target.parentId);\n                }\n            }\n            if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                target.container && target.container.type === 'Canvas' && target.isLane &&\n                obj.isLane && target.parentId === obj.parentId) {\n                laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                history.isPreventHistory = true;\n            }\n            else {\n                var parentNode = this.diagram.nameTable[obj.parentId];\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    obj.offsetX = helperObject.offsetX;\n                    obj.offsetY = helperObject.offsetY;\n                    if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                        obj.width = helperObject.width;\n                        obj.height = helperObject.height;\n                    }\n                    obj.rotateAngle = helperObject.rotateAngle;\n                }\n                var undoElement = void 0;\n                if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                    this.diagram.startGroupAction();\n                    hasGroup = true;\n                }\n                if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                    var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                    undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                    if (index > -1) {\n                        var children = parentNode.children;\n                        children.splice(children.indexOf(obj.id), 1);\n                        this.diagram.nameTable[obj.id].parentId = '';\n                        hasStack = true;\n                        parentNode.wrapper.children.splice(index, 1);\n                    }\n                }\n                moveChildInStack(obj, target, this.diagram, this.action);\n                parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                    (this.diagram.nameTable[obj.parentId] || obj);\n                if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                    parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                    parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                    isChangeProperties = true;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                }\n                if (obj.shape.lanes) {\n                    this.updateLaneChildNode(obj);\n                }\n                if (isChangeProperties) {\n                    parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                    parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                }\n                if (hasStack) {\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    var entry = {\n                        type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                        undoObject: undoElement, category: 'Internal'\n                    };\n                    if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                        this.diagram.addHistoryEntry(entry);\n                    }\n                }\n                if (obj && obj.container && (obj.container.type === 'Stack' ||\n                    (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                    });\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = false;\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, this.diagram);\n            history.hasStack = hasGroup;\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        var port = this.getConnectedPort(sourceNode, obj);\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        var targetPort = this.getConnectedPort(targetNode, obj);\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, 0);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if (value && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: args.droppedElement,\n                    element: undefined,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: undefined\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo);\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","ReadOnly","verticalAlignment","horizontalAlignment","initObject","nodes","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","scale","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","updateDiagramObject","renderContainerHelper","selectedObject","helperObject","selectedItems","connectors","actualObject","minWidth","maxHeight","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","isLane","measure","Size","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","currentSymbol","getObject","indexOf","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","columnDefinitions","rowDefinitions","canvas","laneHeader","Canvas","childNode","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","totalHeight","phases","phaseHeight","phaseOffset","initGridRow","cols","k","totalWidth","createColumn","initGridColumns","setDefinitions","annotation","addObjectToGrid","addObject","headerDefine","phaseDefine","laneCollection","isPhase","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","RowDefinition","ColumnDefinition","getConnectors","isRowUpdate","edges","conn","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","findStartLaneIndex","updateChildOuterBounds","checkLaneChildrenOffset","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addLastPhase","phaseObj","Phase","fristRow","i_2","nextCell","prevCell","addSwimlanePhases","addHorizontalPhase","nextPhaseNode","prevRow","addVerticalPhase","desiredCellWidth","desiredCellHeight","changeCell","zIndex","arrangeChildInGrid","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","deleteNode","removeFromAQuad","removeObjectsFromLayer","removeChildren","removePhase","findPhaseIndex","phaseLength","actualChild","prevCanvas","prevChild_1","prevNode","object_1","removeColumn","removeHorizontalPhase","prevChild","removeRow","removeVerticalPhase","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","serialize","removeNodes","getSwimLaneChildren","clonedObject","getCustomProperty","serializationSettings","preventDefaults","removeUnnecessaryNodes","JSON","stringify","defaultObject","isNodeShape","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","SwimLane","Header","PointPort","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","getConstructor","properties","properties_1","property","Array","every","isSameArray","preventArrayDefaults","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","ports","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","key","cx","cy","fx","fy","stops","updateGradient","gradient","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","getChildNode","Browser","info","childNodes","nodeType","measurePath","measureElement","window","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","updatePath","bBox","newPathString","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","setAttributeNS","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","absoluteBounds","pointTimer","setTimeout","sample","sampleLength","pathNode","pathLength","getTotalLength","getPointAtLength","findSegmentPoints","translatedPts","translatePoints","template","nativeSVG","measureNativeContent","contentSize","templatePosition","getAvailableSize","measureNativeSvg","canMeasure","textNodes","textWrapBounds","imageSource","stretch","measureImage","Hyperlink","Annotation","InheritReadOnly","Complex","defaultValue","isArray","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Connect","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","option","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","updatePortEdges","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","alignElement","updateConnectorEdges","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","PreventHistory","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","removeSwimLane","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","removeLane","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","element_1","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","getConnectedPort","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","swimLaneObj","child1","child2","findChild","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","innerHTML","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","measureElemnt","initSymbols","symbolGroup","laneHeight","laneWidth","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}