{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/utility/connector.js","../src/diagram/objects/tooltip.js","../src/diagram/objects/connector.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/constraints-util.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/interaction/container-interaction.js","../src/diagram/utility/swim-lane-util.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/uml-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/core/appearance.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/ruler/ruler.js","../src/diagram/interaction/selector.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/core/containers/grid.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/objects/node.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-mapping.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/serialization-settings.js","../src/diagram/diagram/custom-cursor.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/interaction/line-routing.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Bpmn':\n                return BpmnFlow;\n            case 'UmlActivity':\n                return ActivityFlow;\n            case 'UmlClassifier':\n                return RelationShip;\n            default:\n                return ConnectorShape;\n        }\n    }\n    return ConnectorShape;\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Straight':\n                return StraightSegment;\n            case 'Bezier':\n                return BezierSegment;\n            case 'Orthogonal':\n                return OrthogonalSegment;\n            default:\n                return StraightSegment;\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if ((!diagram.currentSymbol) && (checkParentAsContainer(diagram, object) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 || shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            var undoObj = cloneObject(shape.lanes[laneIndex]);\n            removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                    redoObject: cloneObject(lane), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            shape.lanes.splice(laneIndex, 1);\n            var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                (findStartLaneIndex(swimLane) + laneIndex);\n            if (shape.orientation === 'Horizontal') {\n                row = grid.rows[index];\n                for (i = 0; i < row.cells.length; i++) {\n                    cell = row.cells[i];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeRow(index);\n            }\n            else {\n                swimLane.width = (swimLane.width !== undefined) ?\n                    swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                for (i = 0; i < grid.rows.length; i++) {\n                    cell = grid.rows[i].cells[index];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeColumn(index);\n            }\n            swimLane.width = swimLane.wrapper.width = grid.width;\n            swimLane.height = swimLane.wrapper.height = grid.height;\n            swimLaneMeasureAndArrange(swimLane);\n            ChangeLaneIndex(diagram, swimLane, index);\n            diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            switch (child.shape.flow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            switch (child.shape.flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(this.currentTarget);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target }, position: this.currentPosition, cancel: false\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nvar getShapeType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Basic':\n                return BasicShape;\n            case 'Flow':\n                return FlowShape;\n            case 'Path':\n                return Path;\n            case 'Image':\n                return Image;\n            case 'Text':\n                return Text;\n            case 'Bpmn':\n                return BpmnShape;\n            case 'Native':\n                return Native;\n            case 'HTML':\n                return Html;\n            case 'UmlActivity':\n                return UmlActivityShape;\n            case 'UmlClassifier':\n                return UmlClassifierShape;\n            case 'SwimLane':\n                return SwimLane;\n            default:\n                return BasicShape;\n        }\n    }\n    return BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                parentHtmlElement.appendChild(htmlElement);\n                canvas.appendChild(parentHtmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    getHTMLLayer(this.diagramId).children[0];\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    arg = {\n                        source: cloneBlazorObject(args.source), state: 'Completed',\n                        oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                        target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                        allowDrop: arg.allowDrop, cancel: arg.cancel\n                    };\n                    if (isBlazor()) {\n                        arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                    }\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                if (isBlazor) {\n                    arg = getDropEventArguements(args, arg);\n                }\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isBlazor()) {\n            arg = this.getBlazorPositionChangeEventArgs(arg, args.target);\n        }\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        if (!arg1.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        if (arg1.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (currentAction === this.diagram.selectedItems.userHandles[i].name) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    this.diagram.triggerEvent(eventName, arg);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor()) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            } || isBlazor())) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: cloneBlazorObject(target),\n            element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n            actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n        };\n        if (isBlazor()) {\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                arg = {\n                    source: { selector: cloneBlazorObject(obj) } || { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        obj.offsetX = helperObject.offsetX;\n                        obj.offsetY = helperObject.offsetY;\n                        if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                            obj.width = helperObject.width;\n                            obj.height = helperObject.height;\n                        }\n                        obj.rotateAngle = helperObject.rotateAngle;\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                    }\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } }\n            };\n        }\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changed', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint,\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                    node.offsetX = node.wrapper.offsetX;\n                }\n                if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                    node.offsetY = node.wrapper.offsetY;\n                }\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: 'Changing', type: 'Addition', cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(obj, arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        if (isBlazor()) {\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n        }\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: cloneBlazorObject(oldValue ? oldValue : []),\n                newValue: cloneBlazorObject(this.getSelectedObject()),\n                cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n            };\n            this.updateBlazorSelectorModel(oldValue);\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue);\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (isBlazor()) {\n                arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n            }\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(arrayNodes, true);\n            if (triggerAction) {\n                if (isBlazor()) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                }\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n            this.updateSelector();\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                updateDefaultValues(node, child, _this.connectorDefaults);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                newValue: cloneBlazorObject(newProp.nodes[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { node: cloneBlazorObject(actualObject) };\n                                args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                args.newValue = { node: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                newValue: cloneBlazorObject(newProp.connectors[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { connector: cloneBlazorObject(actualObject) };\n                                args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                args.newValue = { connector: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = {\n                element: cloneBlazorObject(this), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args.element = { diagram: cloneBlazorObject(this) };\n                args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                args.newValue = { diagram: cloneBlazorObject(newValue) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                        view.updateHtmlLayer(view);\n                    }\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n        this.renderComplete();\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change)\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            this.historyManager.startGroupAction();\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            this.historyManager.endGroupAction();\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param obj Defines the node that has to be added to diagram\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param obj Defines the connector that has to be added to diagram\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(currentObj.id + '_html_element', elementId);\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            if (isBlazor()) {\n                node = this.nameTable[node.id] || node;\n            }\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            if (nodes_1.length > 0) {\n                this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n            }\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            var updatedNodes = nodes;\n            for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                var obj = updatedNodes_1[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                var conn = _b[_a];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor()) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                source: cloneBlazorObject(this)\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.updateQuad(this.nodes[i]);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if (layer === undefined || (layer && layer.visible)) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    this.updateDiagramObject(actualObject);\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldObject), newValue: cloneBlazorObject(node)\n            };\n            if (isBlazor()) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = void 0;\n                arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(_this.droppable[source]),\n                        element: getObjectType(_this.currentSymbol) === Connector ? { connector: cloneBlazorObject(_this.currentSymbol) } : { node: cloneBlazorObject(_this.currentSymbol) },\n                        cancel: false,\n                        position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: cloneBlazorObject(args.droppedElement),\n                    element: undefined,\n                    target: cloneBlazorObject(_this.eventHandler['hoverNode'] || (_this.eventHandler['lastObjectUnderMouse']) || _this), cancel: false,\n                    position: undefined\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(args.droppedElement),\n                        element: undefined,\n                        cancel: false,\n                        position: undefined,\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, {\n                    element: cloneBlazorObject(_this.currentSymbol), diagram: cloneBlazorObject(_this)\n                });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagram = cloneBlazorObject(this);\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagram: cloneBlazorObject(this)\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'] - this.size;\n        var top = diagram.spatialSearch['pageTop'] - this.size;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    grid_1.nodeId = [];\n                    grid_1.walkable = true;\n                }\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                // x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","id","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","LineRouting","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","columnDefinitions","rowDefinitions","canvas","laneHeader","Canvas","childNode","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","totalHeight","phaseHeight","phaseOffset","initGridRow","cols","k","totalWidth","createColumn","initGridColumns","setDefinitions","annotations","annotation","addObjectToGrid","addObject","headerDefine","randomId","phaseDefine","laneCollection","isPhase","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","ReadOnly","RowDefinition","ColumnDefinition","getConnectors","isRowUpdate","edges","conn","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","findStartLaneIndex","updateChildOuterBounds","checkLaneChildrenOffset","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addLastPhase","phaseObj","Phase","fristRow","i_2","nextCell","prevCell","addSwimlanePhases","addHorizontalPhase","nextPhaseNode","prevRow","addVerticalPhase","desiredCellWidth","desiredCellHeight","changeCell","zIndex","arrangeChildInGrid","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","deleteNode","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","findPhaseIndex","phaseLength","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","removeHorizontalPhase","prevChild","phaseRowIndex","prevHeight","removeVerticalPhase","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","setConnectorDefaults","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","serialize","removeNodes","getSwimLaneChildren","clonedObject","getCustomProperty","serializationSettings","preventDefaults","removeUnnecessaryNodes","JSON","stringify","defaultObject","isNodeShape","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","SwimLane","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","getConstructor","properties","properties_1","every","isSameArray","preventArrayDefaults","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateGradient","gradient","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getCollectionChangeEventArguements","args1","isBlazor","cause","cancel","cloneBlazorObject","getDropEventArguements","arg","currentTarget","currentPosition","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","getChildNode","Browser","info","childNodes","nodeType","measurePath","measureElement","window","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","laneWidth","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","updatePath","bBox","newPathString","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","template","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","setAttributeNS","measureElementCount","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","connectorEditingToolModule","allowDrag","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","absoluteBounds","pointTimer","setTimeout","sample","sampleLength","pathNode","pathLength","getTotalLength","getPointAtLength","findSegmentPoints","translatedPts","translatePoints","imageSource","stretch","contentSize","measureImage","nativeSVG","measureNativeContent","templatePosition","getAvailableSize","measureNativeSvg","Port","Complex","Connect","Hyperlink","Annotation","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","getBlazorPositionChangeEventArgs","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseEnter","isScrolling","preventDefault","onUserHandleMouseDown","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","isSwimlaneElements","drawRulerMarkers","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","onUserHandleMouseUp","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","updateSelectedNodeProperties","renderSelector","getBlazorClickEventArgs","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","movingPosition","autoScrollBorder","delay","autoScroll","targets","getBlazorCollectionObject","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","connectorTargetValue","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","ejsInterop","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","defaultConnector","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","updateHtmlLayer","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","sourceValue","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","updateEventValue","addNodeToLane","laneId","hideTooltip","addNode","addConnector","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","PreventHistory","updateSvgNodes","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","removeSwimLane","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","nodesCollection","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","InheritLineRouting","canEnableRouting","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","layoutInfo","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","measureElemnt","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","elements","removeElementsByClass","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}